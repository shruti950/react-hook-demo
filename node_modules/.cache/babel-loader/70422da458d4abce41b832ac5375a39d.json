{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainer.js\";\nimport React, { Component, useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\nimport UserContainerForm from \"./UserContainerForm\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport childComponent from \"./UserContainerUpdate\";\nimport UserContainerUpdate from \"./UserContainerUpdate\";\nimport SearchField from \"react-search-field\"; // import SearchBar from \"./SearchBar\";\n// import SearchPage from \"./searchPage\";\n\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, useHistory, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      setOffset(selectedPage + 1);\n    };\n\n    this.addUser = async () => {\n      history.push(\"/adduser\"); // <UserContainerForm />;\n    };\n\n    this.filterContent = (users, searchTerm) => {\n      const result = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n      console.log(\"result\", result);\n      this.setState({\n        users: result\n      });\n    };\n\n    this.onValueChange = e => {\n      // console.log(e.currentTarget.value);\n      const searchTerm = e.currentTarget.value;\n      fetchUsers(); // axios.get(\"http://localhost:9000/\").then((response) => {\n\n      console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\n\n      if (userData) {\n        console.log(\"users for search\", userData);\n        filterContent(userData, searchTerm);\n      } // });\n\n    };\n\n    this.state = {\n      users: [],\n      offset: 0,\n      data: [],\n      perPage: 5,\n      pageCount: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container text-right\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/adduser`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addUser,\n              className: \"btn btn-primary btn-md m-1  \",\n              children: \"ADD USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mt-mb-10 text-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 mt-mb-10  justify-content-left ui icon input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              // ref={inputEl}\n              type: \"search \",\n              placeholder: \"Search Users\",\n              className: \"mt-mb-7 form-control  \" // v\n              ,\n              name: \"searchTerm\",\n              onChange: this.onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" container \",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table mt-5 table-striped justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-left\",\n              children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: `/updateuser/${user._id}`\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: /*#__PURE__*/_jsxDEV(Redirect, {\n                        to: \"/updateuser/${user._id}\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 36\n                      }, this),\n                      className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                      // to={`/updateuser/${user._id}`}\n                      ,\n                      children: \"UPDATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      deleteUserData(user._id, user.name);\n                    },\n                    className: \"btn btn-danger btn-sm m-1 \",\n                    children: \"DELETE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n            previousLabel: \"prev\",\n            nextLabel: \"next\",\n            breakLabel: \"...\",\n            breakClassName: \"break-me\",\n            pageCount: pageCount,\n            marginPagesDisplayed: 2,\n            pageRangeDisplayed: 5,\n            onPageChange: handlePageClick,\n            containerClassName: \"pagination\",\n            subContainerClassName: \"pages pagination\",\n            activeClassName: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserContainer; // const UserContainer = ({ fetchUsers, userData, loadingData }) => {\n//   const [users, setUsers] = useState([]);\n//   const [offset, setOffset] = useState(0);\n//   const [data, setData] = useState([]);\n//   const [perPage] = useState(5);\n//   const [pageCount, setPageCount] = useState(0);\n//   // const [user, setUser] = useState([]);\n//   const inputEl = useRef(\"\");\n//   // const { name, age, email } = user;\n//   const history = useHistory();\n//   useEffect(() => {\n//     if (loadingData === false) {\n//       console.log(\"fetch all users............\");\n//       fetchUsers();\n//       const slice = userData.slice(0, 5);\n//       // console.log(\"users ans slice\", userData, slice);\n//       setUserData(slice);\n//       console.log(\"Data in useeffect\", data);\n//     }\n//   }, []);\n//   const setUserData = (udata) => {\n//     // if (use.length === 0) {\n//     setUsers(udata);\n//     console.log(\"users in setuserDAta\", data, udata);\n//     setOffset(1);\n//     // }\n//   };\n//   useEffect(() => {\n//     if (loadingData === false) {\n//       getData();\n//     }\n//   }, [offset]);\n//   const deleteUserData = async (id, name) => {\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n//       await deleteUsers(id);\n//     } else {\n//       history.push(\"/home\");\n//     }\n//     fetchUsers();\n//     getData();\n//   };\n//   const getData = async () => {\n//     const data = userData || [];\n//     console.log(\"set pagination here.....\", data);\n//     // const newOffset = offset > 0 ? offset - 1 : 0;\n//     // console.log(\"newOffset :: \", newOffset);\n//     const indexOfLastTodo = offset * perPage;\n//     const indexOfFirstTodo = indexOfLastTodo - perPage;\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n//     console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n//     setUsers(slice);\n//     setPageCount(Math.ceil(data.length / perPage));\n//   };\n//   const handlePageClick = (e) => {\n//     const selectedPage = e.selected;\n//     setOffset(selectedPage + 1);\n//   };\n//   const addUser = async () => {\n//     history.push(\"/adduser\");\n//     // <UserContainerForm />;\n//   };\n//   const filterContent = (users, searchTerm) => {\n//     const result = users.filter((user) =>\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     console.log(\"result\", result);\n//     setUsers(result);\n//   };\n//   const onValueChange = (e) => {\n//     // console.log(e.currentTarget.value);\n//     const searchTerm = e.currentTarget.value;\n//     fetchUsers();\n//     // axios.get(\"http://localhost:9000/\").then((response) => {\n//     console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\n//     if (userData) {\n//       console.log(\"users for search\", userData);\n//       filterContent(userData, searchTerm);\n//     }\n//     // });\n//   };\n//   return (\n//     <div>\n//       <Router>\n//         <h2>Users List</h2>\n//         <div className=\"container text-right\">\n//           <Link to={{ pathname: `/adduser` }}>\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\n//               ADD USER\n//             </button>\n//           </Link>\n//         </div>\n//         <div className=\"container mt-mb-10 text-left\">\n//           <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\n//             {/* <SearchPage /> */}\n//             <input\n//               // ref={inputEl}\n//               type=\"search \"\n//               placeholder=\"Search Users\"\n//               className=\"mt-mb-7 form-control  \"\n//               // v\n//               name=\"searchTerm\"\n//               onChange={onValueChange}\n//             />\n//           </div>\n//         </div>\n//         <div className=\" container \">\n//           <table className=\"table mt-5 table-striped justify-content-center\">\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Age</th>\n//                 <th>Email</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"text-left\">\n//               {users.map((user) => (\n//                 <tr key={user._id}>\n//                   <td>{user.name}</td>\n//                   <td>{user.age}</td>\n//                   <td>{user.email}</td>\n//                   <td>\n//                     <Link\n//                       to={{\n//                         pathname: `/updateuser/${user._id}`,\n//                       }}\n//                     >\n//                       <button\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                         className=\"btn btn-success btn-sm m-1  \"\n//                         // component={Link}\n//                         // to={`/updateuser/${user._id}`}\n//                       >\n//                         UPDATE\n//                       </button>\n//                     </Link>\n//                     <button\n//                       onClick={() => {\n//                         deleteUserData(user._id, user.name);\n//                       }}\n//                       className=\"btn btn-danger btn-sm m-1 \"\n//                     >\n//                       DELETE\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//           <ReactPaginate\n//             previousLabel={\"prev\"}\n//             nextLabel={\"next\"}\n//             breakLabel={\"...\"}\n//             breakClassName={\"break-me\"}\n//             pageCount={pageCount}\n//             marginPagesDisplayed={2}\n//             pageRangeDisplayed={5}\n//             onPageChange={handlePageClick}\n//             containerClassName={\"pagination\"}\n//             subContainerClassName={\"pages pagination\"}\n//             activeClassName={\"active\"}\n//           />\n//         </div>\n//       </Router>\n//     </div>\n//   );\n// };\n// const mapStateToProps = (state) => {\n//   console.log(\"state===>\", state.users, state.loading);\n//   const { users, loading } = state;\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\n//   return {\n//     userData: users,\n//     loadingData: loading,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchUsers: () => dispatch(fetchUsers()),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainer.js"],"names":["React","Component","useEffect","useState","useRef","connect","deleteUsers","fetchUsers","updateUsers","UserContainerForm","Autocomplete","childComponent","UserContainerUpdate","SearchField","axios","BrowserRouter","Router","Link","useHistory","Redirect","ReactPaginate","UserContainer","constructor","props","handlePageClick","e","selectedPage","selected","setOffset","addUser","history","push","filterContent","users","searchTerm","result","filter","user","name","toLowerCase","includes","console","log","setState","onValueChange","currentTarget","value","offset","userData","state","data","perPage","pageCount","render","pathname","map","age","email","_id","deleteUserData"],"mappings":"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AA,oBAAoB,EAAE,CANxB;AAOE,YAAA,kBAAkB,EAAE,CAPtB;AAQE,YAAA,YAAY,EAAE5B,eARhB;AASE,YAAA,kBAAkB,EAAE,YATtB;AAUE,YAAA,qBAAqB,EAAE,kBAVzB;AAWE,YAAA,eAAe,EAAE;AAXnB;AAAA;AAAA;AAAA;AAAA,kBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA0FD;;AAnImC;;AAsItC,eAAeH,aAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\r\nimport UserContainerForm from \"./UserContainerForm\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport childComponent from \"./UserContainerUpdate\";\r\nimport UserContainerUpdate from \"./UserContainerUpdate\";\r\nimport SearchField from \"react-search-field\";\r\n// import SearchBar from \"./SearchBar\";\r\n// import SearchPage from \"./searchPage\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nclass UserContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      offset: 0,\r\n      data: [],\r\n      perPage: 5,\r\n      pageCount: 0,\r\n    };\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setOffset(selectedPage + 1);\r\n  };\r\n  addUser = async () => {\r\n    history.push(\"/adduser\");\r\n    // <UserContainerForm />;\r\n  };\r\n  filterContent = (users, searchTerm) => {\r\n    const result = users.filter((user) =>\r\n      user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    console.log(\"result\", result);\r\n    this.setState({ users: result });\r\n  };\r\n  onValueChange = (e) => {\r\n    // console.log(e.currentTarget.value);\r\n    const searchTerm = e.currentTarget.value;\r\n    fetchUsers();\r\n    // axios.get(\"http://localhost:9000/\").then((response) => {\r\n    console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\r\n    if (userData) {\r\n      console.log(\"users for search\", userData);\r\n      filterContent(userData, searchTerm);\r\n    }\r\n    // });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <h2>Users List</h2>\r\n          <div className=\"container text-right\">\r\n            <Link to={{ pathname: `/adduser` }}>\r\n              <button\r\n                onClick={this.addUser}\r\n                className=\"btn btn-primary btn-md m-1  \"\r\n              >\r\n                ADD USER\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"container mt-mb-10 text-left\">\r\n            <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n              {/* <SearchPage /> */}\r\n              <input\r\n                // ref={inputEl}\r\n                type=\"search \"\r\n                placeholder=\"Search Users\"\r\n                className=\"mt-mb-7 form-control  \"\r\n                // v\r\n                name=\"searchTerm\"\r\n                onChange={this.onValueChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\" container \">\r\n            <table className=\"table mt-5 table-striped justify-content-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Age</th>\r\n                  <th>Email</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-left\">\r\n                {users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.age}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/updateuser/${user._id}`,\r\n                        }}\r\n                      >\r\n                        <button\r\n                          onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n                          className=\"btn btn-success btn-sm m-1  \"\r\n                          // component={Link}\r\n                          // to={`/updateuser/${user._id}`}\r\n                        >\r\n                          UPDATE\r\n                        </button>\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => {\r\n                          deleteUserData(user._id, user.name);\r\n                        }}\r\n                        className=\"btn btn-danger btn-sm m-1 \"\r\n                      >\r\n                        DELETE\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContainer;\r\n// const UserContainer = ({ fetchUsers, userData, loadingData }) => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [offset, setOffset] = useState(0);\r\n//   const [data, setData] = useState([]);\r\n//   const [perPage] = useState(5);\r\n//   const [pageCount, setPageCount] = useState(0);\r\n//   // const [user, setUser] = useState([]);\r\n//   const inputEl = useRef(\"\");\r\n//   // const { name, age, email } = user;\r\n//   const history = useHistory();\r\n//   useEffect(() => {\r\n//     if (loadingData === false) {\r\n//       console.log(\"fetch all users............\");\r\n//       fetchUsers();\r\n//       const slice = userData.slice(0, 5);\r\n//       // console.log(\"users ans slice\", userData, slice);\r\n//       setUserData(slice);\r\n//       console.log(\"Data in useeffect\", data);\r\n//     }\r\n//   }, []);\r\n\r\n//   const setUserData = (udata) => {\r\n//     // if (use.length === 0) {\r\n//     setUsers(udata);\r\n//     console.log(\"users in setuserDAta\", data, udata);\r\n//     setOffset(1);\r\n//     // }\r\n//   };\r\n//   useEffect(() => {\r\n//     if (loadingData === false) {\r\n//       getData();\r\n//     }\r\n//   }, [offset]);\r\n\r\n//   const deleteUserData = async (id, name) => {\r\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n//       await deleteUsers(id);\r\n//     } else {\r\n//       history.push(\"/home\");\r\n//     }\r\n//     fetchUsers();\r\n//     getData();\r\n//   };\r\n//   const getData = async () => {\r\n//     const data = userData || [];\r\n//     console.log(\"set pagination here.....\", data);\r\n//     // const newOffset = offset > 0 ? offset - 1 : 0;\r\n//     // console.log(\"newOffset :: \", newOffset);\r\n//     const indexOfLastTodo = offset * perPage;\r\n//     const indexOfFirstTodo = indexOfLastTodo - perPage;\r\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n//     console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n//     setUsers(slice);\r\n//     setPageCount(Math.ceil(data.length / perPage));\r\n//   };\r\n\r\n//   const handlePageClick = (e) => {\r\n//     const selectedPage = e.selected;\r\n//     setOffset(selectedPage + 1);\r\n//   };\r\n//   const addUser = async () => {\r\n//     history.push(\"/adduser\");\r\n//     // <UserContainerForm />;\r\n//   };\r\n//   const filterContent = (users, searchTerm) => {\r\n//     const result = users.filter((user) =>\r\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     console.log(\"result\", result);\r\n//     setUsers(result);\r\n//   };\r\n//   const onValueChange = (e) => {\r\n//     // console.log(e.currentTarget.value);\r\n//     const searchTerm = e.currentTarget.value;\r\n//     fetchUsers();\r\n//     // axios.get(\"http://localhost:9000/\").then((response) => {\r\n//     console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\r\n//     if (userData) {\r\n//       console.log(\"users for search\", userData);\r\n//       filterContent(userData, searchTerm);\r\n//     }\r\n//     // });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Router>\r\n//         <h2>Users List</h2>\r\n//         <div className=\"container text-right\">\r\n//           <Link to={{ pathname: `/adduser` }}>\r\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n//               ADD USER\r\n//             </button>\r\n//           </Link>\r\n//         </div>\r\n//         <div className=\"container mt-mb-10 text-left\">\r\n//           <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n//             {/* <SearchPage /> */}\r\n//             <input\r\n//               // ref={inputEl}\r\n//               type=\"search \"\r\n//               placeholder=\"Search Users\"\r\n//               className=\"mt-mb-7 form-control  \"\r\n//               // v\r\n//               name=\"searchTerm\"\r\n//               onChange={onValueChange}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\" container \">\r\n//           <table className=\"table mt-5 table-striped justify-content-center\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Name</th>\r\n//                 <th>Age</th>\r\n//                 <th>Email</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"text-left\">\r\n//               {users.map((user) => (\r\n//                 <tr key={user._id}>\r\n//                   <td>{user.name}</td>\r\n//                   <td>{user.age}</td>\r\n//                   <td>{user.email}</td>\r\n//                   <td>\r\n//                     <Link\r\n//                       to={{\r\n//                         pathname: `/updateuser/${user._id}`,\r\n//                       }}\r\n//                     >\r\n//                       <button\r\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                         className=\"btn btn-success btn-sm m-1  \"\r\n//                         // component={Link}\r\n//                         // to={`/updateuser/${user._id}`}\r\n//                       >\r\n//                         UPDATE\r\n//                       </button>\r\n//                     </Link>\r\n//                     <button\r\n//                       onClick={() => {\r\n//                         deleteUserData(user._id, user.name);\r\n//                       }}\r\n//                       className=\"btn btn-danger btn-sm m-1 \"\r\n//                     >\r\n//                       DELETE\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <ReactPaginate\r\n//             previousLabel={\"prev\"}\r\n//             nextLabel={\"next\"}\r\n//             breakLabel={\"...\"}\r\n//             breakClassName={\"break-me\"}\r\n//             pageCount={pageCount}\r\n//             marginPagesDisplayed={2}\r\n//             pageRangeDisplayed={5}\r\n//             onPageChange={handlePageClick}\r\n//             containerClassName={\"pagination\"}\r\n//             subContainerClassName={\"pages pagination\"}\r\n//             activeClassName={\"active\"}\r\n//           />\r\n//         </div>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// };\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state===>\", state.users, state.loading);\r\n//   const { users, loading } = state;\r\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n//   return {\r\n//     userData: users,\r\n//     loadingData: loading,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     fetchUsers: () => dispatch(fetchUsers()),\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n"]},"metadata":{},"sourceType":"module"}