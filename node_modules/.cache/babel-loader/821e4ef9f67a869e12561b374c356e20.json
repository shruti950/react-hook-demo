{"ast":null,"code":"import { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE } from \"./userType\";\nimport axios from \"axios\";\nconst usersUrl = \"http://localhost:9000\";\nexport const fetchUser = user => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/\" + user).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchSearchedUser = (searchTerm, offset) => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/users/search/\" + searchTerm + \"/?offset=\" + offset).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user.slice, user.totalPages));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchAllUsers = (offset, limit) => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/?offset=\" + offset + \"&limit=\" + limit).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user.slice, user.page));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  }; // } catch (err) {\n  // }\n  // debugger;\n};\nexport const fetchUsers = () => {\n  //\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(`${usersUrl}/users`).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n}; // export const fetchUsers = (offset, limit) => {\n//\n//   // const offset = 1;\n//   // const limit = 5;\n//   return (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     try {\n//       const response = axios.get(\n//         `${usersUrl}/?offset=${offset}&limit=${limit}`\n//       );\n//         \"ğŸš€ ~ file: userAction.js ~ line 100 ~ return ~ response\",\n//         response\n//       );\n//       dispatch(fetchUserSuccess(response.data));\n//     } catch (error) {\n//       dispatch(fetchUserFailure(error));\n//     }\n//   };\n// };\n// export const insertUsers = (user) => {\n//   return (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     axios\n//       .post(\"http://localhost:9000/\", user)\n//       .then((response) => {\n//         const users = response.data;\n//           \"ğŸš€ ~ file: userAction.js ~ line 46 ~ .then ~ users\",\n//           users\n//         );\n//         dispatch(fetchUserSuccess(users));\n//       })\n//       .catch((error) => {\n//         dispatch(fetchUserFailure(error.msg));\n//       });\n//   };\n// };\n\nexport const insertUsers = async user => {\n  return await axios.post(`${usersUrl}`, user); // .then((response) => {\n  //     \"file: userAction.js ~ line 58 ~ returnawaitaxios.post ~ response\",\n  //     response\n  //   );\n  // })\n  // .catch((error) => {\n  // });\n}; // export const updateUsers = async (id, user) => {\n//   return await axios\n//     .put(`${usersUrl}/${id}`, user)\n// };\n// export const updateUsers = (id, user) => {\n//   return async (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     await axios\n//       .put(\"http://localhost:9000/\" + id, user)\n//       .then((response) => {\n//         const users = response.data;\n//         return dispatch(fetchUserSuccess(users));\n//       })\n//       .catch((error) => {\n//         return dispatch(fetchUserFailure(error));\n//       });\n//   };\n// };\n\nexport const updateUsers = (id, user) => {\n  return async dispatch => {\n    dispatch(fetchUserRequest());\n\n    try {\n      const response = await axios.put(\"http://localhost:9000/\" + id, user);\n      dispatch(fetchUserSuccess(response.data));\n    } catch (error) {\n      dispatch(fetchUserFailure(error));\n    }\n  };\n};\nexport const deleteUsers = async id => {\n  return await axios.delete(`${usersUrl}/${id}`);\n}; // export const deleteUsers = (id) => {\n//   return (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     axios\n//       .delete(`${usersUrl}/${id}`)\n//       .get(\"http://localhost:9000/\")\n//       .then((response) => {\n//         // response.data is the users\n//         const users = response.data;\n//         dispatch(fetchUserSuccess(users));\n//       })\n//       .catch((error) => {\n//         // error.message is the error message\n//         dispatch(fetchUserFailure(error.message));\n//       });\n//   };\n// };\n\nexport const fetchUserRequest = () => {\n  return {\n    type: FETCH_USER_REQUEST\n  };\n};\nexport const fetchUserSuccess = (users, pages) => {\n  return {\n    type: FETCH_USER_SUCCESS,\n    payload: users,\n    totalPage: pages\n  };\n};\nexport const fetchUserFailure = error => {\n  return {\n    type: FETCH_USER_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/apex/project-demo-hook/src/redux/users/userAction.js"],"names":["FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","axios","usersUrl","fetchUser","user","dispatch","fetchUserRequest","get","then","response","data","fetchUserSuccess","catch","error","fetchUserFailure","fetchSearchedUser","searchTerm","offset","slice","totalPages","fetchAllUsers","limit","page","fetchUsers","insertUsers","post","updateUsers","id","put","deleteUsers","delete","type","users","pages","payload","totalPage"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n} from \"./userType\";\r\nimport axios from \"axios\";\r\nconst usersUrl = \"http://localhost:9000\";\r\nexport const fetchUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\"http://localhost:9000/\" + user)\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\nexport const fetchSearchedUser = (searchTerm, offset) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\r\n        \"http://localhost:9000/users/search/\" +\r\n          searchTerm +\r\n          \"/?offset=\" +\r\n          offset\r\n      )\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user.slice, user.totalPages));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchAllUsers = (offset, limit) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\"http://localhost:9000/?offset=\" + offset + \"&limit=\" + limit)\r\n      .then((response) => {\r\n        const user = response.data;\r\n\r\n        dispatch(fetchUserSuccess(user.slice, user.page));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n  // } catch (err) {\r\n  // }\r\n  // debugger;\r\n};\r\nexport const fetchUsers = () => {\r\n  //\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(`${usersUrl}/users`)\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\n// export const fetchUsers = (offset, limit) => {\r\n//\r\n//   // const offset = 1;\r\n//   // const limit = 5;\r\n//   return (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     try {\r\n//       const response = axios.get(\r\n//         `${usersUrl}/?offset=${offset}&limit=${limit}`\r\n//       );\r\n//         \"ğŸš€ ~ file: userAction.js ~ line 100 ~ return ~ response\",\r\n//         response\r\n//       );\r\n\r\n//       dispatch(fetchUserSuccess(response.data));\r\n//     } catch (error) {\r\n//       dispatch(fetchUserFailure(error));\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export const insertUsers = (user) => {\r\n//   return (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     axios\r\n//       .post(\"http://localhost:9000/\", user)\r\n//       .then((response) => {\r\n//         const users = response.data;\r\n//           \"ğŸš€ ~ file: userAction.js ~ line 46 ~ .then ~ users\",\r\n//           users\r\n//         );\r\n//         dispatch(fetchUserSuccess(users));\r\n//       })\r\n//       .catch((error) => {\r\n//         dispatch(fetchUserFailure(error.msg));\r\n//       });\r\n//   };\r\n// };\r\nexport const insertUsers = async (user) => {\r\n  return await axios.post(`${usersUrl}`, user);\r\n  // .then((response) => {\r\n  //     \"file: userAction.js ~ line 58 ~ returnawaitaxios.post ~ response\",\r\n  //     response\r\n  //   );\r\n  // })\r\n  // .catch((error) => {\r\n  // });\r\n};\r\n// export const updateUsers = async (id, user) => {\r\n\r\n//   return await axios\r\n//     .put(`${usersUrl}/${id}`, user)\r\n// };\r\n// export const updateUsers = (id, user) => {\r\n//   return async (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     await axios\r\n//       .put(\"http://localhost:9000/\" + id, user)\r\n//       .then((response) => {\r\n//         const users = response.data;\r\n//         return dispatch(fetchUserSuccess(users));\r\n//       })\r\n//       .catch((error) => {\r\n//         return dispatch(fetchUserFailure(error));\r\n//       });\r\n//   };\r\n// };\r\nexport const updateUsers = (id, user) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    try {\r\n      const response = await axios.put(\"http://localhost:9000/\" + id, user);\r\n\r\n      dispatch(fetchUserSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(fetchUserFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUsers = async (id) => {\r\n  return await axios.delete(`${usersUrl}/${id}`);\r\n};\r\n// export const deleteUsers = (id) => {\r\n//   return (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     axios\r\n//       .delete(`${usersUrl}/${id}`)\r\n//       .get(\"http://localhost:9000/\")\r\n//       .then((response) => {\r\n//         // response.data is the users\r\n//         const users = response.data;\r\n//         dispatch(fetchUserSuccess(users));\r\n//       })\r\n//       .catch((error) => {\r\n//         // error.message is the error message\r\n//         dispatch(fetchUserFailure(error.message));\r\n//       });\r\n//   };\r\n// };\r\nexport const fetchUserRequest = () => {\r\n  return {\r\n    type: FETCH_USER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = (users, pages) => {\r\n  return {\r\n    type: FETCH_USER_SUCCESS,\r\n    payload: users,\r\n    totalPage: pages,\r\n  };\r\n};\r\nexport const fetchUserFailure = (error) => {\r\n  return {\r\n    type: FETCH_USER_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}