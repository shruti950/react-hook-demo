{"ast":null,"code":"import { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE } from \"./userType\";\nimport axios from \"axios\";\nconst usersUrl = \"http://localhost:9000\";\nexport const fetchUser = user => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/hook/\" + user).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchSearchedUser = (searchTerm, offset) => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/hook/users/search/\" + searchTerm + \"/?offset=\" + offset).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user.slice, user.totalPages));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchAllUsers = (offset, limit) => {\n  console.log(\"%c ðŸ•’: fetchAllUsers -> offset, limit \", \"font-size:16px;background-color:#d8feb7;color:black;\", offset, limit);\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/hook/user/?offset=\" + offset + \"&limit=\" + limit).then(response => {\n      const user = response.data;\n      console.log(\"%c ðŸ‡®ðŸ‡¶: fetchAllUsers -> user \", \"font-size:16px;background-color:#12f38a;color:black;\", user);\n      dispatch(fetchUserSuccess(user.slice, user.page));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(`${usersUrl}/hook/users`).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const insertUsers = user => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.post(\"http://localhost:9000/hook\", user).then(response => {\n      const users = response.data;\n      dispatch(fetchUserSuccess(users));\n    }).catch(error => {\n      alert(error.response.data.message);\n      dispatch(fetchUserFailure(error.response.data));\n    });\n  };\n};\nexport const updateUsers = (id, user) => {\n  return async dispatch => {\n    dispatch(fetchUserRequest());\n\n    try {\n      const response = await axios.put(\"http://localhost:9000/hook/\" + id, user);\n      const updatedData = response.data;\n      dispatch(fetchUserSuccess(updatedData));\n    } catch (error) {\n      dispatch(fetchUserFailure(error));\n    }\n  };\n};\nexport const deleteUsers = id => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.delete(`${usersUrl}/hook/${id}`).then(response => {\n      const users = response.data;\n      dispatch(fetchUserSuccess(users));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error.message));\n    });\n  };\n};\nexport const fetchUserRequest = () => {\n  return {\n    type: FETCH_USER_REQUEST\n  };\n};\nexport const fetchUserSuccess = (users, pages) => {\n  return {\n    type: FETCH_USER_SUCCESS,\n    payload: users,\n    totalPage: pages\n  };\n};\nexport const fetchUserFailure = error => {\n  return {\n    type: FETCH_USER_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/apex/project-demo-hook/src/redux/users/userAction.js"],"names":["FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","axios","usersUrl","fetchUser","user","dispatch","fetchUserRequest","get","then","response","data","fetchUserSuccess","catch","error","fetchUserFailure","fetchSearchedUser","searchTerm","offset","slice","totalPages","fetchAllUsers","limit","console","log","page","fetchUsers","insertUsers","post","users","alert","message","updateUsers","id","put","updatedData","deleteUsers","delete","type","pages","payload","totalPage"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n} from \"./userType\";\r\nimport axios from \"axios\";\r\nconst usersUrl = \"http://localhost:9000\";\r\nexport const fetchUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\"http://localhost:9000/hook/\" + user)\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\nexport const fetchSearchedUser = (searchTerm, offset) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\r\n        \"http://localhost:9000/hook/users/search/\" +\r\n          searchTerm +\r\n          \"/?offset=\" +\r\n          offset\r\n      )\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user.slice, user.totalPages));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchAllUsers = (offset, limit) => {\r\n  console.log(\r\n    \"%c ðŸ•’: fetchAllUsers -> offset, limit \",\r\n    \"font-size:16px;background-color:#d8feb7;color:black;\",\r\n    offset,\r\n    limit\r\n  );\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\r\n        \"http://localhost:9000/hook/user/?offset=\" + offset + \"&limit=\" + limit\r\n      )\r\n      .then((response) => {\r\n        const user = response.data;\r\n        console.log(\r\n          \"%c ðŸ‡®ðŸ‡¶: fetchAllUsers -> user \",\r\n          \"font-size:16px;background-color:#12f38a;color:black;\",\r\n          user\r\n        );\r\n        dispatch(fetchUserSuccess(user.slice, user.page));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\nexport const fetchUsers = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(`${usersUrl}/hook/users`)\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const insertUsers = (user) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .post(\"http://localhost:9000/hook\", user)\r\n      .then((response) => {\r\n        const users = response.data;\r\n\r\n        dispatch(fetchUserSuccess(users));\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.message);\r\n        dispatch(fetchUserFailure(error.response.data));\r\n      });\r\n  };\r\n};\r\nexport const updateUsers = (id, user) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    try {\r\n      const response = await axios.put(\r\n        \"http://localhost:9000/hook/\" + id,\r\n        user\r\n      );\r\n      const updatedData = response.data;\r\n      dispatch(fetchUserSuccess(updatedData));\r\n    } catch (error) {\r\n      dispatch(fetchUserFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUsers = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .delete(`${usersUrl}/hook/${id}`)\r\n\r\n      .then((response) => {\r\n        const users = response.data;\r\n        dispatch(fetchUserSuccess(users));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error.message));\r\n      });\r\n  };\r\n};\r\nexport const fetchUserRequest = () => {\r\n  return {\r\n    type: FETCH_USER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = (users, pages) => {\r\n  return {\r\n    type: FETCH_USER_SUCCESS,\r\n    payload: users,\r\n    totalPage: pages,\r\n  };\r\n};\r\nexport const fetchUserFailure = (error) => {\r\n  return {\r\n    type: FETCH_USER_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}