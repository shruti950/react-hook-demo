{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainer.js\";\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { deleteUsers, fetchUsers } from \"../redux\";\n// // import UserContainerForm from \"./UserContainerForm\";\n// // import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// // import childComponent from \"./UserContainerUpdate\";\n// // import UserContainerUpdate from \"./UserContainerUpdate\";\n// // import SearchField from \"react-search-field\";\n// // // import SearchBar from \"./SearchBar\";\n// // // import SearchPage from \"./searchPage\";\n// // import axios from \"axios\";\n// import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\n// import ReactPaginate from \"react-paginate\";\n// class UserContainer extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       users: [],\n//       offset: 0,\n//       data: [],\n//       perPage: 5,\n//       pageCount: 0,\n//     };\n//   }\n//   componentDidMount() {\n//     const { loadingData } = this.props;\n//     fetchUsers();\n//     this.setState({ users: this.props.userData });\n//     console.log(\n//       \"users in component did mount\",\n//       this.state.users,\n//       this.state.offset\n//     );\n//     this.setState({ offset: 1 });\n//     console.log(\"offset\", this.state.offset);\n//     // if (loadingData === false) {\n//     this.getData();\n//     // }dele\n//   }\n//   componentWillMount() {\n//     // this.refreshPage();\n//     console.log(\"fetchData\", this.props.userData);\n//     const { loadingData } = this.props;\n//     // if (loadingData === false) {\n//     fetchUsers();\n//     this.setState({ users: this.props.userData });\n//     console.log(\"users in component will mount\", this.state.users);\n//     this.getData();\n//     // }\n//   }\n//   // componentWillReceiveProps(nextProps) {\n//   //   if (nextProps !== this.props) {\n//   //     this.setState({\n//   //       users: nextProps.userData,\n//   //     });\n//   //     console.log(\n//   //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\n//   //       this.state.users\n//   //     );\n//   //     // this.setState({ offset: 1 });\n//   //     this.getData();\n//   //   }\n//   // }\n//   // static getDerivedStateFromProps(props, state) {\n//   //   console.log(\"props 12212\", props.userData);\n//   //   console.log(\"state 12212\", state);\n//   //   if (props.userData) {\n//   //     // return { users: props?.userData };\n//   //   }\n//   //   // this.setState({ offset: 1 });\n//   //   // this.getData();\n//   //   // return {favoritecolor: props.favcol };\n//   // }\n//   handlePageClick = (e) => {\n//     const selectedPage = e.selected;\n//     this.setState({ offset: selectedPage + 1 }, () => {\n//       this.getData();\n//     });\n//     // setOffset(selectedPage + 1);\n//   };\n//   addUser = async () => {\n//     this.props.history.push(\"/adduser\");\n//     // this.refreshPage();\n//     // const ddd = fetchUsers();\n//     // this.getData();\n//     // <UserContainerForm />;\n//   };\n//   deleteUserData = async (id, name) => {\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n//       await deleteUsers(id);\n//       this.props.history.push(\"/home\");\n//     } else {\n//       this.props.history.push(\"/home\");\n//     }\n//     this.getData();\n//     this.refreshPage();\n//     return;\n//     this.props.fetchUsers();\n//     // console.log(\"ddd 222\", dd);\n//     // console.log(\"userData 222\", this.props.userData);\n//     // this.setState({ offset: 1 }, () => {\n//     //   this.getData();\n//     // });\n//     // window.location.reload();\n//     // this.refreshPage();\n//   };\n//   editUserData = async (id) => {\n//     console.log(\"id vaman\", id);\n//     this.props.history.push(`/updateuser/${id}`);\n//     // this.props.fetchUsers();\n//     // this.refreshPage();\n//   };\n//   refreshPage = () => {\n//     window.location.reload(false);\n//   };\n//   getData = async () => {\n//     const { loadingData } = this.props;\n//     // if (loadingData === false) {\n//     const data = this.props.userData || [];\n//     const indexOfLastTodo = this.state.offset * this.state.perPage;\n//     const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n//     this.setState({ users: slice });\n//     this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\n//   };\n//   filterContent = (searchUser, searchTerm) => {\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 128 ~ UserContainer ~ getData= ~ searchTerm\",\n//       searchTerm,\n//       searchUser\n//     );\n//     if (searchTerm === \"\") {\n//       this.getData();\n//     } else {\n//       const result = searchUser.filter((user) =>\n//         user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//       );\n//       console.log(\n//         \"ðŸš€ ~ file: userContainer.js ~ line 134 ~ UserContainer ~ getData= ~ result\",\n//         result\n//       );\n//       this.setState({ users: result });\n//       console.log(\n//         \"ðŸš€ ~ file: userContainer.js ~ line 157 ~ UserContainer ~ getData= ~ users\",\n//         this.state.users\n//       );\n//       this.getData();\n//     }\n//   };\n//   onValueChange = (e) => {\n//     console.log(e.currentTarget.value);\n//     const searchTerm = e.currentTarget.value;\n//     this.props.fetchUsers();\n//     // axios.get(\"http://localhost:9000/\").then((response) => {\n//     console.log(\n//       \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\n//       this.state.offset\n//     );\n//     if (this.props.userData) {\n//       console.log(\"users for search\", this.props.userData);\n//       this.filterContent(this.props.userData, searchTerm);\n//     }\n//     // });\n//   };\n//   render() {\n//     return (\n//       <div className=\"container App\">\n//         <Router>\n//           <h2>Users List</h2>\n//           <div className=\"container text-right\">\n//             <Link to={{ pathname: `/adduser` }}>\n//               <button\n//                 onClick={this.addUser}\n//                 className=\"btn btn-primary btn-md m-1  \"\n//               >\n//                 ADD USER\n//               </button>\n//             </Link>\n//           </div>\n//           <div className=\"container mt-mb-10 text-left\">\n//             <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\n//               {/* <SearchPage /> */}\n//               <span className=\"icon-input-btn\">\n//                 <i className=\"fa fa-search\"></i>\n//                 <input\n//                   // ref={inputEl}\n//                   type=\"search \"\n//                   placeholder=\"Search Users\"\n//                   className=\"mt-mb-7 form-control  \"\n//                   // v\n//                   name=\"searchTerm\"\n//                   onChange={this.onValueChange}\n//                 />\n//               </span>\n//             </div>\n//           </div>\n//           <div className=\" container  \">\n//             <table className=\"table mt-5 table-striped justify-content-center\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Age</th>\n//                   <th>Email</th>\n//                   <th>Action</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-left\">\n//                 {this.state.users.map((user) => (\n//                   <tr key={user._id}>\n//                     <td>{user.name}</td>\n//                     <td>{user.age}</td>\n//                     <td>{user.email}</td>\n//                     <td>\n//                       <Link\n//                         to={{\n//                           pathname: `/updateuser/${user._id}`,\n//                         }}\n//                       >\n//                         <button\n//                           // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                           onClick={() => this.editUserData(user._id)}\n//                           className=\"btn btn-success btn-sm m-1  \"\n//                           // component={Link}\n//                           // to={`/updateuser/${user._id}`}\n//                         >\n//                           UPDATE\n//                         </button>\n//                       </Link>\n//                       <button\n//                         onClick={() => {\n//                           this.deleteUserData(user._id, user.name);\n//                         }}\n//                         className=\"btn btn-danger btn-sm m-1 \"\n//                       >\n//                         <i className=\"fa fa-trash\"></i>\n//                         DELETE\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//             <ReactPaginate\n//               previousLabel={\"prev\"}\n//               nextLabel={\"next\"}\n//               breakLabel={\"...\"}\n//               breakClassName={\"break-me\"}\n//               pageCount={this.state.pageCount}\n//               marginPagesDisplayed={2}\n//               pageRangeDisplayed={5}\n//               onPageChange={this.handlePageClick}\n//               containerClassName={\"pagination\"}\n//               subContainerClassName={\"pages pagination\"}\n//               activeClassName={\"active\"}\n//             />\n//           </div>\n//         </Router>\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   console.log(\"state===>\", state.users, state.loading);\n//   const { users, loading } = state;\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\n//   return {\n//     userData: users,\n//     loadingData: loading,\n//   };\n// };\n// // const mapDispatchToProps = (dispatch) => {\n// //   return {\n// //     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\n// //     fetchUsers: () => dispatch(fetchUsers()),\n// //   };\n// // };\n// export default connect(mapStateToProps, { fetchUsers })(UserContainer);\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUsers, fetchUsers } from \"../redux\"; // import UserContainerForm from \"./UserContainerForm\";\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// import childComponent from \"./UserContainerUpdate\";\n// import UserContainerUpdate from \"./UserContainerUpdate\";\n// import SearchField from \"react-search-field\";\n// // import SearchBar from \"./SearchBar\";\n// // import SearchPage from \"./searchPage\";\n// import axios from \"axios\";\n\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      fetchUsers(selectedPage, this.state.perPage);\n      console.log(\"users for pagination \", this.props.userData);\n      this.setState({\n        offset: selectedPage + 1\n      }, () => {\n        this.getData();\n      }); // setOffset(selectedPage + 1);\n    };\n\n    this.addUser = async () => {\n      this.props.history.push(\"/adduser\"); // this.refreshPage();\n      // <UserContainerForm />;\n    };\n\n    this.deleteUserData = async (id, name) => {\n      if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n        await deleteUsers(id);\n      } else {\n        this.props.history.push(\"/home\");\n      }\n\n      fetchUsers(); // this.refreshPage();\n    };\n\n    this.editUserData = async id => {\n      console.log(\"id vaman\", id);\n      this.props.history.push(`/updateuser/${id}`); // this.refreshPage();\n    };\n\n    this.refreshPage = () => {\n      window.location.reload();\n    };\n\n    this.getData = async () => {\n      const {\n        loadingData\n      } = this.props;\n      console.log(\"loading in getDAta\", loadingData); // if (loadingData === false) {\n\n      const data = this.props.userData || [];\n      console.log(\"set pagination here.....\", data);\n      const indexOfLastTodo = this.state.offset * this.state.perPage;\n      const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\n      const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n      console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n      this.setState({\n        users: slice\n      }); // setUsers(slice);\n\n      console.log(\"users in getData\", this.state.users);\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage)\n      }); // setPageCount(Math.ceil(data.length / perPage));\n      // }\n    };\n\n    this.filterContent = (users, searchTerm) => {\n      console.log(\"searchterm\", searchTerm, users);\n\n      if (searchTerm === \"\") {\n        console.log(\"searchterm empty\"); // this.refreshPage();\n\n        this.getData();\n      } else {\n        const result = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n        console.log(\"result @@\", result);\n        this.setState({\n          users: result\n        }); // console.log(\n        //   \"ðŸš€ ~ file: userContainer.js ~ line 428 ~ UserContainer ~ users\",\n        //   this.state.users,\n        //   this.props\n        // );\n        // this.getData();\n      }\n    };\n\n    this.onValueChange = e => {\n      const searchTerm = e.currentTarget.value;\n      fetchUsers();\n      console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", this.state.offset);\n\n      if (this.props.userData) {\n        console.log(\"users for search\", this.props.userData);\n        const u = this.filterContent(this.props.userData, searchTerm);\n        console.log(\"users ===>for search\", u, this.state.users);\n      }\n    };\n\n    this.state = {\n      users: [],\n      offset: 0,\n      data: [],\n      perPage: 5,\n      pageCount: 0,\n      isLoading: true,\n      searchUser: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      loadingData\n    } = this.props;\n    const page = 1;\n    await fetchUsers(page, this.state.perPage);\n    console.log(\"userData\", this.props.userData);\n    this.setState({\n      users: this.props.userData,\n      offset: 1\n    });\n    console.log(\"users in component did mount\", this.state.users, this.state.offset);\n    this.setState({\n      offset: 1\n    });\n    console.log(\"offset\", this.state.offset); // if (loadingData === false) {\n\n    this.getData(); // }\n  } // static getDerivedStateFromProps(nextProps, prevState) {\n  //   console.log(\n  //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ prevState\",\n  //     prevState\n  //   );\n  //   console.log(\n  //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ nextProps\",\n  //     nextProps\n  //   );\n  //   if (nextProps.userData !== prevState.users) {\n  //     return { users: nextProps.userData.slice(0, 5) };\n  //   }\n  //   // else return { users: nextProps.userData };\n  //   // console.log(\n  //   //   \"ðŸš€ ~ file: userContainer.js ~ line 340 ~ UserContainer ~ getDerivedStateFromProps ~ users\",\n  //   //   users\n  //   // );\n  //   this.getData();\n  // }\n\n\n  componentDidUpdate(prevProps, prevState, snapShot) {\n    console.log(\"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ snapShot\", snapShot);\n    console.log(\"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ prevState\", prevState, this.state);\n    console.log(\" this.states @@\", this.state);\n    console.log(\"ðŸš€ ~ file: userContainer.js ~ line 346 ~ UserContainer ~ componentDidUpdate ~ this.props\", this.props); // vmn\n    // if (prevProps.userData !== this.props.userData) {\n    //   //Perform some operation here\n    //   console.log(\" this.props.userData @@\", this.props.userData);\n    //   this.setState({ users: this.props.userData });\n    //   this.getData();\n    // }\n  } // componentWillReceiveProps(nextProps) {\n  //   console.log(\"component will receive props\");\n  //   if (nextProps.userData !== this.props.userData) {\n  //     this.setState({ users: nextProps.userData });\n  //     // } else {\n  //     //   this.setState({ users: nextProps.userData });\n  //     // }\n  //     console.log(\n  //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\n  //       this.state.users\n  //     );\n  //   }\n  //   // this.setState({ offset: 1 });\n  //   this.getData();\n  // }\n\n\n  async componentWillMount() {\n    // this.refreshPage();\n    const {\n      loadingData\n    } = this.props; // if (loadingData === false) {\n\n    console.log(\"props @@\", this.props);\n    const page = 1;\n    await fetchUsers(page, this.state.perPage);\n    console.log(\"userData\", this.props.userData);\n    this.setState({\n      users: this.props.userData,\n      offset: 1\n    });\n    console.log(\"users in component will mount\", this.state.users); // this.getData();\n    // }\n  }\n\n  render() {\n    console.log(\"this.state.users @@@\", this.state.users);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container text-right\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/adduser`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addUser,\n              className: \"btn btn-primary btn-md m-1  \",\n              children: \"ADD USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mt-mb-10 text-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 mt-mb-10  justify-content-left ui icon input\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-input-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // ref={inputEl}\n                type: \"search \",\n                placeholder: \"Search Users\",\n                className: \"mt-mb-7 form-control  \" // v\n                ,\n                name: \"searchTerm\",\n                onChange: this.onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" container  \",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table mt-5 table-striped justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-left\",\n              children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: `/updateuser/${user._id}`\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n                      onClick: () => this.editUserData(user._id),\n                      className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                      // to={`/updateuser/${user._id}`}\n                      ,\n                      children: \"UPDATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.deleteUserData(user._id, user.name);\n                    },\n                    className: \"btn btn-danger btn-sm m-1 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-trash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 25\n                    }, this), \"DELETE\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 21\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n            previousLabel: \"prev\",\n            nextLabel: \"next\",\n            breakLabel: \"...\",\n            breakClassName: \"break-me\",\n            pageCount: this.state.pageCount,\n            marginPagesDisplayed: 2,\n            pageRangeDisplayed: 5,\n            onPageChange: this.handlePageClick,\n            containerClassName: \"pagination\",\n            subContainerClassName: \"pages pagination\",\n            activeClassName: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => {\n//   console.log(\"state===>\", state.users, state.loading);\n//   const { users, loading } = state;\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\n//   return {\n//     userData: users,\n//     loadingData: loading,\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\n    fetchUsers: (page, limit) => dispatch(fetchUsers(page, limit))\n  };\n};\n\nexport default connect(state => (console.log(\"state\", state), {\n  userData: state.users,\n  loadingData: state.loading\n}), {\n  mapDispatchToProps\n})(UserContainer);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainer.js"],"names":["React","Component","connect","deleteUsers","fetchUsers","BrowserRouter","Router","Link","Redirect","ReactPaginate","UserContainer","constructor","props","handlePageClick","e","selectedPage","selected","state","perPage","console","log","userData","setState","offset","getData","addUser","history","push","deleteUserData","id","name","window","confirm","editUserData","refreshPage","location","reload","loadingData","data","indexOfLastTodo","indexOfFirstTodo","slice","users","pageCount","Math","ceil","length","filterContent","searchTerm","result","filter","user","toLowerCase","includes","onValueChange","currentTarget","value","u","isLoading","searchUser","componentDidMount","page","componentDidUpdate","prevProps","prevState","snapShot","componentWillMount","render","pathname","map","age","email","_id","mapDispatchToProps","dispatch","limit","loading"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,UAAxC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,EAAwCC,QAAxC,QAAwD,kBAAxD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AACA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuGnBC,eAvGmB,GAuGAC,CAAD,IAAO;AACvB,YAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;AACAZ,MAAAA,UAAU,CAACW,YAAD,EAAe,KAAKE,KAAL,CAAWC,OAA1B,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKR,KAAL,CAAWS,QAAhD;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAER,YAAY,GAAG;AAAzB,OAAd,EAA4C,MAAM;AAChD,aAAKS,OAAL;AACD,OAFD,EAJuB,CAOvB;AACD,KA/GkB;;AAAA,SAgHnBC,OAhHmB,GAgHT,YAAY;AACpB,WAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB,EADoB,CAEpB;AACA;AACD,KApHkB;;AAAA,SAqHnBC,cArHmB,GAqHF,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AACnC,UAAIC,MAAM,CAACC,OAAP,CAAgB,mCAAkCF,IAAK,GAAvD,CAAJ,EAAgE;AAC9D,cAAM3B,WAAW,CAAC0B,EAAD,CAAjB;AACD,OAFD,MAEO;AACL,aAAKjB,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;;AACDvB,MAAAA,UAAU,GANyB,CAOnC;AACD,KA7HkB;;AAAA,SA8HnB6B,YA9HmB,GA8HJ,MAAOJ,EAAP,IAAc;AAC3BV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBS,EAAxB;AACA,WAAKjB,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAyB,eAAcE,EAAG,EAA1C,EAF2B,CAG3B;AACD,KAlIkB;;AAAA,SAmInBK,WAnImB,GAmIL,MAAM;AAClBH,MAAAA,MAAM,CAACI,QAAP,CAAgBC,MAAhB;AACD,KArIkB;;AAAA,SAsInBZ,OAtImB,GAsIT,YAAY;AACpB,YAAM;AAAEa,QAAAA;AAAF,UAAkB,KAAKzB,KAA7B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCiB,WAAlC,EAFoB,CAGpB;;AACA,YAAMC,IAAI,GAAG,KAAK1B,KAAL,CAAWS,QAAX,IAAuB,EAApC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCkB,IAAxC;AACA,YAAMC,eAAe,GAAG,KAAKtB,KAAL,CAAWM,MAAX,GAAoB,KAAKN,KAAL,CAAWC,OAAvD;AACA,YAAMsB,gBAAgB,GAAGD,eAAe,GAAG,KAAKtB,KAAL,CAAWC,OAAtD;AACA,YAAMuB,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAWD,gBAAX,EAA6BD,eAA7B,CAAd;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkEqB,KAAlE;AACA,WAAKnB,QAAL,CAAc;AAAEoB,QAAAA,KAAK,EAAED;AAAT,OAAd,EAVoB,CAWpB;;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKH,KAAL,CAAWyB,KAA3C;AACA,WAAKpB,QAAL,CAAc;AAAEqB,QAAAA,SAAS,EAAEC,IAAI,CAACC,IAAL,CAAUP,IAAI,CAACQ,MAAL,GAAc,KAAK7B,KAAL,CAAWC,OAAnC;AAAb,OAAd,EAboB,CAcpB;AACA;AACD,KAtJkB;;AAAA,SAuJnB6B,aAvJmB,GAuJH,CAACL,KAAD,EAAQM,UAAR,KAAuB;AACrC7B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B4B,UAA1B,EAAsCN,KAAtC;;AACA,UAAIM,UAAU,KAAK,EAAnB,EAAuB;AACrB7B,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADqB,CAErB;;AACA,aAAKI,OAAL;AACD,OAJD,MAIO;AACL,cAAMyB,MAAM,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAC1BA,IAAI,CAACrB,IAAL,CAAUsB,WAAV,GAAwBC,QAAxB,CAAiCL,UAAU,CAACI,WAAX,EAAjC,CADa,CAAf;AAGAjC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB6B,MAAzB;AACA,aAAK3B,QAAL,CAAc;AAAEoB,UAAAA,KAAK,EAAEO;AAAT,SAAd,EALK,CAML;AACA;AACA;AACA;AACA;AACA;AACD;AACF,KA1KkB;;AAAA,SA2KnBK,aA3KmB,GA2KFxC,CAAD,IAAO;AACrB,YAAMkC,UAAU,GAAGlC,CAAC,CAACyC,aAAF,CAAgBC,KAAnC;AACApD,MAAAA,UAAU;AACVe,MAAAA,OAAO,CAACC,GAAR,CACE,qDADF,EAEE,KAAKH,KAAL,CAAWM,MAFb;;AAIA,UAAI,KAAKX,KAAL,CAAWS,QAAf,EAAyB;AACvBF,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKR,KAAL,CAAWS,QAA3C;AACA,cAAMoC,CAAC,GAAG,KAAKV,aAAL,CAAmB,KAAKnC,KAAL,CAAWS,QAA9B,EAAwC2B,UAAxC,CAAV;AACA7B,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCqC,CAApC,EAAuC,KAAKxC,KAAL,CAAWyB,KAAlD;AACD;AACF,KAvLkB;;AAGjB,SAAKzB,KAAL,GAAa;AACXyB,MAAAA,KAAK,EAAE,EADI;AAEXnB,MAAAA,MAAM,EAAE,CAFG;AAGXe,MAAAA,IAAI,EAAE,EAHK;AAIXpB,MAAAA,OAAO,EAAE,CAJE;AAKXyB,MAAAA,SAAS,EAAE,CALA;AAMXe,MAAAA,SAAS,EAAE,IANA;AAOXC,MAAAA,UAAU,EAAE;AAPD,KAAb;AASD;;AACsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEvB,MAAAA;AAAF,QAAkB,KAAKzB,KAA7B;AACA,UAAMiD,IAAI,GAAG,CAAb;AACA,UAAMzD,UAAU,CAACyD,IAAD,EAAO,KAAK5C,KAAL,CAAWC,OAAlB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKR,KAAL,CAAWS,QAAnC;AACA,SAAKC,QAAL,CAAc;AAAEoB,MAAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWS,QAApB;AAA8BE,MAAAA,MAAM,EAAE;AAAtC,KAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CACE,8BADF,EAEE,KAAKH,KAAL,CAAWyB,KAFb,EAGE,KAAKzB,KAAL,CAAWM,MAHb;AAKA,SAAKD,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKH,KAAL,CAAWM,MAAjC,EAZwB,CAaxB;;AACA,SAAKC,OAAL,GAdwB,CAexB;AACD,GA9BmC,CA+BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAsC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACjD9C,IAAAA,OAAO,CAACC,GAAR,CACE,wFADF,EAEE6C,QAFF;AAIA9C,IAAAA,OAAO,CAACC,GAAR,CACE,yFADF,EAEE4C,SAFF,EAGE,KAAK/C,KAHP;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKH,KAApC;AACAE,IAAAA,OAAO,CAACC,GAAR,CACE,0FADF,EAEE,KAAKR,KAFP,EAXiD,CAejD;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAzEmC,CA0EpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACwB,QAAlBsD,kBAAkB,GAAG;AACzB;AACA,UAAM;AAAE7B,MAAAA;AAAF,QAAkB,KAAKzB,KAA7B,CAFyB,CAGzB;;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKR,KAA7B;AACA,UAAMiD,IAAI,GAAG,CAAb;AACA,UAAMzD,UAAU,CAACyD,IAAD,EAAO,KAAK5C,KAAL,CAAWC,OAAlB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKR,KAAL,CAAWS,QAAnC;AAEA,SAAKC,QAAL,CAAc;AAAEoB,MAAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWS,QAApB;AAA8BE,MAAAA,MAAM,EAAE;AAAtC,KAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,KAAKH,KAAL,CAAWyB,KAAxD,EAVyB,CAWzB;AACA;AACD;;AAmFDyB,EAAAA,MAAM,GAAG;AACPhD,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKH,KAAL,CAAWyB,KAA/C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAE0B,cAAAA,QAAQ,EAAG;AAAb,aAAV;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,KAAK3C,OADhB;AAEE,cAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oDAAf;AAAA,mCAEE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,sCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE;AACA,gBAAA,IAAI,EAAC,SAFP;AAGE,gBAAA,WAAW,EAAC,cAHd;AAIE,gBAAA,SAAS,EAAC,wBAJZ,CAKE;AALF;AAME,gBAAA,IAAI,EAAC,YANP;AAOE,gBAAA,QAAQ,EAAE,KAAK6B;AAPjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eA6BE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,iDAAjB;AAAA,oCACE;AAAA,qCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,SAAS,EAAC,WAAjB;AAAA,wBACG,KAAKrC,KAAL,CAAWyB,KAAX,CAAiB2B,GAAjB,CAAsBlB,IAAD,iBACpB;AAAA,wCACE;AAAA,4BAAKA,IAAI,CAACrB;AAAV;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAKqB,IAAI,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,4BAAKnB,IAAI,CAACoB;AAAV;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA,0CACE,QAAC,IAAD;AACE,oBAAA,EAAE,EAAE;AACFH,sBAAAA,QAAQ,EAAG,eAAcjB,IAAI,CAACqB,GAAI;AADhC,qBADN;AAAA,2CAKE;AACE;AACA,sBAAA,OAAO,EAAE,MAAM,KAAKvC,YAAL,CAAkBkB,IAAI,CAACqB,GAAvB,CAFjB;AAGE,sBAAA,SAAS,EAAC,8BAHZ,CAIE;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,0BADF,eAgBE;AACE,oBAAA,OAAO,EAAE,MAAM;AACb,2BAAK5C,cAAL,CAAoBuB,IAAI,CAACqB,GAAzB,EAA8BrB,IAAI,CAACrB,IAAnC;AACD,qBAHH;AAIE,oBAAA,SAAS,EAAC,4BAJZ;AAAA,4CAME;AAAG,sBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,4BANF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA,iBAASqB,IAAI,CAACqB,GAAd;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA+CE,QAAC,aAAD;AACE,YAAA,aAAa,EAAE,MADjB;AAEE,YAAA,SAAS,EAAE,MAFb;AAGE,YAAA,UAAU,EAAE,KAHd;AAIE,YAAA,cAAc,EAAE,UAJlB;AAKE,YAAA,SAAS,EAAE,KAAKvD,KAAL,CAAW0B,SALxB;AAME,YAAA,oBAAoB,EAAE,CANxB;AAOE,YAAA,kBAAkB,EAAE,CAPtB;AAQE,YAAA,YAAY,EAAE,KAAK9B,eARrB;AASE,YAAA,kBAAkB,EAAE,YATtB;AAUE,YAAA,qBAAqB,EAAE,kBAVzB;AAWE,YAAA,eAAe,EAAE;AAXnB;AAAA;AAAA;AAAA;AAAA,kBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+FD;;AA1RmC,C,CA4RtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM4D,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL;AACAtE,IAAAA,UAAU,EAAE,CAACyD,IAAD,EAAOc,KAAP,KAAiBD,QAAQ,CAACtE,UAAU,CAACyD,IAAD,EAAOc,KAAP,CAAX;AAFhC,GAAP;AAID,CALD;;AAMA,eAAezE,OAAO,CACnBe,KAAD,KACEE,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,GACA;AAAEI,EAAAA,QAAQ,EAAEJ,KAAK,CAACyB,KAAlB;AAAyBL,EAAAA,WAAW,EAAEpB,KAAK,CAAC2D;AAA5C,CAFF,CADoB,EAKpB;AAAEH,EAAAA;AAAF,CALoB,CAAP,CAMb/D,aANa,CAAf","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { deleteUsers, fetchUsers } from \"../redux\";\r\n// // import UserContainerForm from \"./UserContainerForm\";\r\n// // import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// // import childComponent from \"./UserContainerUpdate\";\r\n// // import UserContainerUpdate from \"./UserContainerUpdate\";\r\n// // import SearchField from \"react-search-field\";\r\n// // // import SearchBar from \"./SearchBar\";\r\n// // // import SearchPage from \"./searchPage\";\r\n// // import axios from \"axios\";\r\n// import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\n// import ReactPaginate from \"react-paginate\";\r\n// class UserContainer extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       users: [],\r\n//       offset: 0,\r\n//       data: [],\r\n//       perPage: 5,\r\n//       pageCount: 0,\r\n//     };\r\n//   }\r\n//   componentDidMount() {\r\n//     const { loadingData } = this.props;\r\n\r\n//     fetchUsers();\r\n\r\n//     this.setState({ users: this.props.userData });\r\n//     console.log(\r\n//       \"users in component did mount\",\r\n//       this.state.users,\r\n//       this.state.offset\r\n//     );\r\n//     this.setState({ offset: 1 });\r\n//     console.log(\"offset\", this.state.offset);\r\n//     // if (loadingData === false) {\r\n//     this.getData();\r\n//     // }dele\r\n//   }\r\n//   componentWillMount() {\r\n//     // this.refreshPage();\r\n//     console.log(\"fetchData\", this.props.userData);\r\n//     const { loadingData } = this.props;\r\n//     // if (loadingData === false) {\r\n//     fetchUsers();\r\n//     this.setState({ users: this.props.userData });\r\n//     console.log(\"users in component will mount\", this.state.users);\r\n//     this.getData();\r\n//     // }\r\n//   }\r\n\r\n//   // componentWillReceiveProps(nextProps) {\r\n//   //   if (nextProps !== this.props) {\r\n//   //     this.setState({\r\n//   //       users: nextProps.userData,\r\n//   //     });\r\n//   //     console.log(\r\n//   //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\r\n//   //       this.state.users\r\n//   //     );\r\n//   //     // this.setState({ offset: 1 });\r\n//   //     this.getData();\r\n//   //   }\r\n//   // }\r\n//   // static getDerivedStateFromProps(props, state) {\r\n//   //   console.log(\"props 12212\", props.userData);\r\n//   //   console.log(\"state 12212\", state);\r\n//   //   if (props.userData) {\r\n//   //     // return { users: props?.userData };\r\n//   //   }\r\n//   //   // this.setState({ offset: 1 });\r\n//   //   // this.getData();\r\n//   //   // return {favoritecolor: props.favcol };\r\n//   // }\r\n//   handlePageClick = (e) => {\r\n//     const selectedPage = e.selected;\r\n//     this.setState({ offset: selectedPage + 1 }, () => {\r\n//       this.getData();\r\n//     });\r\n//     // setOffset(selectedPage + 1);\r\n//   };\r\n//   addUser = async () => {\r\n//     this.props.history.push(\"/adduser\");\r\n//     // this.refreshPage();\r\n//     // const ddd = fetchUsers();\r\n//     // this.getData();\r\n//     // <UserContainerForm />;\r\n//   };\r\n//   deleteUserData = async (id, name) => {\r\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n//       await deleteUsers(id);\r\n//       this.props.history.push(\"/home\");\r\n//     } else {\r\n//       this.props.history.push(\"/home\");\r\n//     }\r\n\r\n//     this.getData();\r\n//     this.refreshPage();\r\n//     return;\r\n//     this.props.fetchUsers();\r\n//     // console.log(\"ddd 222\", dd);\r\n//     // console.log(\"userData 222\", this.props.userData);\r\n//     // this.setState({ offset: 1 }, () => {\r\n//     //   this.getData();\r\n//     // });\r\n//     // window.location.reload();\r\n//     // this.refreshPage();\r\n//   };\r\n//   editUserData = async (id) => {\r\n//     console.log(\"id vaman\", id);\r\n//     this.props.history.push(`/updateuser/${id}`);\r\n//     // this.props.fetchUsers();\r\n//     // this.refreshPage();\r\n//   };\r\n//   refreshPage = () => {\r\n//     window.location.reload(false);\r\n//   };\r\n//   getData = async () => {\r\n//     const { loadingData } = this.props;\r\n//     // if (loadingData === false) {\r\n//     const data = this.props.userData || [];\r\n//     const indexOfLastTodo = this.state.offset * this.state.perPage;\r\n//     const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\r\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n//     this.setState({ users: slice });\r\n//     this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\r\n//   };\r\n//   filterContent = (searchUser, searchTerm) => {\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 128 ~ UserContainer ~ getData= ~ searchTerm\",\r\n//       searchTerm,\r\n//       searchUser\r\n//     );\r\n//     if (searchTerm === \"\") {\r\n//       this.getData();\r\n//     } else {\r\n//       const result = searchUser.filter((user) =>\r\n//         user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       );\r\n//       console.log(\r\n//         \"ðŸš€ ~ file: userContainer.js ~ line 134 ~ UserContainer ~ getData= ~ result\",\r\n//         result\r\n//       );\r\n//       this.setState({ users: result });\r\n\r\n//       console.log(\r\n//         \"ðŸš€ ~ file: userContainer.js ~ line 157 ~ UserContainer ~ getData= ~ users\",\r\n//         this.state.users\r\n//       );\r\n\r\n//       this.getData();\r\n//     }\r\n//   };\r\n//   onValueChange = (e) => {\r\n//     console.log(e.currentTarget.value);\r\n//     const searchTerm = e.currentTarget.value;\r\n//     this.props.fetchUsers();\r\n//     // axios.get(\"http://localhost:9000/\").then((response) => {\r\n//     console.log(\r\n//       \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\r\n//       this.state.offset\r\n//     );\r\n//     if (this.props.userData) {\r\n//       console.log(\"users for search\", this.props.userData);\r\n//       this.filterContent(this.props.userData, searchTerm);\r\n//     }\r\n//     // });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className=\"container App\">\r\n//         <Router>\r\n//           <h2>Users List</h2>\r\n//           <div className=\"container text-right\">\r\n//             <Link to={{ pathname: `/adduser` }}>\r\n//               <button\r\n//                 onClick={this.addUser}\r\n//                 className=\"btn btn-primary btn-md m-1  \"\r\n//               >\r\n//                 ADD USER\r\n//               </button>\r\n//             </Link>\r\n//           </div>\r\n//           <div className=\"container mt-mb-10 text-left\">\r\n//             <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n//               {/* <SearchPage /> */}\r\n//               <span className=\"icon-input-btn\">\r\n//                 <i className=\"fa fa-search\"></i>\r\n//                 <input\r\n//                   // ref={inputEl}\r\n//                   type=\"search \"\r\n//                   placeholder=\"Search Users\"\r\n//                   className=\"mt-mb-7 form-control  \"\r\n//                   // v\r\n//                   name=\"searchTerm\"\r\n//                   onChange={this.onValueChange}\r\n//                 />\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\" container  \">\r\n//             <table className=\"table mt-5 table-striped justify-content-center\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Age</th>\r\n//                   <th>Email</th>\r\n//                   <th>Action</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"text-left\">\r\n//                 {this.state.users.map((user) => (\r\n//                   <tr key={user._id}>\r\n//                     <td>{user.name}</td>\r\n//                     <td>{user.age}</td>\r\n//                     <td>{user.email}</td>\r\n//                     <td>\r\n//                       <Link\r\n//                         to={{\r\n//                           pathname: `/updateuser/${user._id}`,\r\n//                         }}\r\n//                       >\r\n//                         <button\r\n//                           // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                           onClick={() => this.editUserData(user._id)}\r\n//                           className=\"btn btn-success btn-sm m-1  \"\r\n//                           // component={Link}\r\n//                           // to={`/updateuser/${user._id}`}\r\n//                         >\r\n//                           UPDATE\r\n//                         </button>\r\n//                       </Link>\r\n//                       <button\r\n//                         onClick={() => {\r\n//                           this.deleteUserData(user._id, user.name);\r\n//                         }}\r\n//                         className=\"btn btn-danger btn-sm m-1 \"\r\n//                       >\r\n//                         <i className=\"fa fa-trash\"></i>\r\n//                         DELETE\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//             <ReactPaginate\r\n//               previousLabel={\"prev\"}\r\n//               nextLabel={\"next\"}\r\n//               breakLabel={\"...\"}\r\n//               breakClassName={\"break-me\"}\r\n//               pageCount={this.state.pageCount}\r\n//               marginPagesDisplayed={2}\r\n//               pageRangeDisplayed={5}\r\n//               onPageChange={this.handlePageClick}\r\n//               containerClassName={\"pagination\"}\r\n//               subContainerClassName={\"pages pagination\"}\r\n//               activeClassName={\"active\"}\r\n//             />\r\n//           </div>\r\n//         </Router>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state===>\", state.users, state.loading);\r\n//   const { users, loading } = state;\r\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n//   return {\r\n//     userData: users,\r\n//     loadingData: loading,\r\n//   };\r\n// };\r\n// // const mapDispatchToProps = (dispatch) => {\r\n// //   return {\r\n// //     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\r\n// //     fetchUsers: () => dispatch(fetchUsers()),\r\n// //   };\r\n// // };\r\n// export default connect(mapStateToProps, { fetchUsers })(UserContainer);\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUsers, fetchUsers } from \"../redux\";\r\n// import UserContainerForm from \"./UserContainerForm\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// import childComponent from \"./UserContainerUpdate\";\r\n// import UserContainerUpdate from \"./UserContainerUpdate\";\r\n// import SearchField from \"react-search-field\";\r\n// // import SearchBar from \"./SearchBar\";\r\n// // import SearchPage from \"./searchPage\";\r\n// import axios from \"axios\";\r\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nclass UserContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      offset: 0,\r\n      data: [],\r\n      perPage: 5,\r\n      pageCount: 0,\r\n      isLoading: true,\r\n      searchUser: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const { loadingData } = this.props;\r\n    const page = 1;\r\n    await fetchUsers(page, this.state.perPage);\r\n    console.log(\"userData\", this.props.userData);\r\n    this.setState({ users: this.props.userData, offset: 1 });\r\n    console.log(\r\n      \"users in component did mount\",\r\n      this.state.users,\r\n      this.state.offset\r\n    );\r\n    this.setState({ offset: 1 });\r\n    console.log(\"offset\", this.state.offset);\r\n    // if (loadingData === false) {\r\n    this.getData();\r\n    // }\r\n  }\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   console.log(\r\n  //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ prevState\",\r\n  //     prevState\r\n  //   );\r\n  //   console.log(\r\n  //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ nextProps\",\r\n  //     nextProps\r\n  //   );\r\n  //   if (nextProps.userData !== prevState.users) {\r\n  //     return { users: nextProps.userData.slice(0, 5) };\r\n  //   }\r\n  //   // else return { users: nextProps.userData };\r\n  //   // console.log(\r\n  //   //   \"ðŸš€ ~ file: userContainer.js ~ line 340 ~ UserContainer ~ getDerivedStateFromProps ~ users\",\r\n  //   //   users\r\n  //   // );\r\n  //   this.getData();\r\n  // }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapShot) {\r\n    console.log(\r\n      \"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ snapShot\",\r\n      snapShot\r\n    );\r\n    console.log(\r\n      \"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ prevState\",\r\n      prevState,\r\n      this.state\r\n    );\r\n    console.log(\" this.states @@\", this.state);\r\n    console.log(\r\n      \"ðŸš€ ~ file: userContainer.js ~ line 346 ~ UserContainer ~ componentDidUpdate ~ this.props\",\r\n      this.props\r\n    );\r\n    // vmn\r\n    // if (prevProps.userData !== this.props.userData) {\r\n    //   //Perform some operation here\r\n    //   console.log(\" this.props.userData @@\", this.props.userData);\r\n    //   this.setState({ users: this.props.userData });\r\n    //   this.getData();\r\n    // }\r\n  }\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   console.log(\"component will receive props\");\r\n  //   if (nextProps.userData !== this.props.userData) {\r\n  //     this.setState({ users: nextProps.userData });\r\n  //     // } else {\r\n  //     //   this.setState({ users: nextProps.userData });\r\n  //     // }\r\n  //     console.log(\r\n  //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\r\n  //       this.state.users\r\n  //     );\r\n  //   }\r\n  //   // this.setState({ offset: 1 });\r\n  //   this.getData();\r\n  // }\r\n  async componentWillMount() {\r\n    // this.refreshPage();\r\n    const { loadingData } = this.props;\r\n    // if (loadingData === false) {\r\n    console.log(\"props @@\", this.props);\r\n    const page = 1;\r\n    await fetchUsers(page, this.state.perPage);\r\n    console.log(\"userData\", this.props.userData);\r\n\r\n    this.setState({ users: this.props.userData, offset: 1 });\r\n    console.log(\"users in component will mount\", this.state.users);\r\n    // this.getData();\r\n    // }\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    fetchUsers(selectedPage, this.state.perPage);\r\n    console.log(\"users for pagination \", this.props.userData);\r\n    this.setState({ offset: selectedPage + 1 }, () => {\r\n      this.getData();\r\n    });\r\n    // setOffset(selectedPage + 1);\r\n  };\r\n  addUser = async () => {\r\n    this.props.history.push(\"/adduser\");\r\n    // this.refreshPage();\r\n    // <UserContainerForm />;\r\n  };\r\n  deleteUserData = async (id, name) => {\r\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n      await deleteUsers(id);\r\n    } else {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n    fetchUsers();\r\n    // this.refreshPage();\r\n  };\r\n  editUserData = async (id) => {\r\n    console.log(\"id vaman\", id);\r\n    this.props.history.push(`/updateuser/${id}`);\r\n    // this.refreshPage();\r\n  };\r\n  refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n  getData = async () => {\r\n    const { loadingData } = this.props;\r\n    console.log(\"loading in getDAta\", loadingData);\r\n    // if (loadingData === false) {\r\n    const data = this.props.userData || [];\r\n    console.log(\"set pagination here.....\", data);\r\n    const indexOfLastTodo = this.state.offset * this.state.perPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\r\n    const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n    console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n    this.setState({ users: slice });\r\n    // setUsers(slice);\r\n    console.log(\"users in getData\", this.state.users);\r\n    this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\r\n    // setPageCount(Math.ceil(data.length / perPage));\r\n    // }\r\n  };\r\n  filterContent = (users, searchTerm) => {\r\n    console.log(\"searchterm\", searchTerm, users);\r\n    if (searchTerm === \"\") {\r\n      console.log(\"searchterm empty\");\r\n      // this.refreshPage();\r\n      this.getData();\r\n    } else {\r\n      const result = users.filter((user) =>\r\n        user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      console.log(\"result @@\", result);\r\n      this.setState({ users: result });\r\n      // console.log(\r\n      //   \"ðŸš€ ~ file: userContainer.js ~ line 428 ~ UserContainer ~ users\",\r\n      //   this.state.users,\r\n      //   this.props\r\n      // );\r\n      // this.getData();\r\n    }\r\n  };\r\n  onValueChange = (e) => {\r\n    const searchTerm = e.currentTarget.value;\r\n    fetchUsers();\r\n    console.log(\r\n      \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\r\n      this.state.offset\r\n    );\r\n    if (this.props.userData) {\r\n      console.log(\"users for search\", this.props.userData);\r\n      const u = this.filterContent(this.props.userData, searchTerm);\r\n      console.log(\"users ===>for search\", u, this.state.users);\r\n    }\r\n  };\r\n  render() {\r\n    console.log(\"this.state.users @@@\", this.state.users);\r\n    return (\r\n      <div className=\"container App\">\r\n        <Router>\r\n          <h2>Users List</h2>\r\n          <div className=\"container text-right\">\r\n            <Link to={{ pathname: `/adduser` }}>\r\n              <button\r\n                onClick={this.addUser}\r\n                className=\"btn btn-primary btn-md m-1  \"\r\n              >\r\n                ADD USER\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"container mt-mb-10 text-left\">\r\n            <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n              {/* <SearchPage /> */}\r\n              <span className=\"icon-input-btn\">\r\n                <i className=\"fa fa-search\"></i>\r\n                <input\r\n                  // ref={inputEl}\r\n                  type=\"search \"\r\n                  placeholder=\"Search Users\"\r\n                  className=\"mt-mb-7 form-control  \"\r\n                  // v\r\n                  name=\"searchTerm\"\r\n                  onChange={this.onValueChange}\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\" container  \">\r\n            <table className=\"table mt-5 table-striped justify-content-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Age</th>\r\n                  <th>Email</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-left\">\r\n                {this.state.users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.age}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/updateuser/${user._id}`,\r\n                        }}\r\n                      >\r\n                        <button\r\n                          // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n                          onClick={() => this.editUserData(user._id)}\r\n                          className=\"btn btn-success btn-sm m-1  \"\r\n                          // component={Link}\r\n                          // to={`/updateuser/${user._id}`}\r\n                        >\r\n                          UPDATE\r\n                        </button>\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => {\r\n                          this.deleteUserData(user._id, user.name);\r\n                        }}\r\n                        className=\"btn btn-danger btn-sm m-1 \"\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                        DELETE\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state===>\", state.users, state.loading);\r\n//   const { users, loading } = state;\r\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n//   return {\r\n//     userData: users,\r\n//     loadingData: loading,\r\n//   };\r\n// };\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\r\n    fetchUsers: (page, limit) => dispatch(fetchUsers(page, limit)),\r\n  };\r\n};\r\nexport default connect(\r\n  (state) => (\r\n    console.log(\"state\", state),\r\n    { userData: state.users, loadingData: state.loading }\r\n  ),\r\n  { mapDispatchToProps }\r\n)(UserContainer);\r\n"]},"metadata":{},"sourceType":"module"}