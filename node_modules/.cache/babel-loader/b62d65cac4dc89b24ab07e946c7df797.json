{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainerUpdate.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser, updateUsers } from \"../redux\"; // import React from 'react'\n// import { useParams, useHistory, withRouter } from \"react-router-dom\";\n\nimport HeaderUser from \"./HeaderUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserContainerUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onValueChange = e => {\n      // setUser({ ...user, [e.target.name]: e.target.value });\n      // console.log(\"user==>\", user.name, user.age, user.email);\n      this.setState({\n        user: { ...this.state.user,\n          [e.target.name]: e.target.value\n        }\n      });\n      console.log(\"user==>\", this.state.user);\n    };\n\n    this.editUserDetails = async e => {\n      console.log(\"in else part\", this.state.user, this.props);\n      const response = await this.props.updateUsers(this.state.id, this.state.user);\n    };\n\n    this.state = {\n      user: {\n        name: \"\",\n        age: \"\",\n        email: \"\"\n      },\n      id: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.id;\n    this.setState({\n      id: id\n    });\n    console.log(\"idd\", id, this.props.userData, this.props.userData.name);\n    this.props.fetchUser(id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: [/*#__PURE__*/_jsxDEV(HeaderUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), this.props.userData.map(getuser => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.editUserDetails(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                className: \"form-control\",\n                defaultValue: getuser.name // value={user.name}\n                ,\n                onChange: this.onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"age\",\n                className: \"form-control\",\n                defaultValue: getuser.age // value={user.age}\n                ,\n                onChange: this.onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                className: \"form-control\",\n                defaultValue: getuser.email,\n                onChange: this.onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-left\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\" // onClick={this.editUserDetails()}\n                ,\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, getuser._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\n    updateUsers: (id, user) => dispatch(updateUsers(id, user)),\n    fetchUser: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(state => ({\n  userData: state.users,\n  loadingData: state.loading\n}), {\n  fetchUser,\n  mapDispatchToProps\n})(UserContainerUpdate); // import React, { Component, useState, useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchUser, updateUsers } from \"../redux\";\n// // import React from 'react'\n// import { useParams, useHistory, withRouter } from \"react-router-dom\";\n// import HeaderUser from \"./HeaderUser\";\n// // const location = useLocation();\n// const initialState = {\n//   name: \"\",\n//   age: \"\",\n//   email: \"\",\n// };\n// function UserContainerUpdate({ userData, fetchUser }, props) {\n//   const [user, setUser] = useState(initialState);\n//   const [users, setUsers] = useState();\n//   const { name, age, email } = user;\n//   const { id } = useParams();\n//   let history = useHistory();\n//   console.log(\n//     \"params DAta\",\n//     useParams(),\n//     userData,\n//     userData.name,\n//     userData.age,\n//     userData.email\n//   );\n//   useEffect(() => {\n//     fetchUser(id);\n//     setUsers(userData);\n//     console.log(\"user in useeffect\", users);\n//   }, []);\n//   console.log(\"params DAta\", useParams(), users, userData.age, userData.email);\n//   const onValueChange = (e) => {\n//     setUser({ ...user, [e.target.name]: e.target.value });\n//     console.log(\"user==>\", user.name, user.age, user.email);\n//   };\n//   console.log(\"out side update state\", id, name, age, email);\n//   console.log(\"user======>\", userData, users, user);\n//   const editUserDetails = (e) => {\n//     console.log(\"in else part\", user);\n//     setUsers(userData);\n//     console.log(\"users\", users);\n//     if (!name || !age || !email) {\n//       if (!name) {\n//         // const uname = users.name;\n//         // name = uname[0];\n//         // users.push(userData);\n//         console.log(\"user name\", users);\n//       }\n//       if (!age) {\n//         // age = userData.map((user) => user.age);\n//         console.log(\"user age\", user);\n//       }\n//       if (!email) {\n//         // email = userData.map((user) => user.email);\n//         console.log(\"user email\", user);\n//         updateUsers(id, user);\n//         // history.push(\"/home\");\n//       }\n//     } else {\n//       console.log(\"in else part\", user);\n//       updateUsers(id, user);\n//       // history.push(\"/home\");\n//     }\n//   };\n//   return (\n//     <div className=\"container \">\n//       <HeaderUser />\n//       {userData.map((getuser) => {\n//         return (\n//           <div key={getuser._id}>\n//             <form onSubmit={editUserDetails()}>\n//               <div className=\"form-group text-left\">\n//                 <label>Name:</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   className=\"form-control\"\n//                   defaultValue={getuser.name}\n//                   // value={user.name}\n//                   onChange={onValueChange}\n//                 />\n//               </div>\n//               <div className=\"form-group text-left\">\n//                 <label>Age:</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"age\"\n//                   className=\"form-control\"\n//                   defaultValue={getuser.age}\n//                   // value={user.age}\n//                   onChange={onValueChange}\n//                 />\n//               </div>\n//               <div className=\"form-group text-left\">\n//                 <label>Email:</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   className=\"form-control\"\n//                   defaultValue={getuser.email}\n//                   onChange={onValueChange}\n//                 />\n//               </div>\n//               <div className=\"form-group text-left\">\n//                 <button\n//                   className=\"btn btn-primary\"\n//                   // onClick={() => editUserDetails()}\n//                   type=\"submit\"\n//                 >\n//                   Update\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// }\n// const mapStateToProps = (state) => {\n//   console.log(\"state\", state);\n//   return {\n//     userData: state.users,\n//   };\n// };\n// export default connect(\n//   (state) => ({ userData: state.users, loadingData: state.loading }),\n//   { fetchUser, updateUsers }\n// )(UserContainerUpdate);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainerUpdate.js"],"names":["React","Component","connect","fetchUser","updateUsers","HeaderUser","UserContainerUpdate","constructor","props","onValueChange","e","setState","user","state","target","name","value","console","log","editUserDetails","response","id","age","email","componentDidMount","userData","render","map","getuser","_id","mapDispatchToProps","dispatch","users","loadingData","loading"],"mappings":"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":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser, updateUsers } from \"../redux\";\r\n// import React from 'react'\r\n// import { useParams, useHistory, withRouter } from \"react-router-dom\";\r\nimport HeaderUser from \"./HeaderUser\";\r\n\r\nclass UserContainerUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: \"\",\r\n        age: \"\",\r\n        email: \"\",\r\n      },\r\n      id: \"\",\r\n    };\r\n  }\r\n  onValueChange = (e) => {\r\n    // setUser({ ...user, [e.target.name]: e.target.value });\r\n    // console.log(\"user==>\", user.name, user.age, user.email);\r\n    this.setState({\r\n      user: { ...this.state.user, [e.target.name]: e.target.value },\r\n    });\r\n    console.log(\"user==>\", this.state.user);\r\n  };\r\n  componentDidMount() {\r\n    const id = this.props.id;\r\n    this.setState({ id: id });\r\n    console.log(\"idd\", id, this.props.userData, this.props.userData.name);\r\n    this.props.fetchUser(id);\r\n  }\r\n\r\n  editUserDetails = async (e) => {\r\n    console.log(\"in else part\", this.state.user, this.props);\r\n    const response = await this.props.updateUsers(\r\n      this.state.id,\r\n      this.state.user\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n        <HeaderUser />\r\n        {this.props.userData.map((getuser) => {\r\n          return (\r\n            <div key={getuser._id}>\r\n              <form onSubmit={this.editUserDetails()}>\r\n                <div className=\"form-group text-left\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    defaultValue={getuser.name}\r\n                    // value={user.name}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                  <label>Age:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"age\"\r\n                    className=\"form-control\"\r\n                    defaultValue={getuser.age}\r\n                    // value={user.age}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                  <label>Email:</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    defaultValue={getuser.email}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    // onClick={this.editUserDetails()}\r\n                    type=\"submit\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\r\n    updateUsers: (id, user) => dispatch(updateUsers(id, user)),\r\n    fetchUser: () => dispatch(fetchUser()),\r\n  };\r\n};\r\nexport default connect(\r\n  (state) => ({ userData: state.users, loadingData: state.loading }),\r\n  { fetchUser, mapDispatchToProps }\r\n)(UserContainerUpdate);\r\n// import React, { Component, useState, useEffect } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { fetchUser, updateUsers } from \"../redux\";\r\n// // import React from 'react'\r\n// import { useParams, useHistory, withRouter } from \"react-router-dom\";\r\n// import HeaderUser from \"./HeaderUser\";\r\n// // const location = useLocation();\r\n// const initialState = {\r\n//   name: \"\",\r\n//   age: \"\",\r\n//   email: \"\",\r\n// };\r\n// function UserContainerUpdate({ userData, fetchUser }, props) {\r\n//   const [user, setUser] = useState(initialState);\r\n//   const [users, setUsers] = useState();\r\n//   const { name, age, email } = user;\r\n//   const { id } = useParams();\r\n//   let history = useHistory();\r\n//   console.log(\r\n//     \"params DAta\",\r\n//     useParams(),\r\n//     userData,\r\n//     userData.name,\r\n//     userData.age,\r\n//     userData.email\r\n//   );\r\n//   useEffect(() => {\r\n//     fetchUser(id);\r\n//     setUsers(userData);\r\n//     console.log(\"user in useeffect\", users);\r\n//   }, []);\r\n\r\n//   console.log(\"params DAta\", useParams(), users, userData.age, userData.email);\r\n//   const onValueChange = (e) => {\r\n//     setUser({ ...user, [e.target.name]: e.target.value });\r\n//     console.log(\"user==>\", user.name, user.age, user.email);\r\n//   };\r\n\r\n//   console.log(\"out side update state\", id, name, age, email);\r\n\r\n//   console.log(\"user======>\", userData, users, user);\r\n//   const editUserDetails = (e) => {\r\n//     console.log(\"in else part\", user);\r\n//     setUsers(userData);\r\n//     console.log(\"users\", users);\r\n//     if (!name || !age || !email) {\r\n//       if (!name) {\r\n//         // const uname = users.name;\r\n//         // name = uname[0];\r\n//         // users.push(userData);\r\n\r\n//         console.log(\"user name\", users);\r\n//       }\r\n//       if (!age) {\r\n//         // age = userData.map((user) => user.age);\r\n//         console.log(\"user age\", user);\r\n//       }\r\n//       if (!email) {\r\n//         // email = userData.map((user) => user.email);\r\n//         console.log(\"user email\", user);\r\n//         updateUsers(id, user);\r\n//         // history.push(\"/home\");\r\n//       }\r\n//     } else {\r\n//       console.log(\"in else part\", user);\r\n//       updateUsers(id, user);\r\n//       // history.push(\"/home\");\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div className=\"container \">\r\n//       <HeaderUser />\r\n//       {userData.map((getuser) => {\r\n//         return (\r\n//           <div key={getuser._id}>\r\n//             <form onSubmit={editUserDetails()}>\r\n//               <div className=\"form-group text-left\">\r\n//                 <label>Name:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   className=\"form-control\"\r\n//                   defaultValue={getuser.name}\r\n//                   // value={user.name}\r\n//                   onChange={onValueChange}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group text-left\">\r\n//                 <label>Age:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"age\"\r\n//                   className=\"form-control\"\r\n//                   defaultValue={getuser.age}\r\n//                   // value={user.age}\r\n//                   onChange={onValueChange}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group text-left\">\r\n//                 <label>Email:</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   name=\"email\"\r\n//                   className=\"form-control\"\r\n//                   defaultValue={getuser.email}\r\n//                   onChange={onValueChange}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group text-left\">\r\n//                 <button\r\n//                   className=\"btn btn-primary\"\r\n//                   // onClick={() => editUserDetails()}\r\n//                   type=\"submit\"\r\n//                 >\r\n//                   Update\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         );\r\n//       })}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state\", state);\r\n//   return {\r\n//     userData: state.users,\r\n//   };\r\n// };\r\n// export default connect(\r\n//   (state) => ({ userData: state.users, loadingData: state.loading }),\r\n//   { fetchUser, updateUsers }\r\n// )(UserContainerUpdate);\r\n"]},"metadata":{},"sourceType":"module"}