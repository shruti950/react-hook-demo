{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainerUpdate.js\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchUser, updateUsers } from \"../redux\";\n// // import React from 'react'\n// // import { useParams, useHistory, withRouter } from \"react-router-dom\";\n// import HeaderUser from \"./HeaderUser\";\n// class UserContainerUpdate extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: \"\",\n//         age: \"\",\n//         email: \"\",\n//       },\n//       id: \"\",\n//     };\n//   }\n//   onValueChange = (e) => {\n//     // setUser({ ...user, [e.target.name]: e.target.value });\n//     // console.log(\"user==>\", user.name, user.age, user.email);\n//     this.setState({\n//       user: { ...this.state.user, [e.target.name]: e.target.value },\n//     });\n//     console.log(\"user==>\", this.state.user);\n//   };\n//   componentDidMount() {\n//     const id = this.props.id;\n//     this.setState({ id: id });\n//     console.log(\"idd\", id, this.props.userData, this.props.userData.name);\n//     this.props.fetchUser(id);\n//   }\n//   getId = () => {};\n//   editUserDetails = (e) => {\n//     console.log(\"in edit user part\", this.state.user);\n//     // if (\n//     //   !this.state.user.name ||\n//     //   !this.state.user.age ||\n//     //   !this.state.user.email\n//     // ) {\n//     //   if (!this.state.user.name) {\n//     //     this.state.user.name = this.props.userData.name;\n//     //   }\n//     //   if (!this.state.user.age) {\n//     //     this.state.user.age = this.props.userData.age;\n//     //   }\n//     //   if (!this.state.user.email) {\n//     //     this.state.user.email = this.props.userData.email;\n//     // }\n//     // await updateUsers(this.state.id, this.state.user);\n//     // history.push(\"/home\");\n//     // } else {\n//     console.log(\"in else part\", this.state.user);\n//     this.props.updateUsers(this.state.id, this.state.user);\n//     // history.push(\"/home\");\n//     // }\n//   };\n//   render() {\n//     return (\n//       <div className=\"container \">\n//         <HeaderUser />\n//         {this.props.userData.map((getuser) => {\n//           return (\n//             <div key={getuser._id}>\n//               <form onSubmit={this.editUserDetails()}>\n//                 <div className=\"form-group text-left\">\n//                   <label>Name:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     className=\"form-control\"\n//                     defaultValue={getuser.name}\n//                     // value={user.name}\n//                     onChange={this.onValueChange}\n//                   />\n//                 </div>\n//                 <div className=\"form-group text-left\">\n//                   <label>Age:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"age\"\n//                     className=\"form-control\"\n//                     defaultValue={getuser.age}\n//                     // value={user.age}\n//                     onChange={this.onValueChange}\n//                   />\n//                 </div>\n//                 <div className=\"form-group text-left\">\n//                   <label>Email:</label>\n//                   <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     className=\"form-control\"\n//                     defaultValue={getuser.email}\n//                     onChange={this.onValueChange}\n//                   />\n//                 </div>\n//                 <div className=\"form-group text-left\">\n//                   <button\n//                     className=\"btn btn-primary\"\n//                     onClick={() => this.editUserDetails()}\n//                     type=\"submit\"\n//                   >\n//                     Update\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           );\n//         })}\n//       </div>\n//     );\n//   }\n// }\n// export default connect(\n//   (state) => ({ userData: state.users, loadingData: state.loading }),\n//   { fetchUser, updateUsers }\n// )(UserContainerUpdate);\nimport React, { Component, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser, updateUsers } from \"../redux\"; // import React from 'react'\n\nimport { useParams, useHistory, withRouter } from \"react-router-dom\";\nimport HeaderUser from \"./HeaderUser\"; // const location = useLocation();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  age: \"\",\n  email: \"\"\n};\n\nfunction UserContainerUpdate({\n  userData,\n  fetchUser\n}, props) {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const [users, setUsers] = useState();\n  const {\n    name,\n    age,\n    email\n  } = user;\n  const {\n    id\n  } = useParams();\n  let history = useHistory();\n  console.log(\"params DAta\", useParams(), userData, userData.name, userData.age, userData.email);\n  useEffect(() => {\n    fetchUser(id);\n    setUsers(userData);\n  }, []);\n  console.log(\"params DAta\", useParams(), users, userData.age, userData.email);\n\n  const onValueChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n    console.log(\"user==>\", user.name, user.age, user.email);\n  };\n\n  console.log(\"out side update state\", id, name, age, email);\n  console.log(\"user======>\", userData, users, user);\n\n  const editUserDetails = e => {\n    console.log(\"in else part\", user);\n\n    if (!name || !age || !email) {\n      if (!name) {\n        const uname = userData.map(user => user.name);\n        name = uname[0];\n        console.log(\"user name\", uname[0], user);\n      }\n\n      if (!age) {\n        // age = userData.map((user) => user.age);\n        console.log(\"user age\", user);\n      }\n\n      if (!email) {\n        // email = userData.map((user) => user.email);\n        console.log(\"user email\", user);\n        updateUsers(id, user); // history.push(\"/home\");\n      }\n    } else {\n      console.log(\"in else part\", user);\n      updateUsers(id, user); // history.push(\"/home\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: [/*#__PURE__*/_jsxDEV(HeaderUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), userData.map(getuser => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editUserDetails(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              className: \"form-control\",\n              defaultValue: getuser.name // value={user.name}\n              ,\n              onChange: onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"age\",\n              className: \"form-control\",\n              defaultValue: getuser.age // value={user.age}\n              ,\n              onChange: onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control\",\n              defaultValue: getuser.email,\n              onChange: onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\" // onClick={() => editUserDetails()}\n              ,\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, getuser._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContainerUpdate, \"/odSlmtkE2hs08o5I+oTusKnUkc=\", false, function () {\n  return [useParams, useHistory, useParams, useParams];\n});\n\n_c = UserContainerUpdate;\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    userData: state.users\n  };\n};\n\nexport default connect(state => ({\n  userData: state.users,\n  loadingData: state.loading\n}), {\n  fetchUser,\n  updateUsers\n})(UserContainerUpdate);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainerUpdate\");","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainerUpdate.js"],"names":["React","Component","useState","useEffect","connect","fetchUser","updateUsers","useParams","useHistory","withRouter","HeaderUser","initialState","name","age","email","UserContainerUpdate","userData","props","user","setUser","users","setUsers","id","history","console","log","onValueChange","e","target","value","editUserDetails","uname","map","getuser","_id","mapStateToProps","state","loadingData","loading"],"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","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { fetchUser, updateUsers } from \"../redux\";\r\n// // import React from 'react'\r\n// // import { useParams, useHistory, withRouter } from \"react-router-dom\";\r\n// import HeaderUser from \"./HeaderUser\";\r\n\r\n// class UserContainerUpdate extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: \"\",\r\n//         age: \"\",\r\n//         email: \"\",\r\n//       },\r\n//       id: \"\",\r\n//     };\r\n//   }\r\n//   onValueChange = (e) => {\r\n//     // setUser({ ...user, [e.target.name]: e.target.value });\r\n//     // console.log(\"user==>\", user.name, user.age, user.email);\r\n//     this.setState({\r\n//       user: { ...this.state.user, [e.target.name]: e.target.value },\r\n//     });\r\n//     console.log(\"user==>\", this.state.user);\r\n//   };\r\n//   componentDidMount() {\r\n//     const id = this.props.id;\r\n//     this.setState({ id: id });\r\n//     console.log(\"idd\", id, this.props.userData, this.props.userData.name);\r\n//     this.props.fetchUser(id);\r\n//   }\r\n//   getId = () => {};\r\n//   editUserDetails = (e) => {\r\n//     console.log(\"in edit user part\", this.state.user);\r\n//     // if (\r\n//     //   !this.state.user.name ||\r\n//     //   !this.state.user.age ||\r\n//     //   !this.state.user.email\r\n//     // ) {\r\n//     //   if (!this.state.user.name) {\r\n//     //     this.state.user.name = this.props.userData.name;\r\n//     //   }\r\n//     //   if (!this.state.user.age) {\r\n//     //     this.state.user.age = this.props.userData.age;\r\n//     //   }\r\n//     //   if (!this.state.user.email) {\r\n//     //     this.state.user.email = this.props.userData.email;\r\n//     // }\r\n//     // await updateUsers(this.state.id, this.state.user);\r\n//     // history.push(\"/home\");\r\n//     // } else {\r\n//     console.log(\"in else part\", this.state.user);\r\n//     this.props.updateUsers(this.state.id, this.state.user);\r\n//     // history.push(\"/home\");\r\n//     // }\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className=\"container \">\r\n//         <HeaderUser />\r\n//         {this.props.userData.map((getuser) => {\r\n//           return (\r\n//             <div key={getuser._id}>\r\n//               <form onSubmit={this.editUserDetails()}>\r\n//                 <div className=\"form-group text-left\">\r\n//                   <label>Name:</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"name\"\r\n//                     className=\"form-control\"\r\n//                     defaultValue={getuser.name}\r\n//                     // value={user.name}\r\n//                     onChange={this.onValueChange}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group text-left\">\r\n//                   <label>Age:</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"age\"\r\n//                     className=\"form-control\"\r\n//                     defaultValue={getuser.age}\r\n//                     // value={user.age}\r\n//                     onChange={this.onValueChange}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group text-left\">\r\n//                   <label>Email:</label>\r\n//                   <input\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     className=\"form-control\"\r\n//                     defaultValue={getuser.email}\r\n//                     onChange={this.onValueChange}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group text-left\">\r\n//                   <button\r\n//                     className=\"btn btn-primary\"\r\n//                     onClick={() => this.editUserDetails()}\r\n//                     type=\"submit\"\r\n//                   >\r\n//                     Update\r\n//                   </button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default connect(\r\n//   (state) => ({ userData: state.users, loadingData: state.loading }),\r\n//   { fetchUser, updateUsers }\r\n// )(UserContainerUpdate);\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser, updateUsers } from \"../redux\";\r\n// import React from 'react'\r\nimport { useParams, useHistory, withRouter } from \"react-router-dom\";\r\nimport HeaderUser from \"./HeaderUser\";\r\n// const location = useLocation();\r\nconst initialState = {\r\n  name: \"\",\r\n  age: \"\",\r\n  email: \"\",\r\n};\r\nfunction UserContainerUpdate({ userData, fetchUser }, props) {\r\n  const [user, setUser] = useState(initialState);\r\n  const [users, setUsers] = useState();\r\n  const { name, age, email } = user;\r\n  const { id } = useParams();\r\n  let history = useHistory();\r\n  console.log(\r\n    \"params DAta\",\r\n    useParams(),\r\n    userData,\r\n    userData.name,\r\n    userData.age,\r\n    userData.email\r\n  );\r\n  useEffect(() => {\r\n    fetchUser(id);\r\n    setUsers(userData);\r\n  }, []);\r\n\r\n  console.log(\"params DAta\", useParams(), users, userData.age, userData.email);\r\n  const onValueChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n    console.log(\"user==>\", user.name, user.age, user.email);\r\n  };\r\n\r\n  console.log(\"out side update state\", id, name, age, email);\r\n\r\n  console.log(\"user======>\", userData, users, user);\r\n  const editUserDetails = (e) => {\r\n    console.log(\"in else part\", user);\r\n    if (!name || !age || !email) {\r\n      if (!name) {\r\n        const uname = userData.map((user) => user.name);\r\n        name = uname[0];\r\n        console.log(\"user name\", uname[0], user);\r\n      }\r\n      if (!age) {\r\n        // age = userData.map((user) => user.age);\r\n        console.log(\"user age\", user);\r\n      }\r\n      if (!email) {\r\n        // email = userData.map((user) => user.email);\r\n        console.log(\"user email\", user);\r\n        updateUsers(id, user);\r\n        // history.push(\"/home\");\r\n      }\r\n    } else {\r\n      console.log(\"in else part\", user);\r\n      updateUsers(id, user);\r\n      // history.push(\"/home\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container \">\r\n      <HeaderUser />\r\n      {userData.map((getuser) => {\r\n        return (\r\n          <div key={getuser._id}>\r\n            <form onSubmit={editUserDetails()}>\r\n              <div className=\"form-group text-left\">\r\n                <label>Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  defaultValue={getuser.name}\r\n                  // value={user.name}\r\n                  onChange={onValueChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-left\">\r\n                <label>Age:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  className=\"form-control\"\r\n                  defaultValue={getuser.age}\r\n                  // value={user.age}\r\n                  onChange={onValueChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-left\">\r\n                <label>Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  defaultValue={getuser.email}\r\n                  onChange={onValueChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-left\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  // onClick={() => editUserDetails()}\r\n                  type=\"submit\"\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    userData: state.users,\r\n  };\r\n};\r\nexport default connect(\r\n  (state) => ({ userData: state.users, loadingData: state.loading }),\r\n  { fetchUser, updateUsers }\r\n)(UserContainerUpdate);\r\n"]},"metadata":{},"sourceType":"module"}