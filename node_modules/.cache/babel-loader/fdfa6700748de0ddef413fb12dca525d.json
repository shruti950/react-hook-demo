{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\nimport UserContainerForm from \"./UserContainerForm\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport childComponent from \"./UserContainerUpdate\";\nimport UserContainerUpdate from \"./UserContainerUpdate\";\nimport SearchField from \"react-search-field\"; // import SearchBar from \"./SearchBar\";\n// import SearchPage from \"./searchPage\";\n\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, useHistory, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserContainer({\n  userData,\n  fetchUsers\n}, props) {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [postsPerPage] = useState(5);\n  const [offset, setOffset] = useState(0);\n  const [posts, setAllPosts] = useState([]);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(4);\n  const [pageCount, setPageCount] = useState(0); // const [user, setUser] = useState([]);\n\n  const inputEl = useRef(\"\"); // const { name, age, email } = user;\n\n  const history = useHistory();\n  useEffect(() => {\n    fetchUsers();\n    console.log(\"response data\", fetchUsers());\n    setUsers(userData);\n    getData();\n    console.log(\"users 33 userData\", users, userData);\n  }, [offset]);\n  console.log(\"userData\", userData); // const slice=userData.slice()\n\n  const deleteUserData = async (id, name) => {\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n      await deleteUsers(id);\n    } else {\n      history.push(\"/home\");\n    } // await deleteUsers(id);\n\n\n    fetchUsers();\n  };\n\n  const getData = async () => {\n    const res = await axios.get(`http://localhost:9000/`);\n    const data = res.data;\n    console.log(\"file: userContainer.js ~ line 54 ~ getData ~ data \", data);\n    const slice = userData.slice(offset, offset + perPage);\n    console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n    const postData = slice.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container \",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table mt-5 table-striped justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"text-left\",\n          children: userData.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/updateuser/${user._id}`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: /*#__PURE__*/_jsxDEV(Redirect, {\n                    to: \"/updateuser/${user._id}\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 32\n                  }, this),\n                  className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                  // to={`/updateuser/${user._id}`}\n                  ,\n                  children: \"UPDATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deleteUserData(user._id, user.name);\n                },\n                className: \"btn btn-danger btn-sm m-1 \",\n                children: \"DELETE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n    setData(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  const addUser = async () => {\n    history.push(\"/adduser\"); // <UserContainerForm />;\n  };\n\n  const filterContent = (users, searchTerm) => {\n    const result = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    console.log(\"result\", result);\n    setUsers(result);\n  };\n\n  const onValueChange = e => {\n    // console.log(e.currentTarget.value);\n    const searchTerm = e.currentTarget.value;\n    fetchUsers(); // axios.get(\"http://localhost:9000/\").then((response) => {\n\n    if (userData) {\n      console.log(\"users for search\", userData);\n      filterContent(userData, searchTerm);\n    } // });\n\n  };\n\n  const getAllUsers = () => {\n    const res = fetchUsers();\n    console.log(\"response data\", fetchUsers());\n    setUsers(userData);\n    console.log(\"users 70\", users, setUsers(userData));\n  }; // const getPostData = (data) => {\n  //   return (\n  //     <div>\n  //       <Router>\n  //         <div className=\"container text-right\">\n  //           <Link to={{ pathname: `/adduser` }}>\n  //             <button\n  //               onClick={addUser}\n  //               className=\"btn btn-primary btn-md m-1  \"\n  //             >\n  //               ADD USER\n  //             </button>\n  //           </Link>\n  //         </div>\n  //         <div className=\"container mb-10 text-left\">\n  //           <div className=\"w-75 mb-10  justify-content-left ui icon input\">\n  //             {/* <SearchPage /> */}\n  //             <input\n  //               // ref={inputEl}\n  //               type=\"search \"\n  //               placeholder=\"Search Users\"\n  //               className=\"mb-7 form-control  \"\n  //               // v\n  //               name=\"searchTerm\"\n  //               onChange={onValueChange}\n  //             />\n  //           </div>\n  //         </div>\n  //         <div className=\" container \">\n  //           <table className=\"table mt-5 table-striped justify-content-center\">\n  //             <thead>\n  //               <tr>\n  //                 <th>Name</th>\n  //                 <th>Age</th>\n  //                 <th>Email</th>\n  //                 <th>Action</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody className=\"text-left\">\n  //               {data.map((user) => (\n  //                 <tr key={user._id}>\n  //                   <td>{user.name}</td>\n  //                   <td>{user.age}</td>\n  //                   <td>{user.email}</td>\n  //                   <td>\n  //                     <Link\n  //                       to={{\n  //                         pathname: `/updateuser/${user._id}`,\n  //                       }}\n  //                     >\n  //                       <button\n  //                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n  //                         className=\"btn btn-success btn-sm m-1  \"\n  //                         // component={Link}\n  //                         // to={`/updateuser/${user._id}`}\n  //                       >\n  //                         UPDATE\n  //                       </button>\n  //                     </Link>\n  //                     <button\n  //                       onClick={() => {\n  //                         deleteUserData(user._id, user.name);\n  //                       }}\n  //                       className=\"btn btn-danger btn-sm m-1 \"\n  //                     >\n  //                       DELETE\n  //                     </button>\n  //                   </td>\n  //                 </tr>\n  //               ))}\n  //             </tbody>\n  //           </table>\n  //         </div>\n  //       </Router>\n  //     </div>\n  //   );\n  // };\n  // const getAllPosts = async () => {\n  //   fetchUsers();\n  //   setUsers(userData);\n  //   const data = userData;\n  //   console.log(\"Users 83\", userData, data);\n  //   const slice = data.slice(offset, offset + postsPerPage);\n  //   // For displaying Data\n  //   const postData = getPostData(slice);\n  //   // Using Hooks to set value\n  //   setAllPosts(postData);\n  //   console.log(\"Users 90\", slice);\n  //   setPageCount(Math.ceil(users.length / postsPerPage));\n  // };\n  // const handlePageClick = (event) => {\n  //   const selectedPage = event.selected;\n  //   setOffset(selectedPage + 1);\n  // };\n  // useEffect(() => {\n  //   getAllPosts();\n  // }, [offset]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-right\",\n        children: [data, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"prev\",\n          nextLabel: \"next\",\n          breakLabel: \"...\",\n          breakClassName: \"break-me\",\n          pageCount: pageCount,\n          marginPagesDisplayed: 2,\n          pageRangeDisplayed: 5,\n          onPageChange: handlePageClick,\n          containerClassName: \"pagination\",\n          subContainerClassName: \"pages pagination\",\n          activeClassName: \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/adduser`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addUser,\n            className: \"btn btn-primary btn-md m-1  \",\n            children: \"ADD USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mb-10 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-75 mb-10  justify-content-left ui icon input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            // ref={inputEl}\n            type: \"search \",\n            placeholder: \"Search Users\",\n            className: \"mb-7 form-control  \" // v\n            ,\n            name: \"searchTerm\",\n            onChange: onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" container \",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table mt-5 table-striped justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"text-left\",\n            children: userData.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `/updateuser/${user._id}`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: /*#__PURE__*/_jsxDEV(Redirect, {\n                      to: \"/updateuser/${user._id}\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 34\n                    }, this),\n                    className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                    // to={`/updateuser/${user._id}`}\n                    ,\n                    children: \"UPDATE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    deleteUserData(user._id, user.name);\n                  },\n                  className: \"btn btn-danger btn-sm m-1 \",\n                  children: \"DELETE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContainer, \"HBjJR9XkPn+7lTptyzejWkPi6oI=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserContainer;\n\nconst mapStateToProps = state => {\n  console.log(\"state===>\", state);\n  return {\n    userData: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  console.log();\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer); // connect(mapStateToProps, { fetchUsers }\n// connect(mapStateToProps, { fetchUsers })\n// import React, { Component, useEffect, useState, useRef } from \"react\";\n// import { connect } from \"react-redux\";\n// import { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\n// import UserContainerForm from \"./UserContainerForm\";\n// import {\n//   BrowserRouter as Router,\n//   Link,\n//   useHistory,\n//   Redirect,\n// } from \"react-router-dom\";\n// import UsePagination from \"./usePagination\";\n// import { usePagination } from \"@material-ui/lab\";\n// import ReactPaginate from \"react-paginate\";\n// function UserContainer({ userData, fetchUsers }, props) {\n//   const [users, setUsers] = useState([]);\n//   // const [user, setUser] = useState([]);\n//   const inputEl = useRef(\"\");\n//   const [postsPerPage] = useState(4);\n//   const [offset, setOffset] = useState(0);\n//   const [posts, setAllPosts] = useState([]);\n//   const [pageCount, setPageCount] = useState(0);\n//   // const { name, age, email } = user;\n//   useEffect(() => {\n//     fetchUsers();\n//     setAllPosts(userData);\n//     console.log(\"users======> in useeffect \", posts, userData);\n//   }, []);\n//   // useEffect(() => {\n//   //   getAllPosts();\n//   // }, [offset]);\n//   const history = useHistory();\n//   const deleteUserData = async (id, name) => {\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n//       await deleteUsers(id);\n//     } else {\n//       history.push(\"/home\");\n//     }\n//     // await deleteUsers(id);\n//     fetchUsers();\n//   };\n//   const addUser = async () => {\n//     history.push(\"/adduser\");\n//     // <UserContainerForm />;\n//   };\n//   const filterContent = (users, searchTerm) => {\n//     const result = users.filter((user) =>\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     console.log(\"result\", result);\n//     setUsers(result);\n//   };\n//   const onValueChange = (e) => {\n//     const searchTerm = e.currentTarget.value;\n//     fetchUsers();\n//     if (userData) {\n//       console.log(\"users for search\", userData);\n//       filterContent(userData, searchTerm);\n//     }\n//   };\n//   const getPostData = (data) => {\n//     return (\n//       <div>\n//         <Router>\n//           <div className=\"container text-right\">\n//             <Link to={{ pathname: `/adduser` }}>\n//               <button\n//                 onClick={addUser}\n//                 className=\"btn btn-primary btn-md m-1  \"\n//               >\n//                 ADD USER\n//               </button>\n//             </Link>\n//           </div>\n//           <div className=\"container mb-10 text-left\">\n//             <div className=\"w-75 mb-10  justify-content-left ui icon input\">\n//               {/* <SearchPage /> */}\n//               <input\n//                 // ref={inputEl}\n//                 type=\"search \"\n//                 placeholder=\"Search Users\"\n//                 className=\"mb-7 form-control  \"\n//                 // v\n//                 name=\"searchTerm\"\n//                 onChange={onValueChange}\n//               />\n//             </div>\n//           </div>\n//           <div className=\" container \">\n//             <table className=\"table mt-5 table-striped justify-content-center\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Age</th>\n//                   <th>Email</th>\n//                   <th>Action</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-left\">\n//                 {data.map((user) => (\n//                   <tr key={user._id}>\n//                     <td>{user.name}</td>\n//                     <td>{user.age}</td>\n//                     <td>{user.email}</td>\n//                     <td>\n//                       <Link\n//                         to={{\n//                           pathname: `/updateuser/${user._id}`,\n//                         }}\n//                       >\n//                         <button\n//                           onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                           className=\"btn btn-success btn-sm m-1  \"\n//                           // component={Link}\n//                           // to={`/updateuser/${user._id}`}\n//                         >\n//                           UPDATE\n//                         </button>\n//                       </Link>\n//                       <button\n//                         onClick={() => {\n//                           deleteUserData(user._id, user.name);\n//                         }}\n//                         className=\"btn btn-danger btn-sm m-1 \"\n//                       >\n//                         DELETE\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </Router>\n//       </div>\n//     );\n//   };\n//   const getAllPosts = async () => {\n//     fetchUsers();\n//     const data = userData;\n//     // setUsers(userData);\n//     console.log(\"dtaa in get all post\", data);\n//     const slice = users.slice(offset, offset + postsPerPage);\n//     console.log(\n//       \"🚀 ~ file: userContainer.js ~ line 73 ~ getAllPosts ~ slice \",\n//       slice\n//     );\n//     // For displaying Data\n//     const postData = getPostData(slice);\n//     console.log(\n//       \"🚀 ~ file: userContainer.js ~ line 151 ~ getAllPosts ~ postData\",\n//       postData\n//     );\n//     // console.log(\n//     //   \"🚀 ~ file: userContainer.js ~ line 152 ~ data.length\",\n//     //   data.length\n//     // );\n//     // Using Hooks to set value\n//     setAllPosts(postData);\n//     // setUsers(slice);\n//     setPageCount(Math.ceil(data.length / postsPerPage));\n//   };\n//   const handlePageClick = (event) => {\n//     const selectedPage = event.selected;\n//     console.log(\n//       \"file: userContainer.js ~ line 166 ~ handlePageClick ~ selectedPage \",\n//       selectedPage\n//     );\n//     setOffset(selectedPage + 1);\n//   };\n//   return (\n//     <div>\n//       <Router>\n//         <h2>Users List</h2>\n//         <div className=\"container text-right\">\n//           {posts}\n//           {/* Using React Paginate */}\n//           <ReactPaginate\n//             previousLabel={\"previous\"}\n//             nextLabel={\" next\"}\n//             breakLabel={\"...\"}\n//             breakClassName={\"break-me\"}\n//             pageCount={pageCount}\n//             onPageChange={handlePageClick}\n//             containerClassName={\"pagination\"}\n//             subContainerClassName={\"pages pagination\"}\n//             activeClassName={\"active\"}\n//           />\n//           <Link to={{ pathname: `/adduser` }}>\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\n//               ADD USER\n//             </button>\n//           </Link>\n//         </div>\n//         <div className=\"container mb-10 text-left\">\n//           <div className=\"w-75 mb-10  justify-content-left ui icon input\">\n//             {/* <SearchPage /> */}\n//             <input\n//               // ref={inputEl}\n//               type=\"search \"\n//               placeholder=\"Search Users\"\n//               className=\"mb-7 form-control  \"\n//               // v\n//               name=\"searchTerm\"\n//               onChange={onValueChange}\n//             />\n//           </div>\n//         </div>\n//         <div className=\" container \">\n//           <table className=\"table mt-5 table-striped justify-content-center\">\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Age</th>\n//                 <th>Email</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"text-left\">\n//               {users.map((user) => (\n//                 <tr key={user._id}>\n//                   <td>{user.name}</td>\n//                   <td>{user.age}</td>\n//                   <td>{user.email}</td>\n//                   <td>\n//                     <Link\n//                       to={{\n//                         pathname: `/updateuser/${user._id}`,\n//                       }}\n//                     >\n//                       <button\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                         className=\"btn btn-success btn-sm m-1  \"\n//                         // component={Link}\n//                         // to={`/updateuser/${user._id}`}\n//                       >\n//                         UPDATE\n//                       </button>\n//                     </Link>\n//                     <button\n//                       onClick={() => {\n//                         deleteUserData(user._id, user.name);\n//                       }}\n//                       className=\"btn btn-danger btn-sm m-1 \"\n//                     >\n//                       DELETE\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </Router>\n//     </div>\n//   );\n// }\n// const mapStateToProps = (state) => {\n//   console.log(\"state\", state.users);\n//   return {\n//     userData: state.users,\n//   };\n// };\n// // const mapDispatchToProps = (dispatch) => {\n// //   console.log();\n// //   return {\n// //     fetchUsers: () => dispatch(fetchUsers()),\n// //     updateUsers:()=>dispatch(updateUsers())\n// //   };\n// // };\n// export default connect(mapStateToProps, { fetchUsers, updateUsers })(\n//   UserContainer\n// );\n// // connect(mapStateToProps, { fetchUsers })\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainer\");","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainer.js"],"names":["React","Component","useEffect","useState","useRef","connect","deleteUsers","fetchUsers","updateUsers","UserContainerForm","Autocomplete","childComponent","UserContainerUpdate","SearchField","axios","BrowserRouter","Router","Link","useHistory","Redirect","ReactPaginate","UserContainer","userData","props","users","setUsers","postsPerPage","offset","setOffset","posts","setAllPosts","data","setData","perPage","pageCount","setPageCount","inputEl","history","console","log","getData","deleteUserData","id","name","window","confirm","push","res","get","slice","postData","map","user","age","email","pathname","_id","Math","ceil","length","handlePageClick","e","selectedPage","selected","addUser","filterContent","searchTerm","result","filter","toLowerCase","includes","onValueChange","currentTarget","value","getAllUsers","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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":["import React, { Component, useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\r\nimport UserContainerForm from \"./UserContainerForm\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport childComponent from \"./UserContainerUpdate\";\r\nimport UserContainerUpdate from \"./UserContainerUpdate\";\r\nimport SearchField from \"react-search-field\";\r\n// import SearchBar from \"./SearchBar\";\r\n// import SearchPage from \"./searchPage\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nfunction UserContainer({ userData, fetchUsers }, props) {\r\n  const [users, setUsers] = useState([]);\r\n  const [postsPerPage] = useState(5);\r\n  const [offset, setOffset] = useState(0);\r\n  const [posts, setAllPosts] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [perPage] = useState(4);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // const [user, setUser] = useState([]);\r\n  const inputEl = useRef(\"\");\r\n  // const { name, age, email } = user;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    console.log(\"response data\", fetchUsers());\r\n    setUsers(userData);\r\n    getData();\r\n    console.log(\"users 33 userData\", users, userData);\r\n  }, [offset]);\r\n  console.log(\"userData\", userData);\r\n  // const slice=userData.slice()\r\n  const deleteUserData = async (id, name) => {\r\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n      await deleteUsers(id);\r\n    } else {\r\n      history.push(\"/home\");\r\n    }\r\n\r\n    // await deleteUsers(id);\r\n    fetchUsers();\r\n  };\r\n  const getData = async () => {\r\n    const res = await axios.get(`http://localhost:9000/`);\r\n    const data = res.data;\r\n    console.log(\"file: userContainer.js ~ line 54 ~ getData ~ data \", data);\r\n    const slice = userData.slice(offset, offset + perPage);\r\n    console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n    const postData = slice.map((user) => (\r\n      <div className=\" container \">\r\n        <table className=\"table mt-5 table-striped justify-content-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Age</th>\r\n              <th>Email</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-left\">\r\n            {userData.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user.name}</td>\r\n                <td>{user.age}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/updateuser/${user._id}`,\r\n                    }}\r\n                  >\r\n                    <button\r\n                      onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n                      className=\"btn btn-success btn-sm m-1  \"\r\n                      // component={Link}\r\n                      // to={`/updateuser/${user._id}`}\r\n                    >\r\n                      UPDATE\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteUserData(user._id, user.name);\r\n                    }}\r\n                    className=\"btn btn-danger btn-sm m-1 \"\r\n                  >\r\n                    DELETE\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    ));\r\n    setData(postData);\r\n    setPageCount(Math.ceil(data.length / perPage));\r\n  };\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setOffset(selectedPage + 1);\r\n  };\r\n  const addUser = async () => {\r\n    history.push(\"/adduser\");\r\n    // <UserContainerForm />;\r\n  };\r\n  const filterContent = (users, searchTerm) => {\r\n    const result = users.filter((user) =>\r\n      user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    console.log(\"result\", result);\r\n    setUsers(result);\r\n  };\r\n  const onValueChange = (e) => {\r\n    // console.log(e.currentTarget.value);\r\n    const searchTerm = e.currentTarget.value;\r\n    fetchUsers();\r\n    // axios.get(\"http://localhost:9000/\").then((response) => {\r\n    if (userData) {\r\n      console.log(\"users for search\", userData);\r\n      filterContent(userData, searchTerm);\r\n    }\r\n    // });\r\n  };\r\n  const getAllUsers = () => {\r\n    const res = fetchUsers();\r\n    console.log(\"response data\", fetchUsers());\r\n    setUsers(userData);\r\n    console.log(\"users 70\", users, setUsers(userData));\r\n  };\r\n  // const getPostData = (data) => {\r\n  //   return (\r\n  //     <div>\r\n  //       <Router>\r\n  //         <div className=\"container text-right\">\r\n  //           <Link to={{ pathname: `/adduser` }}>\r\n  //             <button\r\n  //               onClick={addUser}\r\n  //               className=\"btn btn-primary btn-md m-1  \"\r\n  //             >\r\n  //               ADD USER\r\n  //             </button>\r\n  //           </Link>\r\n  //         </div>\r\n  //         <div className=\"container mb-10 text-left\">\r\n  //           <div className=\"w-75 mb-10  justify-content-left ui icon input\">\r\n  //             {/* <SearchPage /> */}\r\n  //             <input\r\n  //               // ref={inputEl}\r\n  //               type=\"search \"\r\n  //               placeholder=\"Search Users\"\r\n  //               className=\"mb-7 form-control  \"\r\n  //               // v\r\n  //               name=\"searchTerm\"\r\n  //               onChange={onValueChange}\r\n  //             />\r\n  //           </div>\r\n  //         </div>\r\n  //         <div className=\" container \">\r\n  //           <table className=\"table mt-5 table-striped justify-content-center\">\r\n  //             <thead>\r\n  //               <tr>\r\n  //                 <th>Name</th>\r\n  //                 <th>Age</th>\r\n  //                 <th>Email</th>\r\n  //                 <th>Action</th>\r\n  //               </tr>\r\n  //             </thead>\r\n  //             <tbody className=\"text-left\">\r\n  //               {data.map((user) => (\r\n  //                 <tr key={user._id}>\r\n  //                   <td>{user.name}</td>\r\n  //                   <td>{user.age}</td>\r\n  //                   <td>{user.email}</td>\r\n  //                   <td>\r\n  //                     <Link\r\n  //                       to={{\r\n  //                         pathname: `/updateuser/${user._id}`,\r\n  //                       }}\r\n  //                     >\r\n  //                       <button\r\n  //                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n  //                         className=\"btn btn-success btn-sm m-1  \"\r\n  //                         // component={Link}\r\n  //                         // to={`/updateuser/${user._id}`}\r\n  //                       >\r\n  //                         UPDATE\r\n  //                       </button>\r\n  //                     </Link>\r\n  //                     <button\r\n  //                       onClick={() => {\r\n  //                         deleteUserData(user._id, user.name);\r\n  //                       }}\r\n  //                       className=\"btn btn-danger btn-sm m-1 \"\r\n  //                     >\r\n  //                       DELETE\r\n  //                     </button>\r\n  //                   </td>\r\n  //                 </tr>\r\n  //               ))}\r\n  //             </tbody>\r\n  //           </table>\r\n  //         </div>\r\n  //       </Router>\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  // const getAllPosts = async () => {\r\n  //   fetchUsers();\r\n  //   setUsers(userData);\r\n  //   const data = userData;\r\n  //   console.log(\"Users 83\", userData, data);\r\n  //   const slice = data.slice(offset, offset + postsPerPage);\r\n\r\n  //   // For displaying Data\r\n  //   const postData = getPostData(slice);\r\n\r\n  //   // Using Hooks to set value\r\n  //   setAllPosts(postData);\r\n  //   console.log(\"Users 90\", slice);\r\n  //   setPageCount(Math.ceil(users.length / postsPerPage));\r\n  // };\r\n\r\n  // const handlePageClick = (event) => {\r\n  //   const selectedPage = event.selected;\r\n  //   setOffset(selectedPage + 1);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getAllPosts();\r\n  // }, [offset]);\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <h2>Users List</h2>\r\n        <div className=\"container text-right\">\r\n          {data}\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n\r\n          <Link to={{ pathname: `/adduser` }}>\r\n            <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n              ADD USER\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"container mb-10 text-left\">\r\n          <div className=\"w-75 mb-10  justify-content-left ui icon input\">\r\n            {/* <SearchPage /> */}\r\n            <input\r\n              // ref={inputEl}\r\n              type=\"search \"\r\n              placeholder=\"Search Users\"\r\n              className=\"mb-7 form-control  \"\r\n              // v\r\n              name=\"searchTerm\"\r\n              onChange={onValueChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\" container \">\r\n          <table className=\"table mt-5 table-striped justify-content-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Age</th>\r\n                <th>Email</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-left\">\r\n              {userData.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.age}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/updateuser/${user._id}`,\r\n                      }}\r\n                    >\r\n                      <button\r\n                        onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n                        className=\"btn btn-success btn-sm m-1  \"\r\n                        // component={Link}\r\n                        // to={`/updateuser/${user._id}`}\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </Link>\r\n                    <button\r\n                      onClick={() => {\r\n                        deleteUserData(user._id, user.name);\r\n                      }}\r\n                      className=\"btn btn-danger btn-sm m-1 \"\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state===>\", state);\r\n  return {\r\n    userData: state.users,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  console.log();\r\n  return {\r\n    fetchUsers: () => dispatch(fetchUsers()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n// connect(mapStateToProps, { fetchUsers }\r\n// connect(mapStateToProps, { fetchUsers })\r\n// import React, { Component, useEffect, useState, useRef } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\r\n// import UserContainerForm from \"./UserContainerForm\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Link,\r\n//   useHistory,\r\n//   Redirect,\r\n// } from \"react-router-dom\";\r\n// import UsePagination from \"./usePagination\";\r\n// import { usePagination } from \"@material-ui/lab\";\r\n// import ReactPaginate from \"react-paginate\";\r\n// function UserContainer({ userData, fetchUsers }, props) {\r\n//   const [users, setUsers] = useState([]);\r\n//   // const [user, setUser] = useState([]);\r\n//   const inputEl = useRef(\"\");\r\n//   const [postsPerPage] = useState(4);\r\n//   const [offset, setOffset] = useState(0);\r\n//   const [posts, setAllPosts] = useState([]);\r\n//   const [pageCount, setPageCount] = useState(0);\r\n//   // const { name, age, email } = user;\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//     setAllPosts(userData);\r\n//     console.log(\"users======> in useeffect \", posts, userData);\r\n//   }, []);\r\n//   // useEffect(() => {\r\n//   //   getAllPosts();\r\n//   // }, [offset]);\r\n//   const history = useHistory();\r\n//   const deleteUserData = async (id, name) => {\r\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n//       await deleteUsers(id);\r\n//     } else {\r\n//       history.push(\"/home\");\r\n//     }\r\n\r\n//     // await deleteUsers(id);\r\n//     fetchUsers();\r\n//   };\r\n\r\n//   const addUser = async () => {\r\n//     history.push(\"/adduser\");\r\n//     // <UserContainerForm />;\r\n//   };\r\n\r\n//   const filterContent = (users, searchTerm) => {\r\n//     const result = users.filter((user) =>\r\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     console.log(\"result\", result);\r\n//     setUsers(result);\r\n//   };\r\n//   const onValueChange = (e) => {\r\n//     const searchTerm = e.currentTarget.value;\r\n//     fetchUsers();\r\n//     if (userData) {\r\n//       console.log(\"users for search\", userData);\r\n//       filterContent(userData, searchTerm);\r\n//     }\r\n//   };\r\n//   const getPostData = (data) => {\r\n//     return (\r\n//       <div>\r\n//         <Router>\r\n//           <div className=\"container text-right\">\r\n//             <Link to={{ pathname: `/adduser` }}>\r\n//               <button\r\n//                 onClick={addUser}\r\n//                 className=\"btn btn-primary btn-md m-1  \"\r\n//               >\r\n//                 ADD USER\r\n//               </button>\r\n//             </Link>\r\n//           </div>\r\n//           <div className=\"container mb-10 text-left\">\r\n//             <div className=\"w-75 mb-10  justify-content-left ui icon input\">\r\n//               {/* <SearchPage /> */}\r\n//               <input\r\n//                 // ref={inputEl}\r\n//                 type=\"search \"\r\n//                 placeholder=\"Search Users\"\r\n//                 className=\"mb-7 form-control  \"\r\n//                 // v\r\n//                 name=\"searchTerm\"\r\n//                 onChange={onValueChange}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\" container \">\r\n//             <table className=\"table mt-5 table-striped justify-content-center\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Age</th>\r\n//                   <th>Email</th>\r\n//                   <th>Action</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"text-left\">\r\n//                 {data.map((user) => (\r\n//                   <tr key={user._id}>\r\n//                     <td>{user.name}</td>\r\n//                     <td>{user.age}</td>\r\n//                     <td>{user.email}</td>\r\n//                     <td>\r\n//                       <Link\r\n//                         to={{\r\n//                           pathname: `/updateuser/${user._id}`,\r\n//                         }}\r\n//                       >\r\n//                         <button\r\n//                           onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                           className=\"btn btn-success btn-sm m-1  \"\r\n//                           // component={Link}\r\n//                           // to={`/updateuser/${user._id}`}\r\n//                         >\r\n//                           UPDATE\r\n//                         </button>\r\n//                       </Link>\r\n\r\n//                       <button\r\n//                         onClick={() => {\r\n//                           deleteUserData(user._id, user.name);\r\n//                         }}\r\n//                         className=\"btn btn-danger btn-sm m-1 \"\r\n//                       >\r\n//                         DELETE\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </Router>\r\n//       </div>\r\n//     );\r\n//   };\r\n//   const getAllPosts = async () => {\r\n//     fetchUsers();\r\n//     const data = userData;\r\n//     // setUsers(userData);\r\n//     console.log(\"dtaa in get all post\", data);\r\n//     const slice = users.slice(offset, offset + postsPerPage);\r\n//     console.log(\r\n//       \"🚀 ~ file: userContainer.js ~ line 73 ~ getAllPosts ~ slice \",\r\n//       slice\r\n//     );\r\n\r\n//     // For displaying Data\r\n//     const postData = getPostData(slice);\r\n//     console.log(\r\n//       \"🚀 ~ file: userContainer.js ~ line 151 ~ getAllPosts ~ postData\",\r\n//       postData\r\n//     );\r\n//     // console.log(\r\n//     //   \"🚀 ~ file: userContainer.js ~ line 152 ~ data.length\",\r\n//     //   data.length\r\n//     // );\r\n\r\n//     // Using Hooks to set value\r\n//     setAllPosts(postData);\r\n//     // setUsers(slice);\r\n//     setPageCount(Math.ceil(data.length / postsPerPage));\r\n//   };\r\n//   const handlePageClick = (event) => {\r\n//     const selectedPage = event.selected;\r\n//     console.log(\r\n//       \"file: userContainer.js ~ line 166 ~ handlePageClick ~ selectedPage \",\r\n//       selectedPage\r\n//     );\r\n//     setOffset(selectedPage + 1);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Router>\r\n//         <h2>Users List</h2>\r\n//         <div className=\"container text-right\">\r\n//           {posts}\r\n\r\n//           {/* Using React Paginate */}\r\n//           <ReactPaginate\r\n//             previousLabel={\"previous\"}\r\n//             nextLabel={\" next\"}\r\n//             breakLabel={\"...\"}\r\n//             breakClassName={\"break-me\"}\r\n//             pageCount={pageCount}\r\n//             onPageChange={handlePageClick}\r\n//             containerClassName={\"pagination\"}\r\n//             subContainerClassName={\"pages pagination\"}\r\n//             activeClassName={\"active\"}\r\n//           />\r\n//           <Link to={{ pathname: `/adduser` }}>\r\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n//               ADD USER\r\n//             </button>\r\n//           </Link>\r\n//         </div>\r\n//         <div className=\"container mb-10 text-left\">\r\n//           <div className=\"w-75 mb-10  justify-content-left ui icon input\">\r\n//             {/* <SearchPage /> */}\r\n//             <input\r\n//               // ref={inputEl}\r\n//               type=\"search \"\r\n//               placeholder=\"Search Users\"\r\n//               className=\"mb-7 form-control  \"\r\n//               // v\r\n//               name=\"searchTerm\"\r\n//               onChange={onValueChange}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\" container \">\r\n//           <table className=\"table mt-5 table-striped justify-content-center\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Name</th>\r\n//                 <th>Age</th>\r\n//                 <th>Email</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"text-left\">\r\n//               {users.map((user) => (\r\n//                 <tr key={user._id}>\r\n//                   <td>{user.name}</td>\r\n//                   <td>{user.age}</td>\r\n//                   <td>{user.email}</td>\r\n//                   <td>\r\n//                     <Link\r\n//                       to={{\r\n//                         pathname: `/updateuser/${user._id}`,\r\n//                       }}\r\n//                     >\r\n//                       <button\r\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                         className=\"btn btn-success btn-sm m-1  \"\r\n//                         // component={Link}\r\n//                         // to={`/updateuser/${user._id}`}\r\n//                       >\r\n//                         UPDATE\r\n//                       </button>\r\n//                     </Link>\r\n\r\n//                     <button\r\n//                       onClick={() => {\r\n//                         deleteUserData(user._id, user.name);\r\n//                       }}\r\n//                       className=\"btn btn-danger btn-sm m-1 \"\r\n//                     >\r\n//                       DELETE\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state\", state.users);\r\n//   return {\r\n//     userData: state.users,\r\n//   };\r\n// };\r\n// // const mapDispatchToProps = (dispatch) => {\r\n// //   console.log();\r\n// //   return {\r\n// //     fetchUsers: () => dispatch(fetchUsers()),\r\n// //     updateUsers:()=>dispatch(updateUsers())\r\n// //   };\r\n// // };\r\n// export default connect(mapStateToProps, { fetchUsers, updateUsers })(\r\n//   UserContainer\r\n// );\r\n// // connect(mapStateToProps, { fetchUsers })\r\n"]},"metadata":{},"sourceType":"module"}