{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainerUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser, updateUsers } from \"../redux\"; // import React from 'react'\n\nimport { useLocation, useParams, Redirect } from \"react-router-dom\"; // const location = useLocation();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  age: \"\",\n  id: \"\"\n};\n\nfunction UserContainerUpdate({\n  userData,\n  fetchUser\n}, props) {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const {\n    name,\n    age\n  } = user;\n  const {\n    id\n  } = useParams();\n  console.log(\"params DAta\", useParams(), userData, userData.name, userData.age);\n  useEffect(() => {\n    fetchUser(id);\n  }, []);\n  console.log(\"params DAta\", useParams(), userData.name, userData.age);\n\n  const onValueChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitData = e => {\n    updateUsers(id, user);\n    console.log(\"inside update state\", id, user);\n  };\n\n  console.log(\"out side update state\", id, name, age);\n  console.log(\"user======>\", user.name, user.age);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: userData.map(getuser => {\n      console.log(\"map user ==========>\", getuser);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmitData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              className: \"form-control\",\n              defaultValue: getuser.name // value={user.name}\n              ,\n              onChange: onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"age\",\n              className: \"form-control\",\n              defaultValue: getuser.age // value={user.age}\n              ,\n              onChange: onValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\" // onClick={() => setModalIsOpen(false)}\n            ,\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, getuser._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n} // export default UserContainerUpdate\n// class UserContainerUpdate extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: \"\",\n//       age: \"\",\n//     };\n//   }\n//   // getUser = (name, age) => {\n//   //   this.setState({\n//   //     name: name,\n//   //     age: age,\n//   //   });\n//   // };\n//   fetchUser()\n//   changeHandler = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n//   submitHandler = (e) => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     this.props.updateUsers(this.state);\n//   };\n//   render() {\n//     const { name, age } = this.props;\n//     const { id } = useParams();\n//     console.log(\"user id\", id);\n//     console.log(\"name\" + this.props.name + \"age\" + this.props);\n//     return (\n//       <div className=\"container \">\n//         {userData.map((user) => {\n//           console.log(\"map user ==========>\", user);\n//           return (\n//             <p key={user._id}>\n//               <form onSubmit={this.submitHandler}>\n//                 <div className=\"form-group text-left\">\n//                   <label>Name:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     className=\"form-control\"\n//                     defaultValue={user.name}\n//                     value={name}\n//                     onChange={this.changeHandler}\n//                   />\n//                 </div>\n//                 <div className=\"form-group text-left\">\n//                   <label>Age:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"age\"\n//                     className=\"form-control\"\n//                     defaultValue={user.age}\n//                     value={age}\n//                     onChange={this.changeHandler}\n//                   />\n//                 </div>\n//                 <button\n//                   className=\"btn btn-primary\"\n//                   // onClick={() => setModalIsOpen(false)}\n//                   type=\"submit\"\n//                 >\n//                   Update\n//                 </button>\n//               </form>\n//             </p>\n//           );\n//         })}\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(UserContainerUpdate, \"Yxy1DG9xTFdfvxajKUgcqv/MU+g=\", false, function () {\n  return [useParams, useParams, useParams];\n});\n\n_c = UserContainerUpdate;\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    userData: state.users\n  };\n};\n\nexport default connect(mapStateToProps, // mapDispatchToProps{}\n{\n  updateUsers,\n  fetchUser\n})(UserContainerUpdate);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainerUpdate\");","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainerUpdate.js"],"names":["React","Component","useState","useEffect","connect","fetchUser","updateUsers","useLocation","useParams","Redirect","initialState","name","age","id","UserContainerUpdate","userData","props","user","setUser","console","log","onValueChange","e","target","value","onSubmitData","map","getuser","_id","mapStateToProps","state","users"],"mappings":"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AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAhJSd,mB;UAGQN,S,EAGbA,S,EASyBA,S;;;KAfpBM,mB;;AAiJT,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjCX,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,KAArB;AACA,SAAO;AACLf,IAAAA,QAAQ,EAAEe,KAAK,CAACC;AADX,GAAP;AAGD,CALD;;AAMA,eAAe3B,OAAO,CACpByB,eADoB,EAEpB;AACA;AAAEvB,EAAAA,WAAF;AAAeD,EAAAA;AAAf,CAHoB,CAAP,CAIbS,mBAJa,CAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser, updateUsers } from \"../redux\";\r\n// import React from 'react'\r\nimport { useLocation, useParams, Redirect } from \"react-router-dom\";\r\n// const location = useLocation();\r\nconst initialState = {\r\n  name: \"\",\r\n  age: \"\",\r\n  id: \"\",\r\n};\r\nfunction UserContainerUpdate({ userData, fetchUser }, props) {\r\n  const [user, setUser] = useState(initialState);\r\n  const { name, age } = user;\r\n  const { id } = useParams();\r\n  console.log(\r\n    \"params DAta\",\r\n    useParams(),\r\n    userData,\r\n    userData.name,\r\n    userData.age\r\n  );\r\n  useEffect(() => {\r\n    fetchUser(id);\r\n  }, []);\r\n\r\n  console.log(\"params DAta\", useParams(), userData.name, userData.age);\r\n  const onValueChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmitData = (e) => {\r\n    updateUsers(id, user);\r\n    console.log(\"inside update state\", id, user);\r\n  };\r\n  console.log(\"out side update state\", id, name, age);\r\n\r\n  console.log(\"user======>\", user.name, user.age);\r\n  return (\r\n    <div className=\"container \">\r\n      {userData.map((getuser) => {\r\n        console.log(\"map user ==========>\", getuser);\r\n        return (\r\n          <p key={getuser._id}>\r\n            <form onSubmit={onSubmitData}>\r\n              <div className=\"form-group text-left\">\r\n                <label>Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  defaultValue={getuser.name}\r\n                  // value={user.name}\r\n                  onChange={onValueChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-left\">\r\n                <label>Age:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  className=\"form-control\"\r\n                  defaultValue={getuser.age}\r\n                  // value={user.age}\r\n                  onChange={onValueChange}\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                // onClick={() => setModalIsOpen(false)}\r\n                type=\"submit\"\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n// export default UserContainerUpdate\r\n// class UserContainerUpdate extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       name: \"\",\r\n//       age: \"\",\r\n//     };\r\n//   }\r\n\r\n//   // getUser = (name, age) => {\r\n//   //   this.setState({\r\n//   //     name: name,\r\n//   //     age: age,\r\n//   //   });\r\n//   // };\r\n//   fetchUser()\r\n//   changeHandler = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     console.log(this.state);\r\n//     this.props.updateUsers(this.state);\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, age } = this.props;\r\n//     const { id } = useParams();\r\n//     console.log(\"user id\", id);\r\n//     console.log(\"name\" + this.props.name + \"age\" + this.props);\r\n//     return (\r\n//       <div className=\"container \">\r\n//         {userData.map((user) => {\r\n//           console.log(\"map user ==========>\", user);\r\n//           return (\r\n//             <p key={user._id}>\r\n//               <form onSubmit={this.submitHandler}>\r\n//                 <div className=\"form-group text-left\">\r\n//                   <label>Name:</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"name\"\r\n//                     className=\"form-control\"\r\n//                     defaultValue={user.name}\r\n//                     value={name}\r\n//                     onChange={this.changeHandler}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group text-left\">\r\n//                   <label>Age:</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"age\"\r\n//                     className=\"form-control\"\r\n//                     defaultValue={user.age}\r\n//                     value={age}\r\n//                     onChange={this.changeHandler}\r\n//                   />\r\n//                 </div>\r\n//                 <button\r\n//                   className=\"btn btn-primary\"\r\n//                   // onClick={() => setModalIsOpen(false)}\r\n//                   type=\"submit\"\r\n//                 >\r\n//                   Update\r\n//                 </button>\r\n//               </form>\r\n//             </p>\r\n//           );\r\n//         })}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    userData: state.users,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps{}\r\n  { updateUsers, fetchUser }\r\n)(UserContainerUpdate);\r\n"]},"metadata":{},"sourceType":"module"}