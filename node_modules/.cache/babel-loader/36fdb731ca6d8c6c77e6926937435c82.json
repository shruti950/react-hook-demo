{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination({\n  data,\n  RenderComponent,\n  title,\n  pageLimit,\n  dataLimit\n}) {\n  _s();\n\n  const [pages] = useState(Math.round(data.length / dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function goToNextPage() {\n    setCurrentPage(page => page + 1);\n  }\n\n  function goToPreviousPage() {\n    setCurrentPage(page => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return users.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataContainer\",\n      children: getPaginatedData().map((d, idx) => /*#__PURE__*/_jsxDEV(RenderComponent, {\n        data: d\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        className: `prev ${currentPage === 1 ? \"disabled\" : \"\"}`,\n        children: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), getPaginationGroup().map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePage,\n        className: `paginationItem ${currentPage === item ? \"active\" : null}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        className: `next ${currentPage === pages ? \"disabled\" : \"\"}`,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"TAuAHIRT/chsJ5y/NrRj9/numrE=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/Pagination.js"],"names":["React","Component","useState","Pagination","data","RenderComponent","title","pageLimit","dataLimit","pages","Math","round","length","currentPage","setCurrentPage","goToNextPage","page","goToPreviousPage","changePage","event","pageNumber","Number","target","textContent","getPaginatedData","startIndex","endIndex","users","slice","getPaginationGroup","start","floor","Array","fill","map","_","idx","d","item","index"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\n\r\nfunction Pagination({ data, RenderComponent, title, pageLimit, dataLimit }) {\r\n  const [pages] = useState(Math.round(data.length / dataLimit));\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  function goToNextPage() {\r\n    setCurrentPage((page) => page + 1);\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n    setCurrentPage((page) => page - 1);\r\n  }\r\n\r\n  function changePage(event) {\r\n    const pageNumber = Number(event.target.textContent);\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  const getPaginatedData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return users.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getPaginationGroup = () => {\r\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n\r\n      {/* show the posts, 10 posts at a time */}\r\n      <div className=\"dataContainer\">\r\n        {getPaginatedData().map((d, idx) => (\r\n          <RenderComponent key={idx} data={d} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* show the pagiantion\r\n              it consists of next and previous buttons\r\n              along with page numbers, in our case, 5 page\r\n              numbers at a time\r\n          */}\r\n      <div className=\"pagination\">\r\n        {/* previous button */}\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className={`prev ${currentPage === 1 ? \"disabled\" : \"\"}`}\r\n        >\r\n          prev\r\n        </button>\r\n\r\n        {/* show page numbers */}\r\n        {getPaginationGroup().map((item, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={changePage}\r\n            className={`paginationItem ${\r\n              currentPage === item ? \"active\" : null\r\n            }`}\r\n          >\r\n            <span>{item}</span>\r\n          </button>\r\n        ))}\r\n\r\n        {/* next button */}\r\n        <button\r\n          onClick={goToNextPage}\r\n          className={`next ${currentPage === pages ? \"disabled\" : \"\"}`}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}