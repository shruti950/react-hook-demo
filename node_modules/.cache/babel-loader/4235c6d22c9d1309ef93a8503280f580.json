{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo-hook\\\\src\\\\components\\\\UserContainerHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUsers, fetchSearchedUser, fetchAllUsers, fetchUsers, updateUsers } from \"../redux\"; // import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// import childComponent from \"./UserContainerUpdate\";\n// import SearchField from \"react-search-field\";\n// // import SearchBar from \"./SearchBar\";\n// // import SearchPage from \"./searchPage\";\n// import axios from \"axios\";\n\nimport { BrowserRouter as Router, Link, Redirect, useHistory } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserContainerHook = ({\n  fetchAllUsers,\n  userData,\n  loadingData,\n  totalPage,\n  fetchSearchedUser\n}, props) => {\n  _s();\n\n  const [users, setUsers] = useState(userData);\n  const [offset, setOffset] = useState(1);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0); // const [user, setUser] = useState([]);\n\n  const inputEl = useRef(\"\"); // const { name, age, email } = user;\n\n  const history = useHistory();\n  useEffect(() => {\n    loadPage();\n  }, []);\n\n  const loadPage = () => {\n    const params = new URLSearchParams(window.location.search);\n    const pagep = parseInt(params.get(\"page\")) || 1;\n    fetchAllUsers(offset, perPage);\n    console.log(\"%c ðŸ‡²ðŸ‡ª: loadPage -> offset \", \"font-size:16px;background-color:#f007ae;color:white;\", offset);\n    setUsers(userData);\n    setPageCount(totalPage);\n    console.log(\"%c ðŸ’°: loadPage -> totalPage \", \"font-size:16px;background-color:#c4523b;color:white;\", totalPage);\n  };\n\n  const searchPage = (searchTerm, selectedPage) => {\n    fetchSearchedUser(searchTerm, selectedPage);\n    setUsers(userData);\n    setPageCount(totalPage);\n  };\n\n  const deleteUserData = async (id, name) => {\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n      await deleteUsers(id);\n    } else {\n      history.push(\"/home\");\n    }\n\n    fetchAllUsers(offset, perPage);\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n\n    if (searchTerm === \"\") {\n      fetchAllUsers(selectedPage, perPage);\n      setOffset(selectedPage + 1);\n      loadPage();\n      console.log(\"%c ðŸ‡²ðŸ‡ª: handlepageclick -> offset \", \"font-size:16px;background-color:#f008ae;color:white;\", offset);\n    } else {\n      fetchSearchedUser(searchTerm, selectedPage);\n      setOffset(selectedPage + 1, () => {\n        searchPage(searchTerm, offset);\n      });\n    }\n  };\n\n  const addUser = async () => {\n    history.push(\"/adduser\"); // <UserContainerHookForm />;\n  };\n\n  const editUserData = async id => {\n    history.push(`/updateuser/${id}`); // this.refreshPage();\n  };\n\n  const onValueChange = e => {\n    const searchTerm = e.currentTarget.value;\n    setSearchTerm(searchTerm);\n\n    if (searchTerm === \"\") {\n      // this.refreshPage();\n      loadPage(); // this.getData();\n    } else {\n      searchPage(searchTerm, offset);\n    } // });\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-right\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/adduser`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addUser,\n            className: \"btn btn-primary btn-md m-1  \",\n            children: \"ADD USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-mb-10 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 mt-mb-10  justify-content-left ui icon input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            // ref={inputEl}\n            type: \"search \",\n            placeholder: \"Search Users\",\n            className: \"mt-mb-7 form-control  \" // v\n            ,\n            name: \"searchTerm\",\n            onChange: onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" container \",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table mt-5 table-striped justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"text-left\",\n            children: userData.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `/updateuser/${user._id}`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => editUserData(user._id),\n                    className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                    // to={`/updateuser/${user._id}`}\n                    ,\n                    children: \"UPDATE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    deleteUserData(user._id, user.name);\n                  },\n                  className: \"btn btn-danger btn-sm m-1 \",\n                  children: \"DELETE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"prev\",\n          nextLabel: \"next\",\n          breakLabel: \"...\",\n          breakClassName: \"break-me\",\n          pageCount: pageCount,\n          marginPagesDisplayed: 2,\n          pageRangeDisplayed: 5,\n          onPageChange: handlePageClick,\n          containerClassName: \"pagination\",\n          subContainerClassName: \"pages pagination\",\n          activeClassName: \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserContainerHook, \"rfY20bqM9LvLTCM94caAlEAnGt4=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserContainerHook;\n\nconst mapStateToProps = state => {\n  console.log(\"state===>\", state.users, state.loading);\n  const {\n    users,\n    loading,\n    page\n  } = state; // localStorage.setItem(\"useData\", JSON.stringify(users));\n\n  return {\n    userData: users,\n    loadingData: loading,\n    totalPage: page\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllUsers: (offset, perPage) => dispatch(fetchAllUsers(offset, perPage)),\n    fetchSearchedUser: (searchTerm, offset) => dispatch(fetchSearchedUser(searchTerm, offset))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainerHook);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainerHook\");","map":{"version":3,"sources":["C:/Users/apex/project-demo-hook/src/components/UserContainerHook.js"],"names":["React","Component","useEffect","useState","useRef","connect","deleteUsers","fetchSearchedUser","fetchAllUsers","fetchUsers","updateUsers","BrowserRouter","Router","Link","Redirect","useHistory","ReactPaginate","UserContainerHook","userData","loadingData","totalPage","props","users","setUsers","offset","setOffset","searchTerm","setSearchTerm","perPage","pageCount","setPageCount","inputEl","history","loadPage","params","URLSearchParams","window","location","search","pagep","parseInt","get","console","log","searchPage","selectedPage","deleteUserData","id","name","confirm","push","handlePageClick","e","selected","addUser","editUserData","onValueChange","currentTarget","value","pathname","map","user","age","email","_id","mapStateToProps","state","loading","page","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteUsers,\r\n  fetchSearchedUser,\r\n  fetchAllUsers,\r\n  fetchUsers,\r\n  updateUsers,\r\n} from \"../redux\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// import childComponent from \"./UserContainerUpdate\";\r\n// import SearchField from \"react-search-field\";\r\n// // import SearchBar from \"./SearchBar\";\r\n// // import SearchPage from \"./searchPage\";\r\n// import axios from \"axios\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nconst UserContainerHook = (\r\n  { fetchAllUsers, userData, loadingData, totalPage, fetchSearchedUser },\r\n  props\r\n) => {\r\n  const [users, setUsers] = useState(userData);\r\n  const [offset, setOffset] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [perPage] = useState(5);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // const [user, setUser] = useState([]);\r\n  const inputEl = useRef(\"\");\r\n  // const { name, age, email } = user;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    loadPage();\r\n  }, []);\r\n  const loadPage = () => {\r\n    const params = new URLSearchParams(window.location.search);\r\n\r\n    const pagep = parseInt(params.get(\"page\")) || 1;\r\n\r\n    fetchAllUsers(offset, perPage);\r\n    console.log(\r\n      \"%c ðŸ‡²ðŸ‡ª: loadPage -> offset \",\r\n      \"font-size:16px;background-color:#f007ae;color:white;\",\r\n      offset\r\n    );\r\n    setUsers(userData);\r\n    setPageCount(totalPage);\r\n    console.log(\r\n      \"%c ðŸ’°: loadPage -> totalPage \",\r\n      \"font-size:16px;background-color:#c4523b;color:white;\",\r\n      totalPage\r\n    );\r\n  };\r\n  const searchPage = (searchTerm, selectedPage) => {\r\n    fetchSearchedUser(searchTerm, selectedPage);\r\n\r\n    setUsers(userData);\r\n    setPageCount(totalPage);\r\n  };\r\n\r\n  const deleteUserData = async (id, name) => {\r\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n      await deleteUsers(id);\r\n    } else {\r\n      history.push(\"/home\");\r\n    }\r\n    fetchAllUsers(offset, perPage);\r\n  };\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n\r\n    if (searchTerm === \"\") {\r\n      fetchAllUsers(selectedPage, perPage);\r\n      setOffset(selectedPage + 1);\r\n      loadPage();\r\n\r\n      console.log(\r\n        \"%c ðŸ‡²ðŸ‡ª: handlepageclick -> offset \",\r\n        \"font-size:16px;background-color:#f008ae;color:white;\",\r\n        offset\r\n      );\r\n    } else {\r\n      fetchSearchedUser(searchTerm, selectedPage);\r\n      setOffset(selectedPage + 1, () => {\r\n        searchPage(searchTerm, offset);\r\n      });\r\n    }\r\n  };\r\n  const addUser = async () => {\r\n    history.push(\"/adduser\");\r\n    // <UserContainerHookForm />;\r\n  };\r\n  const editUserData = async (id) => {\r\n    history.push(`/updateuser/${id}`);\r\n    // this.refreshPage();\r\n  };\r\n  const onValueChange = (e) => {\r\n    const searchTerm = e.currentTarget.value;\r\n    setSearchTerm(searchTerm);\r\n    if (searchTerm === \"\") {\r\n      // this.refreshPage();\r\n      loadPage();\r\n      // this.getData();\r\n    } else {\r\n      searchPage(searchTerm, offset);\r\n    }\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <h2>Users List</h2>\r\n        <div className=\"container text-right\">\r\n          <Link to={{ pathname: `/adduser` }}>\r\n            <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n              ADD USER\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"container mt-mb-10 text-left\">\r\n          <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n            {/* <SearchPage /> */}\r\n            <input\r\n              // ref={inputEl}\r\n              type=\"search \"\r\n              placeholder=\"Search Users\"\r\n              className=\"mt-mb-7 form-control  \"\r\n              // v\r\n              name=\"searchTerm\"\r\n              onChange={onValueChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\" container \">\r\n          <table className=\"table mt-5 table-striped justify-content-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Age</th>\r\n                <th>Email</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-left\">\r\n              {userData.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.age}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/updateuser/${user._id}`,\r\n                      }}\r\n                    >\r\n                      <button\r\n                        onClick={() => editUserData(user._id)}\r\n                        className=\"btn btn-success btn-sm m-1  \"\r\n                        // component={Link}\r\n                        // to={`/updateuser/${user._id}`}\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </Link>\r\n                    <button\r\n                      onClick={() => {\r\n                        deleteUserData(user._id, user.name);\r\n                      }}\r\n                      className=\"btn btn-danger btn-sm m-1 \"\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state===>\", state.users, state.loading);\r\n  const { users, loading, page } = state;\r\n  // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n  return {\r\n    userData: users,\r\n    loadingData: loading,\r\n    totalPage: page,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllUsers: (offset, perPage) =>\r\n      dispatch(fetchAllUsers(offset, perPage)),\r\n    fetchSearchedUser: (searchTerm, offset) =>\r\n      dispatch(fetchSearchedUser(searchTerm, offset)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainerHook);\r\n"]},"metadata":{},"sourceType":"module"}