{"ast":null,"code":"// // import React, { Component } from \"react\";\n// // import { connect } from \"react-redux\";\n// // import { deleteUsers, fetchUsers } from \"../redux\";\n// // // import UserContainerForm from \"./UserContainerForm\";\n// // // import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// // // import childComponent from \"./UserContainerUpdate\";\n// // // import UserContainerUpdate from \"./UserContainerUpdate\";\n// // // import SearchField from \"react-search-field\";\n// // // // import SearchBar from \"./SearchBar\";\n// // // // import SearchPage from \"./searchPage\";\n// // // import axios from \"axios\";\n// // import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\n// // import ReactPaginate from \"react-paginate\";\n// // class UserContainer extends Component {\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {\n// //       users: [],\n// //       offset: 0,\n// //       data: [],\n// //       perPage: 5,\n// //       pageCount: 0,\n// //     };\n// //   }\n// //   componentDidMount() {\n// //     const { loadingData } = this.props;\n// //     fetchUsers();\n// //     this.setState({ users: this.props.userData });\n// //     console.log(\n// //       \"users in component did mount\",\n// //       this.state.users,\n// //       this.state.offset\n// //     );\n// //     this.setState({ offset: 1 });\n// //     console.log(\"offset\", this.state.offset);\n// //     // if (loadingData === false) {\n// //     this.getData();\n// //     // }dele\n// //   }\n// //   componentWillMount() {\n// //     // this.refreshPage();\n// //     console.log(\"fetchData\", this.props.userData);\n// //     const { loadingData } = this.props;\n// //     // if (loadingData === false) {\n// //     fetchUsers();\n// //     this.setState({ users: this.props.userData });\n// //     console.log(\"users in component will mount\", this.state.users);\n// //     this.getData();\n// //     // }\n// //   }\n// //   // componentWillReceiveProps(nextProps) {\n// //   //   if (nextProps !== this.props) {\n// //   //     this.setState({\n// //   //       users: nextProps.userData,\n// //   //     });\n// //   //     console.log(\n// //   //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\n// //   //       this.state.users\n// //   //     );\n// //   //     // this.setState({ offset: 1 });\n// //   //     this.getData();\n// //   //   }\n// //   // }\n// //   // static getDerivedStateFromProps(props, state) {\n// //   //   console.log(\"props 12212\", props.userData);\n// //   //   console.log(\"state 12212\", state);\n// //   //   if (props.userData) {\n// //   //     // return { users: props?.userData };\n// //   //   }\n// //   //   // this.setState({ offset: 1 });\n// //   //   // this.getData();\n// //   //   // return {favoritecolor: props.favcol };\n// //   // }\n// //   handlePageClick = (e) => {\n// //     const selectedPage = e.selected;\n// //     this.setState({ offset: selectedPage + 1 }, () => {\n// //       this.getData();\n// //     });\n// //     // setOffset(selectedPage + 1);\n// //   };\n// //   addUser = async () => {\n// //     this.props.history.push(\"/adduser\");\n// //     // this.refreshPage();\n// //     // const ddd = fetchUsers();\n// //     // this.getData();\n// //     // <UserContainerForm />;\n// //   };\n// //   deleteUserData = async (id, name) => {\n// //     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n// //       await deleteUsers(id);\n// //       this.props.history.push(\"/home\");\n// //     } else {\n// //       this.props.history.push(\"/home\");\n// //     }\n// //     this.getData();\n// //     this.refreshPage();\n// //     return;\n// //     this.props.fetchUsers();\n// //     // console.log(\"ddd 222\", dd);\n// //     // console.log(\"userData 222\", this.props.userData);\n// //     // this.setState({ offset: 1 }, () => {\n// //     //   this.getData();\n// //     // });\n// //     // window.location.reload();\n// //     // this.refreshPage();\n// //   };\n// //   editUserData = async (id) => {\n// //     console.log(\"id vaman\", id);\n// //     this.props.history.push(`/updateuser/${id}`);\n// //     // this.props.fetchUsers();\n// //     // this.refreshPage();\n// //   };\n// //   refreshPage = () => {\n// //     window.location.reload(false);\n// //   };\n// //   getData = async () => {\n// //     const { loadingData } = this.props;\n// //     // if (loadingData === false) {\n// //     const data = this.props.userData || [];\n// //     const indexOfLastTodo = this.state.offset * this.state.perPage;\n// //     const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\n// //     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n// //     this.setState({ users: slice });\n// //     this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\n// //   };\n// //   filterContent = (searchUser, searchTerm) => {\n// //     console.log(\n// //       \"ðŸš€ ~ file: userContainer.js ~ line 128 ~ UserContainer ~ getData= ~ searchTerm\",\n// //       searchTerm,\n// //       searchUser\n// //     );\n// //     if (searchTerm === \"\") {\n// //       this.getData();\n// //     } else {\n// //       const result = searchUser.filter((user) =>\n// //         user.name.toLowerCase().includes(searchTerm.toLowerCase())\n// //       );\n// //       console.log(\n// //         \"ðŸš€ ~ file: userContainer.js ~ line 134 ~ UserContainer ~ getData= ~ result\",\n// //         result\n// //       );\n// //       this.setState({ users: result });\n// //       console.log(\n// //         \"ðŸš€ ~ file: userContainer.js ~ line 157 ~ UserContainer ~ getData= ~ users\",\n// //         this.state.users\n// //       );\n// //       this.getData();\n// //     }\n// //   };\n// //   onValueChange = (e) => {\n// //     console.log(e.currentTarget.value);\n// //     const searchTerm = e.currentTarget.value;\n// //     this.props.fetchUsers();\n// //     // axios.get(\"http://localhost:9000/\").then((response) => {\n// //     console.log(\n// //       \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\n// //       this.state.offset\n// //     );\n// //     if (this.props.userData) {\n// //       console.log(\"users for search\", this.props.userData);\n// //       this.filterContent(this.props.userData, searchTerm);\n// //     }\n// //     // });\n// //   };\n// //   render() {\n// //     return (\n// //       <div className=\"container App\">\n// //         <Router>\n// //           <h2>Users List</h2>\n// //           <div className=\"container text-right\">\n// //             <Link to={{ pathname: `/adduser` }}>\n// //               <button\n// //                 onClick={this.addUser}\n// //                 className=\"btn btn-primary btn-md m-1  \"\n// //               >\n// //                 ADD USER\n// //               </button>\n// //             </Link>\n// //           </div>\n// //           <div className=\"container mt-mb-10 text-left\">\n// //             <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\n// //               {/* <SearchPage /> */}\n// //               <span className=\"icon-input-btn\">\n// //                 <i className=\"fa fa-search\"></i>\n// //                 <input\n// //                   // ref={inputEl}\n// //                   type=\"search \"\n// //                   placeholder=\"Search Users\"\n// //                   className=\"mt-mb-7 form-control  \"\n// //                   // v\n// //                   name=\"searchTerm\"\n// //                   onChange={this.onValueChange}\n// //                 />\n// //               </span>\n// //             </div>\n// //           </div>\n// //           <div className=\" container  \">\n// //             <table className=\"table mt-5 table-striped justify-content-center\">\n// //               <thead>\n// //                 <tr>\n// //                   <th>Name</th>\n// //                   <th>Age</th>\n// //                   <th>Email</th>\n// //                   <th>Action</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody className=\"text-left\">\n// //                 {this.state.users.map((user) => (\n// //                   <tr key={user._id}>\n// //                     <td>{user.name}</td>\n// //                     <td>{user.age}</td>\n// //                     <td>{user.email}</td>\n// //                     <td>\n// //                       <Link\n// //                         to={{\n// //                           pathname: `/updateuser/${user._id}`,\n// //                         }}\n// //                       >\n// //                         <button\n// //                           // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n// //                           onClick={() => this.editUserData(user._id)}\n// //                           className=\"btn btn-success btn-sm m-1  \"\n// //                           // component={Link}\n// //                           // to={`/updateuser/${user._id}`}\n// //                         >\n// //                           UPDATE\n// //                         </button>\n// //                       </Link>\n// //                       <button\n// //                         onClick={() => {\n// //                           this.deleteUserData(user._id, user.name);\n// //                         }}\n// //                         className=\"btn btn-danger btn-sm m-1 \"\n// //                       >\n// //                         <i className=\"fa fa-trash\"></i>\n// //                         DELETE\n// //                       </button>\n// //                     </td>\n// //                   </tr>\n// //                 ))}\n// //               </tbody>\n// //             </table>\n// //             <ReactPaginate\n// //               previousLabel={\"prev\"}\n// //               nextLabel={\"next\"}\n// //               breakLabel={\"...\"}\n// //               breakClassName={\"break-me\"}\n// //               pageCount={this.state.pageCount}\n// //               marginPagesDisplayed={2}\n// //               pageRangeDisplayed={5}\n// //               onPageChange={this.handlePageClick}\n// //               containerClassName={\"pagination\"}\n// //               subContainerClassName={\"pages pagination\"}\n// //               activeClassName={\"active\"}\n// //             />\n// //           </div>\n// //         </Router>\n// //       </div>\n// //     );\n// //   }\n// // }\n// // const mapStateToProps = (state) => {\n// //   console.log(\"state===>\", state.users, state.loading);\n// //   const { users, loading } = state;\n// //   // localStorage.setItem(\"useData\", JSON.stringify(users));\n// //   return {\n// //     userData: users,\n// //     loadingData: loading,\n// //   };\n// // };\n// // // const mapDispatchToProps = (dispatch) => {\n// // //   return {\n// // //     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\n// // //     fetchUsers: () => dispatch(fetchUsers()),\n// // //   };\n// // // };\n// // export default connect(mapStateToProps, { fetchUsers })(UserContainer);\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { deleteUsers, fetchUsers } from \"../redux\";\n// // import UserContainerForm from \"./UserContainerForm\";\n// // import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// // import childComponent from \"./UserContainerUpdate\";\n// // import UserContainerUpdate from \"./UserContainerUpdate\";\n// // import SearchField from \"react-search-field\";\n// // // import SearchBar from \"./SearchBar\";\n// // // import SearchPage from \"./searchPage\";\n// // import axios from \"axios\";\n// import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\n// import ReactPaginate from \"react-paginate\";\n// import axios from \"axios\";\n// class UserContainer extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       users: [],\n//       offset: 0,\n//       data: [],\n//       perPage: 5,\n//       pageCount: 0,\n//       isLoading: true,\n//       searchUser: [],\n//     };\n//   }\n//   async componentDidMount() {\n//     const { loadingData } = this.props;\n//     const page = 1;\n//     const response = fetchUsers(page, this.state.perPage);\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 317 ~ UserContainer ~ componentDidMount ~ response\",\n//       response\n//     );\n//     const res = this.getUsers(page, this.state.perPage);\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 319 ~ UserContainer ~ componentWillMount ~ res\",\n//       res,\n//       res.data\n//     );\n//     console.log(\"userData\", this.props.userData);\n//     this.setState({ users: this.props.userData, offset: 1 });\n//     console.log(\n//       \"users in component did mount\",\n//       this.state.users,\n//       this.state.offset\n//     );\n//     this.setState({ offset: 1 });\n//     console.log(\"offset\", this.state.offset);\n//     // if (loadingData === false) {\n//     this.getData();\n//     // }\n//   }\n//   // static getDerivedStateFromProps(nextProps, prevState) {\n//   //   console.log(\n//   //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ prevState\",\n//   //     prevState\n//   //   );\n//   //   console.log(\n//   //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ nextProps\",\n//   //     nextProps\n//   //   );\n//   //   if (nextProps.userData !== prevState.users) {\n//   //     return { users: nextProps.userData.slice(0, 5) };\n//   //   }\n//   //   // else return { users: nextProps.userData };\n//   //   // console.log(\n//   //   //   \"ðŸš€ ~ file: userContainer.js ~ line 340 ~ UserContainer ~ getDerivedStateFromProps ~ users\",\n//   //   //   users\n//   //   // );\n//   //   this.getData();\n//   // }\n//   componentDidUpdate(prevProps, prevState, snapShot) {\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ snapShot\",\n//       snapShot\n//     );\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ prevState\",\n//       prevState,\n//       this.state\n//     );\n//     console.log(\" this.states @@\", this.state);\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 346 ~ UserContainer ~ componentDidUpdate ~ this.props\",\n//       this.props\n//     );\n//     // vmn\n//     if (prevProps.userData !== this.props.userData) {\n//       //Perform some operation here\n//       console.log(\" this.props.userData @@\", this.props.userData);\n//       this.setState({ users: this.props.userData });\n//       this.getData();\n//     }\n//   }\n//   // componentWillReceiveProps(nextProps) {\n//   //   console.log(\"component will receive props\");\n//   //   if (nextProps.userData !== this.props.userData) {\n//   //     this.setState({ users: nextProps.userData });\n//   //     // } else {\n//   //     //   this.setState({ users: nextProps.userData });\n//   //     // }\n//   //     console.log(\n//   //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\n//   //       this.state.users\n//   //     );\n//   //   }\n//   //   // this.setState({ offset: 1 });\n//   //   this.getData();\n//   // }\n//   async componentWillMount() {\n//     // this.refreshPage();\n//     const { loadingData } = this.props;\n//     // if (loadingData === false) {\n//     console.log(\"props @@\", this.props);\n//     const page = 1;\n//     // const res = axios.get(\n//     //   \"http://localhost:9000/?offset=\" + page + \"&limit=\" + this.state.perPage\n//     // );\n//     // const res = axios.get(\n//     //   `http://localhost:9000/?offset=${page}&limit=${this.state.perPage}`\n//     // );\n//     const res = this.getUsers(page, this.state.perPage);\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 395 ~ UserContainer ~ componentWillMount ~ res\",\n//       res,\n//       res.data\n//     );\n//     const response = fetchUsers(page, this.state.perPage);\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 414 ~ UserContainer ~ componentDidMount ~ response\",\n//       response\n//     );\n//     console.log(\"userData\", this.props.userData);\n//     this.setState({ users: this.props.userData, offset: 1 });\n//     console.log(\"users in component will mount\", this.state.users);\n//     // this.getData();\n//     // }\n//   }\n//   getUsers = async (offset, limit) => {\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 415 ~ UserContainer ~ getUsers= ~ offset\",\n//       offset\n//     );\n//     const usersUrl = \"http://localhost:9000\";\n//     const res = await axios.get(`${usersUrl}/?offset=${offset}&limit=${limit}`);\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 417 ~ UserContainer ~ getUsers= ~ res\",\n//       res,\n//       res.data.totalPages\n//     );\n//     const pageCount = res.data.totalpages;\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 441 ~ UserContainer ~ getUsers= ~  pageCount\",\n//       pageCount\n//     );\n//     this.setState({ users: res.data.docs, pageCount: res.data.totalPages });\n//     console.log(\n//       \"ðŸš€ ~ file: userContainer.js ~ line 428 ~ UserContainer ~ users\",\n//       this.state,\n//       this.props\n//     );\n//     // this.getData();\n//     return res.data;\n//   };\n//   handlePageClick = async (e) => {\n//     const selectedPage = e.selected;\n//     await fetchUsers(selectedPage, this.state.perPage);\n//     console.log(\"users for pagination \", this.props.userData);\n//     this.setState({ offset: selectedPage + 1 }, () => {\n//       this.getUsers(this.state.offset, this.state.perPage);\n//     });\n//     // setOffset(selectedPage + 1);\n//   };\n//   addUser = async () => {\n//     this.props.history.push(\"/adduser\");\n//     // this.refreshPage();\n//     // <UserContainerForm />;\n//   };\n//   deleteUserData = async (id, name) => {\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n//       await deleteUsers(id);\n//     } else {\n//       this.props.history.push(\"/home\");\n//     }\n//     fetchUsers();\n//     // this.refreshPage();\n//   };\n//   editUserData = async (id) => {\n//     console.log(\"id vaman\", id);\n//     this.props.history.push(`/updateuser/${id}`);\n//     // this.refreshPage();\n//   };\n//   refreshPage = () => {\n//     window.location.reload();\n//   };\n//   getData = async () => {\n//     const { loadingData } = this.props;\n//     console.log(\"loading in getDAta\", loadingData);\n//     // if (loadingData === false) {\n//     const data = this.props.userData || [];\n//     console.log(\"set pagination here.....\", data);\n//     const indexOfLastTodo = this.state.offset * this.state.perPage;\n//     const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n//     console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n//     this.setState({ users: slice });\n//     // setUsers(slice);\n//     console.log(\"users in getData\", this.state.users);\n//     this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\n//     // setPageCount(Math.ceil(data.length / perPage));\n//     // }\n//   };\n//   filterContent = (users, searchTerm) => {\n//     console.log(\"searchterm\", searchTerm, users);\n//     if (searchTerm === \"\") {\n//       console.log(\"searchterm empty\");\n//       // this.refreshPage();\n//       this.getData();\n//     } else {\n//       const result = users.filter((user) =>\n//         user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//       );\n//       console.log(\"result @@\", result);\n//       this.setState({ users: result });\n//       // console.log(\n//       //   \"ðŸš€ ~ file: userContainer.js ~ line 428 ~ UserContainer ~ users\",\n//       //   this.state.users,\n//       //   this.props\n//       // );\n//       // this.getData();\n//     }\n//   };\n//   onValueChange = (e) => {\n//     const searchTerm = e.currentTarget.value;\n//     fetchUsers();\n//     console.log(\n//       \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\n//       this.state.offset\n//     );\n//     if (this.props.userData) {\n//       console.log(\"users for search\", this.props.userData);\n//       const u = this.filterContent(this.props.userData, searchTerm);\n//       console.log(\"users ===>for search\", u, this.state.users);\n//     }\n//   };\n//   render() {\n//     console.log(\"this.state.users @@@\", this.state.users);\n//     const { users } = this.state;\n//     return (\n//       <div className=\"container App\">\n//         <Router>\n//           <h2>Users List</h2>\n//           <div className=\"container text-right\">\n//             <Link to={{ pathname: `/adduser` }}>\n//               <button\n//                 onClick={this.addUser}\n//                 className=\"btn btn-primary btn-md m-1  \"\n//               >\n//                 ADD USER\n//               </button>\n//             </Link>\n//           </div>\n//           <div className=\"container mt-mb-10 text-left\">\n//             <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\n//               {/* <SearchPage /> */}\n//               <span className=\"icon-input-btn\">\n//                 <i className=\"fa fa-search\"></i>\n//                 <input\n//                   // ref={inputEl}\n//                   type=\"search \"\n//                   placeholder=\"Search Users\"\n//                   className=\"mt-mb-7 form-control  \"\n//                   // v\n//                   name=\"searchTerm\"\n//                   onChange={this.onValueChange}\n//                 />\n//               </span>\n//             </div>\n//           </div>\n//           <div className=\" container  \">\n//             <table className=\"table mt-5 table-striped justify-content-center\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Age</th>\n//                   <th>Email</th>\n//                   <th>Action</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-left\">\n//                 {users?.length > 0 &&\n//                   users?.map((user) => (\n//                     <tr key={user._id}>\n//                       <td>{user.name}</td>\n//                       <td>{user.age}</td>\n//                       <td>{user.email}</td>\n//                       <td>\n//                         <Link\n//                           to={{\n//                             pathname: `/updateuser/${user._id}`,\n//                           }}\n//                         >\n//                           <button\n//                             // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                             onClick={() => this.editUserData(user._id)}\n//                             className=\"btn btn-success btn-sm m-1  \"\n//                             // component={Link}\n//                             // to={`/updateuser/${user._id}`}\n//                           >\n//                             UPDATE\n//                           </button>\n//                         </Link>\n//                         <button\n//                           onClick={() => {\n//                             this.deleteUserData(user._id, user.name);\n//                           }}\n//                           className=\"btn btn-danger btn-sm m-1 \"\n//                         >\n//                           <i className=\"fa fa-trash\"></i>\n//                           DELETE\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//               </tbody>\n//             </table>\n//             <ReactPaginate\n//               previousLabel={\"prev\"}\n//               nextLabel={\"next\"}\n//               breakLabel={\"...\"}\n//               breakClassName={\"break-me\"}\n//               pageCount={this.state.pageCount}\n//               marginPagesDisplayed={2}\n//               pageRangeDisplayed={5}\n//               onPageChange={this.handlePageClick}\n//               containerClassName={\"pagination\"}\n//               subContainerClassName={\"pages pagination\"}\n//               activeClassName={\"active\"}\n//             />\n//           </div>\n//         </Router>\n//       </div>\n//     );\n//   }\n// }\n// // const mapStateToProps = (state) => {\n// //   console.log(\"state===>\", state.users, state.loading);\n// //   const { users, loading } = state;\n// //   // localStorage.setItem(\"useData\", JSON.stringify(users));\n// //   return {\n// //     userData: users,\n// //     loadingData: loading,\n// //   };\n// // };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\n//     fetchUsers: (page, limit) => dispatch(fetchUsers(page, limit)),\n//   };\n// };\n// export default connect(\n//   (state) => (\n//     console.log(\"state\", state),\n//     { userData: state.users, loadingData: state.loading }\n//   ),\n//   { mapDispatchToProps }\n// )(UserContainer);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainer.js"],"names":[],"mappingssourcesContent":["// // import React, { Component } from \"react\";\r\n// // import { connect } from \"react-redux\";\r\n// // import { deleteUsers, fetchUsers } from \"../redux\";\r\n// // // import UserContainerForm from \"./UserContainerForm\";\r\n// // // import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// // // import childComponent from \"./UserContainerUpdate\";\r\n// // // import UserContainerUpdate from \"./UserContainerUpdate\";\r\n// // // import SearchField from \"react-search-field\";\r\n// // // // import SearchBar from \"./SearchBar\";\r\n// // // // import SearchPage from \"./searchPage\";\r\n// // // import axios from \"axios\";\r\n// // import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\n// // import ReactPaginate from \"react-paginate\";\r\n// // class UserContainer extends Component {\r\n// //   constructor(props) {\r\n// //     super(props);\r\n\r\n// //     this.state = {\r\n// //       users: [],\r\n// //       offset: 0,\r\n// //       data: [],\r\n// //       perPage: 5,\r\n// //       pageCount: 0,\r\n// //     };\r\n// //   }\r\n// //   componentDidMount() {\r\n// //     const { loadingData } = this.props;\r\n\r\n// //     fetchUsers();\r\n\r\n// //     this.setState({ users: this.props.userData });\r\n// //     console.log(\r\n// //       \"users in component did mount\",\r\n// //       this.state.users,\r\n// //       this.state.offset\r\n// //     );\r\n// //     this.setState({ offset: 1 });\r\n// //     console.log(\"offset\", this.state.offset);\r\n// //     // if (loadingData === false) {\r\n// //     this.getData();\r\n// //     // }dele\r\n// //   }\r\n// //   componentWillMount() {\r\n// //     // this.refreshPage();\r\n// //     console.log(\"fetchData\", this.props.userData);\r\n// //     const { loadingData } = this.props;\r\n// //     // if (loadingData === false) {\r\n// //     fetchUsers();\r\n// //     this.setState({ users: this.props.userData });\r\n// //     console.log(\"users in component will mount\", this.state.users);\r\n// //     this.getData();\r\n// //     // }\r\n// //   }\r\n\r\n// //   // componentWillReceiveProps(nextProps) {\r\n// //   //   if (nextProps !== this.props) {\r\n// //   //     this.setState({\r\n// //   //       users: nextProps.userData,\r\n// //   //     });\r\n// //   //     console.log(\r\n// //   //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\r\n// //   //       this.state.users\r\n// //   //     );\r\n// //   //     // this.setState({ offset: 1 });\r\n// //   //     this.getData();\r\n// //   //   }\r\n// //   // }\r\n// //   // static getDerivedStateFromProps(props, state) {\r\n// //   //   console.log(\"props 12212\", props.userData);\r\n// //   //   console.log(\"state 12212\", state);\r\n// //   //   if (props.userData) {\r\n// //   //     // return { users: props?.userData };\r\n// //   //   }\r\n// //   //   // this.setState({ offset: 1 });\r\n// //   //   // this.getData();\r\n// //   //   // return {favoritecolor: props.favcol };\r\n// //   // }\r\n// //   handlePageClick = (e) => {\r\n// //     const selectedPage = e.selected;\r\n// //     this.setState({ offset: selectedPage + 1 }, () => {\r\n// //       this.getData();\r\n// //     });\r\n// //     // setOffset(selectedPage + 1);\r\n// //   };\r\n// //   addUser = async () => {\r\n// //     this.props.history.push(\"/adduser\");\r\n// //     // this.refreshPage();\r\n// //     // const ddd = fetchUsers();\r\n// //     // this.getData();\r\n// //     // <UserContainerForm />;\r\n// //   };\r\n// //   deleteUserData = async (id, name) => {\r\n// //     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n// //       await deleteUsers(id);\r\n// //       this.props.history.push(\"/home\");\r\n// //     } else {\r\n// //       this.props.history.push(\"/home\");\r\n// //     }\r\n\r\n// //     this.getData();\r\n// //     this.refreshPage();\r\n// //     return;\r\n// //     this.props.fetchUsers();\r\n// //     // console.log(\"ddd 222\", dd);\r\n// //     // console.log(\"userData 222\", this.props.userData);\r\n// //     // this.setState({ offset: 1 }, () => {\r\n// //     //   this.getData();\r\n// //     // });\r\n// //     // window.location.reload();\r\n// //     // this.refreshPage();\r\n// //   };\r\n// //   editUserData = async (id) => {\r\n// //     console.log(\"id vaman\", id);\r\n// //     this.props.history.push(`/updateuser/${id}`);\r\n// //     // this.props.fetchUsers();\r\n// //     // this.refreshPage();\r\n// //   };\r\n// //   refreshPage = () => {\r\n// //     window.location.reload(false);\r\n// //   };\r\n// //   getData = async () => {\r\n// //     const { loadingData } = this.props;\r\n// //     // if (loadingData === false) {\r\n// //     const data = this.props.userData || [];\r\n// //     const indexOfLastTodo = this.state.offset * this.state.perPage;\r\n// //     const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\r\n// //     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n// //     this.setState({ users: slice });\r\n// //     this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\r\n// //   };\r\n// //   filterContent = (searchUser, searchTerm) => {\r\n// //     console.log(\r\n// //       \"ðŸš€ ~ file: userContainer.js ~ line 128 ~ UserContainer ~ getData= ~ searchTerm\",\r\n// //       searchTerm,\r\n// //       searchUser\r\n// //     );\r\n// //     if (searchTerm === \"\") {\r\n// //       this.getData();\r\n// //     } else {\r\n// //       const result = searchUser.filter((user) =>\r\n// //         user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n// //       );\r\n// //       console.log(\r\n// //         \"ðŸš€ ~ file: userContainer.js ~ line 134 ~ UserContainer ~ getData= ~ result\",\r\n// //         result\r\n// //       );\r\n// //       this.setState({ users: result });\r\n\r\n// //       console.log(\r\n// //         \"ðŸš€ ~ file: userContainer.js ~ line 157 ~ UserContainer ~ getData= ~ users\",\r\n// //         this.state.users\r\n// //       );\r\n\r\n// //       this.getData();\r\n// //     }\r\n// //   };\r\n// //   onValueChange = (e) => {\r\n// //     console.log(e.currentTarget.value);\r\n// //     const searchTerm = e.currentTarget.value;\r\n// //     this.props.fetchUsers();\r\n// //     // axios.get(\"http://localhost:9000/\").then((response) => {\r\n// //     console.log(\r\n// //       \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\r\n// //       this.state.offset\r\n// //     );\r\n// //     if (this.props.userData) {\r\n// //       console.log(\"users for search\", this.props.userData);\r\n// //       this.filterContent(this.props.userData, searchTerm);\r\n// //     }\r\n// //     // });\r\n// //   };\r\n// //   render() {\r\n// //     return (\r\n// //       <div className=\"container App\">\r\n// //         <Router>\r\n// //           <h2>Users List</h2>\r\n// //           <div className=\"container text-right\">\r\n// //             <Link to={{ pathname: `/adduser` }}>\r\n// //               <button\r\n// //                 onClick={this.addUser}\r\n// //                 className=\"btn btn-primary btn-md m-1  \"\r\n// //               >\r\n// //                 ADD USER\r\n// //               </button>\r\n// //             </Link>\r\n// //           </div>\r\n// //           <div className=\"container mt-mb-10 text-left\">\r\n// //             <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n// //               {/* <SearchPage /> */}\r\n// //               <span className=\"icon-input-btn\">\r\n// //                 <i className=\"fa fa-search\"></i>\r\n// //                 <input\r\n// //                   // ref={inputEl}\r\n// //                   type=\"search \"\r\n// //                   placeholder=\"Search Users\"\r\n// //                   className=\"mt-mb-7 form-control  \"\r\n// //                   // v\r\n// //                   name=\"searchTerm\"\r\n// //                   onChange={this.onValueChange}\r\n// //                 />\r\n// //               </span>\r\n// //             </div>\r\n// //           </div>\r\n// //           <div className=\" container  \">\r\n// //             <table className=\"table mt-5 table-striped justify-content-center\">\r\n// //               <thead>\r\n// //                 <tr>\r\n// //                   <th>Name</th>\r\n// //                   <th>Age</th>\r\n// //                   <th>Email</th>\r\n// //                   <th>Action</th>\r\n// //                 </tr>\r\n// //               </thead>\r\n// //               <tbody className=\"text-left\">\r\n// //                 {this.state.users.map((user) => (\r\n// //                   <tr key={user._id}>\r\n// //                     <td>{user.name}</td>\r\n// //                     <td>{user.age}</td>\r\n// //                     <td>{user.email}</td>\r\n// //                     <td>\r\n// //                       <Link\r\n// //                         to={{\r\n// //                           pathname: `/updateuser/${user._id}`,\r\n// //                         }}\r\n// //                       >\r\n// //                         <button\r\n// //                           // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n// //                           onClick={() => this.editUserData(user._id)}\r\n// //                           className=\"btn btn-success btn-sm m-1  \"\r\n// //                           // component={Link}\r\n// //                           // to={`/updateuser/${user._id}`}\r\n// //                         >\r\n// //                           UPDATE\r\n// //                         </button>\r\n// //                       </Link>\r\n// //                       <button\r\n// //                         onClick={() => {\r\n// //                           this.deleteUserData(user._id, user.name);\r\n// //                         }}\r\n// //                         className=\"btn btn-danger btn-sm m-1 \"\r\n// //                       >\r\n// //                         <i className=\"fa fa-trash\"></i>\r\n// //                         DELETE\r\n// //                       </button>\r\n// //                     </td>\r\n// //                   </tr>\r\n// //                 ))}\r\n// //               </tbody>\r\n// //             </table>\r\n// //             <ReactPaginate\r\n// //               previousLabel={\"prev\"}\r\n// //               nextLabel={\"next\"}\r\n// //               breakLabel={\"...\"}\r\n// //               breakClassName={\"break-me\"}\r\n// //               pageCount={this.state.pageCount}\r\n// //               marginPagesDisplayed={2}\r\n// //               pageRangeDisplayed={5}\r\n// //               onPageChange={this.handlePageClick}\r\n// //               containerClassName={\"pagination\"}\r\n// //               subContainerClassName={\"pages pagination\"}\r\n// //               activeClassName={\"active\"}\r\n// //             />\r\n// //           </div>\r\n// //         </Router>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n// // }\r\n// // const mapStateToProps = (state) => {\r\n// //   console.log(\"state===>\", state.users, state.loading);\r\n// //   const { users, loading } = state;\r\n// //   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n// //   return {\r\n// //     userData: users,\r\n// //     loadingData: loading,\r\n// //   };\r\n// // };\r\n// // // const mapDispatchToProps = (dispatch) => {\r\n// // //   return {\r\n// // //     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\r\n// // //     fetchUsers: () => dispatch(fetchUsers()),\r\n// // //   };\r\n// // // };\r\n// // export default connect(mapStateToProps, { fetchUsers })(UserContainer);\r\n// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { deleteUsers, fetchUsers } from \"../redux\";\r\n// // import UserContainerForm from \"./UserContainerForm\";\r\n// // import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// // import childComponent from \"./UserContainerUpdate\";\r\n// // import UserContainerUpdate from \"./UserContainerUpdate\";\r\n// // import SearchField from \"react-search-field\";\r\n// // // import SearchBar from \"./SearchBar\";\r\n// // // import SearchPage from \"./searchPage\";\r\n// // import axios from \"axios\";\r\n// import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\n// import ReactPaginate from \"react-paginate\";\r\n// import axios from \"axios\";\r\n// class UserContainer extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       users: [],\r\n//       offset: 0,\r\n//       data: [],\r\n//       perPage: 5,\r\n//       pageCount: 0,\r\n//       isLoading: true,\r\n//       searchUser: [],\r\n//     };\r\n//   }\r\n//   async componentDidMount() {\r\n//     const { loadingData } = this.props;\r\n//     const page = 1;\r\n//     const response = fetchUsers(page, this.state.perPage);\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 317 ~ UserContainer ~ componentDidMount ~ response\",\r\n//       response\r\n//     );\r\n//     const res = this.getUsers(page, this.state.perPage);\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 319 ~ UserContainer ~ componentWillMount ~ res\",\r\n//       res,\r\n//       res.data\r\n//     );\r\n//     console.log(\"userData\", this.props.userData);\r\n//     this.setState({ users: this.props.userData, offset: 1 });\r\n//     console.log(\r\n//       \"users in component did mount\",\r\n//       this.state.users,\r\n//       this.state.offset\r\n//     );\r\n//     this.setState({ offset: 1 });\r\n//     console.log(\"offset\", this.state.offset);\r\n//     // if (loadingData === false) {\r\n//     this.getData();\r\n//     // }\r\n//   }\r\n//   // static getDerivedStateFromProps(nextProps, prevState) {\r\n//   //   console.log(\r\n//   //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ prevState\",\r\n//   //     prevState\r\n//   //   );\r\n//   //   console.log(\r\n//   //     \"ðŸš€ ~ file: userContainer.js ~ line 329 ~ UserContainer ~ getDerivedStateFromProps ~ nextProps\",\r\n//   //     nextProps\r\n//   //   );\r\n//   //   if (nextProps.userData !== prevState.users) {\r\n//   //     return { users: nextProps.userData.slice(0, 5) };\r\n//   //   }\r\n//   //   // else return { users: nextProps.userData };\r\n//   //   // console.log(\r\n//   //   //   \"ðŸš€ ~ file: userContainer.js ~ line 340 ~ UserContainer ~ getDerivedStateFromProps ~ users\",\r\n//   //   //   users\r\n//   //   // );\r\n//   //   this.getData();\r\n//   // }\r\n\r\n//   componentDidUpdate(prevProps, prevState, snapShot) {\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ snapShot\",\r\n//       snapShot\r\n//     );\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 350 ~ UserContainer ~ componentDidUpdate ~ prevState\",\r\n//       prevState,\r\n//       this.state\r\n//     );\r\n//     console.log(\" this.states @@\", this.state);\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 346 ~ UserContainer ~ componentDidUpdate ~ this.props\",\r\n//       this.props\r\n//     );\r\n//     // vmn\r\n//     if (prevProps.userData !== this.props.userData) {\r\n//       //Perform some operation here\r\n//       console.log(\" this.props.userData @@\", this.props.userData);\r\n//       this.setState({ users: this.props.userData });\r\n//       this.getData();\r\n//     }\r\n//   }\r\n//   // componentWillReceiveProps(nextProps) {\r\n//   //   console.log(\"component will receive props\");\r\n//   //   if (nextProps.userData !== this.props.userData) {\r\n//   //     this.setState({ users: nextProps.userData });\r\n//   //     // } else {\r\n//   //     //   this.setState({ users: nextProps.userData });\r\n//   //     // }\r\n//   //     console.log(\r\n//   //       \"ðŸš€ ~ file: userContainer.js ~ line 60 ~ UserContainer ~ componentWillReceiveProps ~ users\",\r\n//   //       this.state.users\r\n//   //     );\r\n//   //   }\r\n//   //   // this.setState({ offset: 1 });\r\n//   //   this.getData();\r\n//   // }\r\n//   async componentWillMount() {\r\n//     // this.refreshPage();\r\n//     const { loadingData } = this.props;\r\n//     // if (loadingData === false) {\r\n//     console.log(\"props @@\", this.props);\r\n//     const page = 1;\r\n//     // const res = axios.get(\r\n//     //   \"http://localhost:9000/?offset=\" + page + \"&limit=\" + this.state.perPage\r\n//     // );\r\n//     // const res = axios.get(\r\n//     //   `http://localhost:9000/?offset=${page}&limit=${this.state.perPage}`\r\n//     // );\r\n//     const res = this.getUsers(page, this.state.perPage);\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 395 ~ UserContainer ~ componentWillMount ~ res\",\r\n//       res,\r\n//       res.data\r\n//     );\r\n//     const response = fetchUsers(page, this.state.perPage);\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 414 ~ UserContainer ~ componentDidMount ~ response\",\r\n//       response\r\n//     );\r\n//     console.log(\"userData\", this.props.userData);\r\n\r\n//     this.setState({ users: this.props.userData, offset: 1 });\r\n//     console.log(\"users in component will mount\", this.state.users);\r\n//     // this.getData();\r\n//     // }\r\n//   }\r\n//   getUsers = async (offset, limit) => {\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 415 ~ UserContainer ~ getUsers= ~ offset\",\r\n//       offset\r\n//     );\r\n//     const usersUrl = \"http://localhost:9000\";\r\n//     const res = await axios.get(`${usersUrl}/?offset=${offset}&limit=${limit}`);\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 417 ~ UserContainer ~ getUsers= ~ res\",\r\n//       res,\r\n//       res.data.totalPages\r\n//     );\r\n//     const pageCount = res.data.totalpages;\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 441 ~ UserContainer ~ getUsers= ~  pageCount\",\r\n//       pageCount\r\n//     );\r\n//     this.setState({ users: res.data.docs, pageCount: res.data.totalPages });\r\n//     console.log(\r\n//       \"ðŸš€ ~ file: userContainer.js ~ line 428 ~ UserContainer ~ users\",\r\n//       this.state,\r\n//       this.props\r\n//     );\r\n//     // this.getData();\r\n//     return res.data;\r\n//   };\r\n//   handlePageClick = async (e) => {\r\n//     const selectedPage = e.selected;\r\n//     await fetchUsers(selectedPage, this.state.perPage);\r\n//     console.log(\"users for pagination \", this.props.userData);\r\n//     this.setState({ offset: selectedPage + 1 }, () => {\r\n//       this.getUsers(this.state.offset, this.state.perPage);\r\n//     });\r\n//     // setOffset(selectedPage + 1);\r\n//   };\r\n//   addUser = async () => {\r\n//     this.props.history.push(\"/adduser\");\r\n//     // this.refreshPage();\r\n//     // <UserContainerForm />;\r\n//   };\r\n//   deleteUserData = async (id, name) => {\r\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n//       await deleteUsers(id);\r\n//     } else {\r\n//       this.props.history.push(\"/home\");\r\n//     }\r\n//     fetchUsers();\r\n//     // this.refreshPage();\r\n//   };\r\n//   editUserData = async (id) => {\r\n//     console.log(\"id vaman\", id);\r\n//     this.props.history.push(`/updateuser/${id}`);\r\n//     // this.refreshPage();\r\n//   };\r\n//   refreshPage = () => {\r\n//     window.location.reload();\r\n//   };\r\n//   getData = async () => {\r\n//     const { loadingData } = this.props;\r\n//     console.log(\"loading in getDAta\", loadingData);\r\n//     // if (loadingData === false) {\r\n//     const data = this.props.userData || [];\r\n//     console.log(\"set pagination here.....\", data);\r\n//     const indexOfLastTodo = this.state.offset * this.state.perPage;\r\n//     const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\r\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n//     console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n//     this.setState({ users: slice });\r\n//     // setUsers(slice);\r\n//     console.log(\"users in getData\", this.state.users);\r\n//     this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\r\n//     // setPageCount(Math.ceil(data.length / perPage));\r\n//     // }\r\n//   };\r\n//   filterContent = (users, searchTerm) => {\r\n//     console.log(\"searchterm\", searchTerm, users);\r\n//     if (searchTerm === \"\") {\r\n//       console.log(\"searchterm empty\");\r\n//       // this.refreshPage();\r\n//       this.getData();\r\n//     } else {\r\n//       const result = users.filter((user) =>\r\n//         user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       );\r\n//       console.log(\"result @@\", result);\r\n//       this.setState({ users: result });\r\n//       // console.log(\r\n//       //   \"ðŸš€ ~ file: userContainer.js ~ line 428 ~ UserContainer ~ users\",\r\n//       //   this.state.users,\r\n//       //   this.props\r\n//       // );\r\n//       // this.getData();\r\n//     }\r\n//   };\r\n//   onValueChange = (e) => {\r\n//     const searchTerm = e.currentTarget.value;\r\n//     fetchUsers();\r\n//     console.log(\r\n//       \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\r\n//       this.state.offset\r\n//     );\r\n//     if (this.props.userData) {\r\n//       console.log(\"users for search\", this.props.userData);\r\n//       const u = this.filterContent(this.props.userData, searchTerm);\r\n//       console.log(\"users ===>for search\", u, this.state.users);\r\n//     }\r\n//   };\r\n//   render() {\r\n//     console.log(\"this.state.users @@@\", this.state.users);\r\n//     const { users } = this.state;\r\n//     return (\r\n//       <div className=\"container App\">\r\n//         <Router>\r\n//           <h2>Users List</h2>\r\n//           <div className=\"container text-right\">\r\n//             <Link to={{ pathname: `/adduser` }}>\r\n//               <button\r\n//                 onClick={this.addUser}\r\n//                 className=\"btn btn-primary btn-md m-1  \"\r\n//               >\r\n//                 ADD USER\r\n//               </button>\r\n//             </Link>\r\n//           </div>\r\n//           <div className=\"container mt-mb-10 text-left\">\r\n//             <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n//               {/* <SearchPage /> */}\r\n//               <span className=\"icon-input-btn\">\r\n//                 <i className=\"fa fa-search\"></i>\r\n//                 <input\r\n//                   // ref={inputEl}\r\n//                   type=\"search \"\r\n//                   placeholder=\"Search Users\"\r\n//                   className=\"mt-mb-7 form-control  \"\r\n//                   // v\r\n//                   name=\"searchTerm\"\r\n//                   onChange={this.onValueChange}\r\n//                 />\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\" container  \">\r\n//             <table className=\"table mt-5 table-striped justify-content-center\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Age</th>\r\n//                   <th>Email</th>\r\n//                   <th>Action</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"text-left\">\r\n//                 {users?.length > 0 &&\r\n//                   users?.map((user) => (\r\n//                     <tr key={user._id}>\r\n//                       <td>{user.name}</td>\r\n//                       <td>{user.age}</td>\r\n//                       <td>{user.email}</td>\r\n//                       <td>\r\n//                         <Link\r\n//                           to={{\r\n//                             pathname: `/updateuser/${user._id}`,\r\n//                           }}\r\n//                         >\r\n//                           <button\r\n//                             // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                             onClick={() => this.editUserData(user._id)}\r\n//                             className=\"btn btn-success btn-sm m-1  \"\r\n//                             // component={Link}\r\n//                             // to={`/updateuser/${user._id}`}\r\n//                           >\r\n//                             UPDATE\r\n//                           </button>\r\n//                         </Link>\r\n//                         <button\r\n//                           onClick={() => {\r\n//                             this.deleteUserData(user._id, user.name);\r\n//                           }}\r\n//                           className=\"btn btn-danger btn-sm m-1 \"\r\n//                         >\r\n//                           <i className=\"fa fa-trash\"></i>\r\n//                           DELETE\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//               </tbody>\r\n//             </table>\r\n\r\n//             <ReactPaginate\r\n//               previousLabel={\"prev\"}\r\n//               nextLabel={\"next\"}\r\n//               breakLabel={\"...\"}\r\n//               breakClassName={\"break-me\"}\r\n//               pageCount={this.state.pageCount}\r\n//               marginPagesDisplayed={2}\r\n//               pageRangeDisplayed={5}\r\n//               onPageChange={this.handlePageClick}\r\n//               containerClassName={\"pagination\"}\r\n//               subContainerClassName={\"pages pagination\"}\r\n//               activeClassName={\"active\"}\r\n//             />\r\n//           </div>\r\n//         </Router>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// // const mapStateToProps = (state) => {\r\n// //   console.log(\"state===>\", state.users, state.loading);\r\n// //   const { users, loading } = state;\r\n// //   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n// //   return {\r\n// //     userData: users,\r\n// //     loadingData: loading,\r\n// //   };\r\n// // };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\r\n//     fetchUsers: (page, limit) => dispatch(fetchUsers(page, limit)),\r\n//   };\r\n// };\r\n// export default connect(\r\n//   (state) => (\r\n//     console.log(\"state\", state),\r\n//     { userData: state.users, loadingData: state.loading }\r\n//   ),\r\n//   { mapDispatchToProps }\r\n// )(UserContainer);\r\n"]},"metadata":{},"sourceType":"module"}