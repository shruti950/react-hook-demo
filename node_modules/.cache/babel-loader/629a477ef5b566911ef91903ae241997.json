{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo-hook\\\\src\\\\components\\\\UserContainerInsertHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { fetchUsers, insertUsers } from \"../redux\";\nimport HeaderUser from \"./HeaderUser\"; // import UserContainer from \"./UserContainer\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  age: \"\",\n  email: \"\"\n};\n\nfunction UserContainerInsertHook({\n  userData,\n  fetchUsers,\n  insertUsers\n}) {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const {\n    name,\n    age,\n    email\n  } = user; // const { id } = useParams();\n\n  let history = useHistory();\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const onValueChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const addUser = async e => {\n    if (!name || !age || !email) {\n      alert(\"Please add all the details\");\n    } else {\n      fetchUsers();\n      const existEmail = userData.filter(existingEmail => {\n        if (email === existingEmail.email) {\n          return true;\n        }\n      });\n      const map = existEmail.map(item => {\n        if (item.email === email) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n      if (map.includes(true)) {\n        alert(\"Email already Exists\");\n      } else {\n        await insertUsers(user);\n        history.push(\"/home\");\n        return;\n      } //\n\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: [/*#__PURE__*/_jsxDEV(HeaderUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          className: \"form-control\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-left \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-weight-bolder\",\n          children: \"Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"age\",\n          value: age,\n          className: \"form-control\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-left \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-weight-bolder\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          className: \"form-control\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-left\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/home`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            onClick: () => addUser(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContainerInsertHook, \"sZjbtQo1PR6BsxReJYl1KLOl5YY=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserContainerInsertHook;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n    insertUsers: user => dispatch(insertUsers(user))\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers,\n  insertUsers\n})(UserContainerInsertHook);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainerInsertHook\");","map":{"version":3,"sources":["C:/Users/apex/project-demo-hook/src/components/UserContainerInsertHook.js"],"names":["React","useState","useEffect","connect","useHistory","Link","fetchUsers","insertUsers","HeaderUser","initialState","name","age","email","UserContainerInsertHook","userData","user","setUser","history","onValueChange","e","target","value","addUser","alert","existEmail","filter","existingEmail","map","item","includes","push","pathname","mapStateToProps","state","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { fetchUsers, insertUsers } from \"../redux\";\r\nimport HeaderUser from \"./HeaderUser\";\r\n// import UserContainer from \"./UserContainer\";\r\nconst initialState = {\r\n  name: \"\",\r\n  age: \"\",\r\n  email: \"\",\r\n};\r\nfunction UserContainerInsertHook({ userData, fetchUsers, insertUsers }) {\r\n  const [user, setUser] = useState(initialState);\r\n  const { name, age, email } = user;\r\n  // const { id } = useParams();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n  const onValueChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addUser = async (e) => {\r\n    if (!name || !age || !email) {\r\n      alert(\"Please add all the details\");\r\n    } else {\r\n      fetchUsers();\r\n      const existEmail = userData.filter((existingEmail) => {\r\n        if (email === existingEmail.email) {\r\n          return true;\r\n        }\r\n      });\r\n      const map = existEmail.map((item) => {\r\n        if (item.email === email) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n      if (map.includes(true)) {\r\n        alert(\"Email already Exists\");\r\n      } else {\r\n        await insertUsers(user);\r\n        history.push(\"/home\");\r\n        return;\r\n      }\r\n      //\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <HeaderUser />\r\n      <form>\r\n        <div className=\"form-group text-left\">\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className=\"form-control\"\r\n            onChange={onValueChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left \">\r\n          <label className=\"font-weight-bolder\">Age:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"age\"\r\n            value={age}\r\n            className=\"form-control\"\r\n            onChange={onValueChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left \">\r\n          <label className=\"font-weight-bolder\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            className=\"form-control\"\r\n            onChange={onValueChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-left\">\r\n          <Link to={{ pathname: `/home` }}>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"submit\"\r\n              onClick={() => addUser()}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.users,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUsers: () => dispatch(fetchUsers()),\r\n    insertUsers: (user) => dispatch(insertUsers(user)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { fetchUsers, insertUsers })(\r\n  UserContainerInsertHook\r\n);\r\n"]},"metadata":{},"sourceType":"module"}