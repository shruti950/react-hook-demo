{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\nimport UserContainerForm from \"./UserContainerForm\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport childComponent from \"./UserContainerUpdate\";\nimport UserContainerUpdate from \"./UserContainerUpdate\";\nimport SearchField from \"react-search-field\"; // import SearchBar from \"./SearchBar\";\n// import SearchPage from \"./searchPage\";\n\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, useHistory, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserContainer = ({\n  fetchUsers,\n  userData\n}) => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0); // const [user, setUser] = useState([]);\n\n  const inputEl = useRef(\"\"); // const { name, age, email } = user;\n\n  const history = useHistory();\n  useEffect(async () => {\n    console.log(\"fetch all users............\");\n    await fetchUsers();\n    setUserData(userData);\n  }, []);\n\n  const setUserData = data => {\n    if (users.length === 0) {\n      setUsers(data); // setOffset(1);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [offset]);\n\n  const deleteUserData = async (id, name) => {\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n      await deleteUsers(id);\n    } else {\n      history.push(\"/home\");\n    }\n\n    fetchUsers();\n    getData();\n  };\n\n  const getData = async () => {\n    const data = userData || [];\n    console.log(\"set pagination here.....\", data);\n    const newOffset = offset > 0 ? offset - 1 : 0;\n    console.log(\"newOffset :: \", newOffset);\n    const indexOfLastTodo = newOffset * perPage;\n    const indexOfFirstTodo = indexOfLastTodo - perPage;\n    const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n    console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n    setUsers(slice);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  const addUser = async () => {\n    history.push(\"/adduser\"); // <UserContainerForm />;\n  };\n\n  const filterContent = (users, searchTerm) => {\n    const result = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    console.log(\"result\", result);\n    setUsers(result);\n  };\n\n  const onValueChange = e => {\n    // console.log(e.currentTarget.value);\n    const searchTerm = e.currentTarget.value;\n    fetchUsers(); // axios.get(\"http://localhost:9000/\").then((response) => {\n\n    console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\n\n    if (userData) {\n      console.log(\"users for search\", userData);\n      filterContent(userData, searchTerm);\n    } // });\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-right\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/adduser`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addUser,\n            className: \"btn btn-primary btn-md m-1  \",\n            children: \"ADD USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-mb-10 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 mt-mb-10  justify-content-left ui icon input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            // ref={inputEl}\n            type: \"search \",\n            placeholder: \"Search Users\",\n            className: \"mt-mb-7 form-control  \" // v\n            ,\n            name: \"searchTerm\",\n            onChange: onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" container \",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table mt-5 table-striped justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"text-left\",\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `/updateuser/${user._id}`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: /*#__PURE__*/_jsxDEV(Redirect, {\n                      to: \"/updateuser/${user._id}\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 34\n                    }, this),\n                    className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                    // to={`/updateuser/${user._id}`}\n                    ,\n                    children: \"UPDATE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    deleteUserData(user._id, user.name);\n                  },\n                  className: \"btn btn-danger btn-sm m-1 \",\n                  children: \"DELETE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"prev\",\n          nextLabel: \"next\",\n          breakLabel: \"...\",\n          breakClassName: \"break-me\",\n          pageCount: pageCount,\n          marginPagesDisplayed: 2,\n          pageRangeDisplayed: 5,\n          onPageChange: handlePageClick,\n          containerClassName: \"pagination\",\n          subContainerClassName: \"pages pagination\",\n          activeClassName: \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserContainer, \"Fr9YkTRMUKwp+TAZCZie9yPlEAc=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserContainer;\n\nconst mapStateToProps = state => {\n  console.log(\"state===>\", state);\n  return {\n    userData: state.users,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer); // connect(mapStateToProps, { fetchUsers }\n// connect(mapStateToProps, { fetchUsers })\n// import React, { Component, useEffect, useState, useRef } from \"react\";\n// import { connect } from \"react-redux\";\n// import { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\n// import UserContainerForm from \"./UserContainerForm\";\n// import {\n//   BrowserRouter as Router,\n//   Link,\n//   useHistory,\n//   Redirect,\n// } from \"react-router-dom\";\n// import UsePagination from \"./usePagination\";\n// import { usePagination } from \"@material-ui/lab\";\n// import ReactPaginate from \"react-paginate\";\n// function UserContainer({ userData, fetchUsers }, props) {\n//   const [users, setUsers] = useState([]);\n//   // const [user, setUser] = useState([]);\n//   const inputEl = useRef(\"\");\n//   const [postsPerPage] = useState(4);\n//   const [offset, setOffset] = useState(0);\n//   const [posts, setAllPosts] = useState([]);\n//   const [pageCount, setPageCount] = useState(0);\n//   // const { name, age, email } = user;\n//   useEffect(() => {\n//     fetchUsers();\n//     setAllPosts(userData);\n//     console.log(\"users======> in useeffect \", posts, userData);\n//   }, []);\n//   // useEffect(() => {\n//   //   getAllPosts();\n//   // }, [offset]);\n//   const history = useHistory();\n//   const deleteUserData = async (id, name) => {\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n//       await deleteUsers(id);\n//     } else {\n//       history.push(\"/home\");\n//     }\n//     // await deleteUsers(id);\n//     fetchUsers();\n//   };\n//   const addUser = async () => {\n//     history.push(\"/adduser\");\n//     // <UserContainerForm />;\n//   };\n//   const filterContent = (users, searchTerm) => {\n//     const result = users.filter((user) =>\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     console.log(\"result\", result);\n//     setUsers(result);\n//   };\n//   const onValueChange = (e) => {\n//     const searchTerm = e.currentTarget.value;\n//     fetchUsers();\n//     if (userData) {\n//       console.log(\"users for search\", userData);\n//       filterContent(userData, searchTerm);\n//     }\n//   };\n//   const getPostData = (data) => {\n//     return (\n//       <div>\n//         <Router>\n//           <div className=\"container text-right\">\n//             <Link to={{ pathname: `/adduser` }}>\n//               <button\n//                 onClick={addUser}\n//                 className=\"btn btn-primary btn-md m-1  \"\n//               >\n//                 ADD USER\n//               </button>\n//             </Link>\n//           </div>\n//           <div className=\"container mb-10 text-left\">\n//             <div className=\"w-75 mb-10  justify-content-left ui icon input\">\n//               {/* <SearchPage /> */}\n//               <input\n//                 // ref={inputEl}\n//                 type=\"search \"\n//                 placeholder=\"Search Users\"\n//                 className=\"mb-7 form-control  \"\n//                 // v\n//                 name=\"searchTerm\"\n//                 onChange={onValueChange}\n//               />\n//             </div>\n//           </div>\n//           <div className=\" container \">\n//             <table className=\"table mt-5 table-striped justify-content-center\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Age</th>\n//                   <th>Email</th>\n//                   <th>Action</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-left\">\n//                 {data.map((user) => (\n//                   <tr key={user._id}>\n//                     <td>{user.name}</td>\n//                     <td>{user.age}</td>\n//                     <td>{user.email}</td>\n//                     <td>\n//                       <Link\n//                         to={{\n//                           pathname: `/updateuser/${user._id}`,\n//                         }}\n//                       >\n//                         <button\n//                           onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                           className=\"btn btn-success btn-sm m-1  \"\n//                           // component={Link}\n//                           // to={`/updateuser/${user._id}`}\n//                         >\n//                           UPDATE\n//                         </button>\n//                       </Link>\n//                       <button\n//                         onClick={() => {\n//                           deleteUserData(user._id, user.name);\n//                         }}\n//                         className=\"btn btn-danger btn-sm m-1 \"\n//                       >\n//                         DELETE\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </Router>\n//       </div>\n//     );\n//   };\n//   const getAllPosts = async () => {\n//     fetchUsers();\n//     const data = userData;\n//     // setUsers(userData);\n//     console.log(\"dtaa in get all post\", data);\n//     const slice = users.slice(offset, offset + postsPerPage);\n//     console.log(\n//       \"🚀 ~ file: userContainer.js ~ line 73 ~ getAllPosts ~ slice \",\n//       slice\n//     );\n//     // For displaying Data\n//     const postData = getPostData(slice);\n//     console.log(\n//       \"🚀 ~ file: userContainer.js ~ line 151 ~ getAllPosts ~ postData\",\n//       postData\n//     );\n//     // console.log(\n//     //   \"🚀 ~ file: userContainer.js ~ line 152 ~ data.length\",\n//     //   data.length\n//     // );\n//     // Using Hooks to set value\n//     setAllPosts(postData);\n//     // setUsers(slice);\n//     setPageCount(Math.ceil(data.length / postsPerPage));\n//   };\n//   const handlePageClick = (event) => {\n//     const selectedPage = event.selected;\n//     console.log(\n//       \"file: userContainer.js ~ line 166 ~ handlePageClick ~ selectedPage \",\n//       selectedPage\n//     );\n//     setOffset(selectedPage + 1);\n//   };\n//   return (\n//     <div>\n//       <Router>\n//         <h2>Users List</h2>\n//         <div className=\"container text-right\">\n//           {posts}\n//           {/* Using React Paginate */}\n//           <ReactPaginate\n//             previousLabel={\"previous\"}\n//             nextLabel={\" next\"}\n//             breakLabel={\"...\"}\n//             breakClassName={\"break-me\"}\n//             pageCount={pageCount}\n//             onPageChange={handlePageClick}\n//             containerClassName={\"pagination\"}\n//             subContainerClassName={\"pages pagination\"}\n//             activeClassName={\"active\"}\n//           />\n//           <Link to={{ pathname: `/adduser` }}>\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\n//               ADD USER\n//             </button>\n//           </Link>\n//         </div>\n//         <div className=\"container mb-10 text-left\">\n//           <div className=\"w-75 mb-10  justify-content-left ui icon input\">\n//             {/* <SearchPage /> */}\n//             <input\n//               // ref={inputEl}\n//               type=\"search \"\n//               placeholder=\"Search Users\"\n//               className=\"mb-7 form-control  \"\n//               // v\n//               name=\"searchTerm\"\n//               onChange={onValueChange}\n//             />\n//           </div>\n//         </div>\n//         <div className=\" container \">\n//           <table className=\"table mt-5 table-striped justify-content-center\">\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Age</th>\n//                 <th>Email</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"text-left\">\n//               {users.map((user) => (\n//                 <tr key={user._id}>\n//                   <td>{user.name}</td>\n//                   <td>{user.age}</td>\n//                   <td>{user.email}</td>\n//                   <td>\n//                     <Link\n//                       to={{\n//                         pathname: `/updateuser/${user._id}`,\n//                       }}\n//                     >\n//                       <button\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                         className=\"btn btn-success btn-sm m-1  \"\n//                         // component={Link}\n//                         // to={`/updateuser/${user._id}`}\n//                       >\n//                         UPDATE\n//                       </button>\n//                     </Link>\n//                     <button\n//                       onClick={() => {\n//                         deleteUserData(user._id, user.name);\n//                       }}\n//                       className=\"btn btn-danger btn-sm m-1 \"\n//                     >\n//                       DELETE\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </Router>\n//     </div>\n//   );\n// }\n// const mapStateToProps = (state) => {\n//   console.log(\"state\", state.users);\n//   return {\n//     userData: state.users,\n//   };\n// };\n// // const mapDispatchToProps = (dispatch) => {\n// //   console.log();\n// //   return {\n// //     fetchUsers: () => dispatch(fetchUsers()),\n// //     updateUsers:()=>dispatch(updateUsers())\n// //   };\n// // };\n// export default connect(mapStateToProps, { fetchUsers, updateUsers })(\n//   UserContainer\n// );\n// // connect(mapStateToProps, { fetchUsers })\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainer\");","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainer.js"],"names":["React","Component","useEffect","useState","useRef","connect","deleteUsers","fetchUsers","updateUsers","UserContainerForm","Autocomplete","childComponent","UserContainerUpdate","SearchField","axios","BrowserRouter","Router","Link","useHistory","Redirect","ReactPaginate","UserContainer","userData","users","setUsers","offset","setOffset","data","setData","perPage","pageCount","setPageCount","inputEl","history","console","log","setUserData","length","getData","deleteUserData","id","name","window","confirm","push","newOffset","indexOfLastTodo","indexOfFirstTodo","slice","Math","ceil","handlePageClick","e","selectedPage","selected","addUser","filterContent","searchTerm","result","filter","user","toLowerCase","includes","onValueChange","currentTarget","value","pathname","map","age","email","_id","mapStateToProps","state","loading","mapDispatchToProps","dispatch"],"mappings":"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":["import React, { Component, useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\r\nimport UserContainerForm from \"./UserContainerForm\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport childComponent from \"./UserContainerUpdate\";\r\nimport UserContainerUpdate from \"./UserContainerUpdate\";\r\nimport SearchField from \"react-search-field\";\r\n// import SearchBar from \"./SearchBar\";\r\n// import SearchPage from \"./searchPage\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nconst UserContainer = ({ fetchUsers, userData }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [perPage] = useState(5);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // const [user, setUser] = useState([]);\r\n  const inputEl = useRef(\"\");\r\n  // const { name, age, email } = user;\r\n  const history = useHistory();\r\n  useEffect(async () => {\r\n    console.log(\"fetch all users............\");\r\n    await fetchUsers();\r\n    setUserData(userData);\r\n  }, []);\r\n\r\n  const setUserData = (data) => {\r\n    if (users.length === 0) {\r\n      setUsers(data);\r\n      // setOffset(1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [offset]);\r\n\r\n  const deleteUserData = async (id, name) => {\r\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n      await deleteUsers(id);\r\n    } else {\r\n      history.push(\"/home\");\r\n    }\r\n    fetchUsers();\r\n    getData();\r\n  };\r\n  const getData = async () => {\r\n    const data = userData || [];\r\n    console.log(\"set pagination here.....\", data);\r\n    const newOffset = offset > 0 ? offset - 1 : 0;\r\n    console.log(\"newOffset :: \", newOffset);\r\n    const indexOfLastTodo = newOffset * perPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - perPage;\r\n    const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n    console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n    setUsers(slice);\r\n    setPageCount(Math.ceil(data.length / perPage));\r\n  };\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setOffset(selectedPage + 1);\r\n  };\r\n  const addUser = async () => {\r\n    history.push(\"/adduser\");\r\n    // <UserContainerForm />;\r\n  };\r\n  const filterContent = (users, searchTerm) => {\r\n    const result = users.filter((user) =>\r\n      user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    console.log(\"result\", result);\r\n    setUsers(result);\r\n  };\r\n  const onValueChange = (e) => {\r\n    // console.log(e.currentTarget.value);\r\n    const searchTerm = e.currentTarget.value;\r\n    fetchUsers();\r\n    // axios.get(\"http://localhost:9000/\").then((response) => {\r\n    console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\r\n    if (userData) {\r\n      console.log(\"users for search\", userData);\r\n      filterContent(userData, searchTerm);\r\n    }\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <h2>Users List</h2>\r\n        <div className=\"container text-right\">\r\n          <Link to={{ pathname: `/adduser` }}>\r\n            <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n              ADD USER\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"container mt-mb-10 text-left\">\r\n          <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n            {/* <SearchPage /> */}\r\n            <input\r\n              // ref={inputEl}\r\n              type=\"search \"\r\n              placeholder=\"Search Users\"\r\n              className=\"mt-mb-7 form-control  \"\r\n              // v\r\n              name=\"searchTerm\"\r\n              onChange={onValueChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\" container \">\r\n          <table className=\"table mt-5 table-striped justify-content-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Age</th>\r\n                <th>Email</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-left\">\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.age}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/updateuser/${user._id}`,\r\n                      }}\r\n                    >\r\n                      <button\r\n                        onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n                        className=\"btn btn-success btn-sm m-1  \"\r\n                        // component={Link}\r\n                        // to={`/updateuser/${user._id}`}\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </Link>\r\n                    <button\r\n                      onClick={() => {\r\n                        deleteUserData(user._id, user.name);\r\n                      }}\r\n                      className=\"btn btn-danger btn-sm m-1 \"\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state===>\", state);\r\n  return {\r\n    userData: state.users,\r\n    loading: state.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUsers: () => dispatch(fetchUsers()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n// connect(mapStateToProps, { fetchUsers }\r\n// connect(mapStateToProps, { fetchUsers })\r\n// import React, { Component, useEffect, useState, useRef } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\r\n// import UserContainerForm from \"./UserContainerForm\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Link,\r\n//   useHistory,\r\n//   Redirect,\r\n// } from \"react-router-dom\";\r\n// import UsePagination from \"./usePagination\";\r\n// import { usePagination } from \"@material-ui/lab\";\r\n// import ReactPaginate from \"react-paginate\";\r\n// function UserContainer({ userData, fetchUsers }, props) {\r\n//   const [users, setUsers] = useState([]);\r\n//   // const [user, setUser] = useState([]);\r\n//   const inputEl = useRef(\"\");\r\n//   const [postsPerPage] = useState(4);\r\n//   const [offset, setOffset] = useState(0);\r\n//   const [posts, setAllPosts] = useState([]);\r\n//   const [pageCount, setPageCount] = useState(0);\r\n//   // const { name, age, email } = user;\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//     setAllPosts(userData);\r\n//     console.log(\"users======> in useeffect \", posts, userData);\r\n//   }, []);\r\n//   // useEffect(() => {\r\n//   //   getAllPosts();\r\n//   // }, [offset]);\r\n//   const history = useHistory();\r\n//   const deleteUserData = async (id, name) => {\r\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n//       await deleteUsers(id);\r\n//     } else {\r\n//       history.push(\"/home\");\r\n//     }\r\n\r\n//     // await deleteUsers(id);\r\n//     fetchUsers();\r\n//   };\r\n\r\n//   const addUser = async () => {\r\n//     history.push(\"/adduser\");\r\n//     // <UserContainerForm />;\r\n//   };\r\n\r\n//   const filterContent = (users, searchTerm) => {\r\n//     const result = users.filter((user) =>\r\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     console.log(\"result\", result);\r\n//     setUsers(result);\r\n//   };\r\n//   const onValueChange = (e) => {\r\n//     const searchTerm = e.currentTarget.value;\r\n//     fetchUsers();\r\n//     if (userData) {\r\n//       console.log(\"users for search\", userData);\r\n//       filterContent(userData, searchTerm);\r\n//     }\r\n//   };\r\n//   const getPostData = (data) => {\r\n//     return (\r\n//       <div>\r\n//         <Router>\r\n//           <div className=\"container text-right\">\r\n//             <Link to={{ pathname: `/adduser` }}>\r\n//               <button\r\n//                 onClick={addUser}\r\n//                 className=\"btn btn-primary btn-md m-1  \"\r\n//               >\r\n//                 ADD USER\r\n//               </button>\r\n//             </Link>\r\n//           </div>\r\n//           <div className=\"container mb-10 text-left\">\r\n//             <div className=\"w-75 mb-10  justify-content-left ui icon input\">\r\n//               {/* <SearchPage /> */}\r\n//               <input\r\n//                 // ref={inputEl}\r\n//                 type=\"search \"\r\n//                 placeholder=\"Search Users\"\r\n//                 className=\"mb-7 form-control  \"\r\n//                 // v\r\n//                 name=\"searchTerm\"\r\n//                 onChange={onValueChange}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\" container \">\r\n//             <table className=\"table mt-5 table-striped justify-content-center\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Age</th>\r\n//                   <th>Email</th>\r\n//                   <th>Action</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"text-left\">\r\n//                 {data.map((user) => (\r\n//                   <tr key={user._id}>\r\n//                     <td>{user.name}</td>\r\n//                     <td>{user.age}</td>\r\n//                     <td>{user.email}</td>\r\n//                     <td>\r\n//                       <Link\r\n//                         to={{\r\n//                           pathname: `/updateuser/${user._id}`,\r\n//                         }}\r\n//                       >\r\n//                         <button\r\n//                           onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                           className=\"btn btn-success btn-sm m-1  \"\r\n//                           // component={Link}\r\n//                           // to={`/updateuser/${user._id}`}\r\n//                         >\r\n//                           UPDATE\r\n//                         </button>\r\n//                       </Link>\r\n\r\n//                       <button\r\n//                         onClick={() => {\r\n//                           deleteUserData(user._id, user.name);\r\n//                         }}\r\n//                         className=\"btn btn-danger btn-sm m-1 \"\r\n//                       >\r\n//                         DELETE\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </Router>\r\n//       </div>\r\n//     );\r\n//   };\r\n//   const getAllPosts = async () => {\r\n//     fetchUsers();\r\n//     const data = userData;\r\n//     // setUsers(userData);\r\n//     console.log(\"dtaa in get all post\", data);\r\n//     const slice = users.slice(offset, offset + postsPerPage);\r\n//     console.log(\r\n//       \"🚀 ~ file: userContainer.js ~ line 73 ~ getAllPosts ~ slice \",\r\n//       slice\r\n//     );\r\n\r\n//     // For displaying Data\r\n//     const postData = getPostData(slice);\r\n//     console.log(\r\n//       \"🚀 ~ file: userContainer.js ~ line 151 ~ getAllPosts ~ postData\",\r\n//       postData\r\n//     );\r\n//     // console.log(\r\n//     //   \"🚀 ~ file: userContainer.js ~ line 152 ~ data.length\",\r\n//     //   data.length\r\n//     // );\r\n\r\n//     // Using Hooks to set value\r\n//     setAllPosts(postData);\r\n//     // setUsers(slice);\r\n//     setPageCount(Math.ceil(data.length / postsPerPage));\r\n//   };\r\n//   const handlePageClick = (event) => {\r\n//     const selectedPage = event.selected;\r\n//     console.log(\r\n//       \"file: userContainer.js ~ line 166 ~ handlePageClick ~ selectedPage \",\r\n//       selectedPage\r\n//     );\r\n//     setOffset(selectedPage + 1);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Router>\r\n//         <h2>Users List</h2>\r\n//         <div className=\"container text-right\">\r\n//           {posts}\r\n\r\n//           {/* Using React Paginate */}\r\n//           <ReactPaginate\r\n//             previousLabel={\"previous\"}\r\n//             nextLabel={\" next\"}\r\n//             breakLabel={\"...\"}\r\n//             breakClassName={\"break-me\"}\r\n//             pageCount={pageCount}\r\n//             onPageChange={handlePageClick}\r\n//             containerClassName={\"pagination\"}\r\n//             subContainerClassName={\"pages pagination\"}\r\n//             activeClassName={\"active\"}\r\n//           />\r\n//           <Link to={{ pathname: `/adduser` }}>\r\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n//               ADD USER\r\n//             </button>\r\n//           </Link>\r\n//         </div>\r\n//         <div className=\"container mb-10 text-left\">\r\n//           <div className=\"w-75 mb-10  justify-content-left ui icon input\">\r\n//             {/* <SearchPage /> */}\r\n//             <input\r\n//               // ref={inputEl}\r\n//               type=\"search \"\r\n//               placeholder=\"Search Users\"\r\n//               className=\"mb-7 form-control  \"\r\n//               // v\r\n//               name=\"searchTerm\"\r\n//               onChange={onValueChange}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\" container \">\r\n//           <table className=\"table mt-5 table-striped justify-content-center\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Name</th>\r\n//                 <th>Age</th>\r\n//                 <th>Email</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"text-left\">\r\n//               {users.map((user) => (\r\n//                 <tr key={user._id}>\r\n//                   <td>{user.name}</td>\r\n//                   <td>{user.age}</td>\r\n//                   <td>{user.email}</td>\r\n//                   <td>\r\n//                     <Link\r\n//                       to={{\r\n//                         pathname: `/updateuser/${user._id}`,\r\n//                       }}\r\n//                     >\r\n//                       <button\r\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                         className=\"btn btn-success btn-sm m-1  \"\r\n//                         // component={Link}\r\n//                         // to={`/updateuser/${user._id}`}\r\n//                       >\r\n//                         UPDATE\r\n//                       </button>\r\n//                     </Link>\r\n\r\n//                     <button\r\n//                       onClick={() => {\r\n//                         deleteUserData(user._id, user.name);\r\n//                       }}\r\n//                       className=\"btn btn-danger btn-sm m-1 \"\r\n//                     >\r\n//                       DELETE\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state\", state.users);\r\n//   return {\r\n//     userData: state.users,\r\n//   };\r\n// };\r\n// // const mapDispatchToProps = (dispatch) => {\r\n// //   console.log();\r\n// //   return {\r\n// //     fetchUsers: () => dispatch(fetchUsers()),\r\n// //     updateUsers:()=>dispatch(updateUsers())\r\n// //   };\r\n// // };\r\n// export default connect(mapStateToProps, { fetchUsers, updateUsers })(\r\n//   UserContainer\r\n// );\r\n// // connect(mapStateToProps, { fetchUsers })\r\n"]},"metadata":{},"sourceType":"module"}