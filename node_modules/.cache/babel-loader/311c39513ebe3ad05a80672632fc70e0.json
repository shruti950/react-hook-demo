{"ast":null,"code":"import { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE } from \"./userType\";\nimport axios from \"axios\";\nconst usersUrl = \"http://localhost:9000\";\nexport const fetchUser = user => {\n  console.log(\"%c 👨‍👩‍👧‍👧: fetchUser -> user \", \"font-size:16px;background-color:#530360;color:white;\", user);\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/hook/\" + user).then(response => {\n      console.log(\"%c 🍿: fetchUser -> response \", \"font-size:16px;background-color:#c1eed7;color:black;\", response);\n      const user = response.data;\n      console.log(\"%c 🇮🇹: fetchUser -> user \", \"font-size:16px;background-color:#c7643d;color:white;\", user);\n      dispatch(fetchUserSuccess(user));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchSearchedUser = (searchTerm, offset) => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/hook/users/search/\" + searchTerm + \"/?offset=\" + offset).then(response => {\n      const user = response.data;\n      dispatch(fetchUserSuccess(user.slice, user.totalPages));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n};\nexport const fetchAllUsers = (offset, limit) => {\n  console.log(\"%c 🤸‍♀️: fetchAllUsers -> offset, limit \", \"font-size:16px;background-color:#937282;color:white;\", offset, limit);\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(\"http://localhost:9000/hook/user/?offset=\" + offset + \"&limit=\" + limit).then(response => {\n      console.log(\"%c 📜: fetchAllUsers -> response \", \"font-size:16px;background-color:#0484d8;color:white;\", response);\n      const user = response.data;\n      console.log(\"%c ㊙️: fetchAllUsers ->  user \", \"font-size:16px;background-color:#d81a08;color:white;\", user);\n      dispatch(fetchUserSuccess(user.slice, user.page));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  }; // } catch (err) {\n  // }\n  // debugger;\n};\nexport const fetchUsers = () => {\n  //\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    axios.get(`${usersUrl}/hook/users`).then(response => {\n      const user = response.data;\n      console.log(\"%c 📦: fetchUsers -> user \", \"font-size:16px;background-color:#bd3b8f;color:white;\", user);\n      dispatch(fetchUserSuccess(user));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error));\n    });\n  };\n}; // export const fetchUsers = (offset, limit) => {\n//\n//   // const offset = 1;\n//   // const limit = 5;\n//   return (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     try {\n//       const response = axios.get(\n//         `${usersUrl}/?offset=${offset}&limit=${limit}`\n//       );\n//         \"🚀 ~ file: userAction.js ~ line 100 ~ return ~ response\",\n//         response\n//       );\n//       dispatch(fetchUserSuccess(response.data));\n//     } catch (error) {\n//       dispatch(fetchUserFailure(error));\n//     }\n//   };\n// };\n// export const insertUsers = (user) => {\n//   return (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     axios\n//       .post(\"http://localhost:9000/hook\", user)\n//       .then((response) => {\n//         const users = response.data;\n//           \"🚀 ~ file: userAction.js ~ line 46 ~ .then ~ users\",\n//           users\n//         );\n//         dispatch(fetchUserSuccess(users));\n//       })\n//       .catch((error) => {\n//         dispatch(fetchUserFailure(error.msg));\n//       });\n//   };\n// };\n\nexport const insertUsers = async user => {\n  return await axios.post(`${usersUrl}`, user); // .then((response) => {\n  //     \"file: userAction.js ~ line 58 ~ returnawaitaxios.post ~ response\",\n  //     response\n  //   );\n  // })\n  // .catch((error) => {\n  // });\n}; // export const updateUsers = async (id, user) => {\n//   return await axios\n//     .put(`${usersUrl}/${id}`, user)\n// };\n// export const updateUsers = (id, user) => {\n//   return async (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     await axios\n//       .put(\"http://localhost:9000/hook\" + id, user)\n//       .then((response) => {\n//         const users = response.data;\n//         return dispatch(fetchUserSuccess(users));\n//       })\n//       .catch((error) => {\n//         return dispatch(fetchUserFailure(error));\n//       });\n//   };\n// };\n\nexport const updateUsers = (id, user) => {\n  console.log(\"%c 🍍: updateUsers -> id, user \", \"font-size:16px;background-color:#489fd3;color:white;\", id, user);\n  return async dispatch => {\n    dispatch(fetchUserRequest());\n\n    try {\n      const response = await axios.put(\"http://localhost:9000/hook/\" + id, user);\n      console.log(\"%c 🚜: updateUsers -> response  \", \"font-size:16px;background-color:#e61faa;color:white;\", response);\n      const updatedData = response.data;\n      console.log(\"%c ㊙️: fetchAllUsers ->  user \", \"font-size:16px;background-color:#d81a08;color:white;\", user);\n      dispatch(fetchUserSuccess(updatedData.slice, updatedData.page));\n    } catch (error) {\n      console.log(\"%c 🏢: updateUsers -> error \", \"font-size:16px;background-color:#245769;color:white;\", error);\n      dispatch(fetchUserFailure(error));\n    }\n  };\n};\nexport const deleteUsers = async id => {\n  return await axios.delete(`${usersUrl}/${id}`);\n}; // export const deleteUsers = (id) => {\n//   return (dispatch) => {\n//     dispatch(fetchUserRequest());\n//     axios\n//       .delete(`${usersUrl}/${id}`)\n//       .get(\"http://localhost:9000/hook\")\n//       .then((response) => {\n//         // response.data is the users\n//         const users = response.data;\n//         dispatch(fetchUserSuccess(users));\n//       })\n//       .catch((error) => {\n//         // error.message is the error message\n//         dispatch(fetchUserFailure(error.message));\n//       });\n//   };\n// };\n\nexport const fetchUserRequest = () => {\n  return {\n    type: FETCH_USER_REQUEST\n  };\n};\nexport const fetchUserSuccess = (users, pages) => {\n  return {\n    type: FETCH_USER_SUCCESS,\n    payload: users,\n    totalPage: pages\n  };\n};\nexport const fetchUserFailure = error => {\n  return {\n    type: FETCH_USER_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/apex/project-demo-hook/src/redux/users/userAction.js"],"names":["FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","axios","usersUrl","fetchUser","user","console","log","dispatch","fetchUserRequest","get","then","response","data","fetchUserSuccess","catch","error","fetchUserFailure","fetchSearchedUser","searchTerm","offset","slice","totalPages","fetchAllUsers","limit","page","fetchUsers","insertUsers","post","updateUsers","id","put","updatedData","deleteUsers","delete","type","users","pages","payload","totalPage"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n} from \"./userType\";\r\nimport axios from \"axios\";\r\nconst usersUrl = \"http://localhost:9000\";\r\nexport const fetchUser = (user) => {\r\n  console.log(\r\n    \"%c 👨‍👩‍👧‍👧: fetchUser -> user \",\r\n    \"font-size:16px;background-color:#530360;color:white;\",\r\n    user\r\n  );\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\"http://localhost:9000/hook/\" + user)\r\n      .then((response) => {\r\n        console.log(\r\n          \"%c 🍿: fetchUser -> response \",\r\n          \"font-size:16px;background-color:#c1eed7;color:black;\",\r\n          response\r\n        );\r\n        const user = response.data;\r\n        console.log(\r\n          \"%c 🇮🇹: fetchUser -> user \",\r\n          \"font-size:16px;background-color:#c7643d;color:white;\",\r\n          user\r\n        );\r\n        dispatch(fetchUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\nexport const fetchSearchedUser = (searchTerm, offset) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\r\n        \"http://localhost:9000/hook/users/search/\" +\r\n          searchTerm +\r\n          \"/?offset=\" +\r\n          offset\r\n      )\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(fetchUserSuccess(user.slice, user.totalPages));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchAllUsers = (offset, limit) => {\r\n  console.log(\r\n    \"%c 🤸‍♀️: fetchAllUsers -> offset, limit \",\r\n    \"font-size:16px;background-color:#937282;color:white;\",\r\n    offset,\r\n    limit\r\n  );\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(\r\n        \"http://localhost:9000/hook/user/?offset=\" + offset + \"&limit=\" + limit\r\n      )\r\n      .then((response) => {\r\n        console.log(\r\n          \"%c 📜: fetchAllUsers -> response \",\r\n          \"font-size:16px;background-color:#0484d8;color:white;\",\r\n          response\r\n        );\r\n        const user = response.data;\r\n        console.log(\r\n          \"%c ㊙️: fetchAllUsers ->  user \",\r\n          \"font-size:16px;background-color:#d81a08;color:white;\",\r\n          user\r\n        );\r\n\r\n        dispatch(fetchUserSuccess(user.slice, user.page));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n  // } catch (err) {\r\n  // }\r\n  // debugger;\r\n};\r\nexport const fetchUsers = () => {\r\n  //\r\n  return (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    axios\r\n      .get(`${usersUrl}/hook/users`)\r\n      .then((response) => {\r\n        const user = response.data;\r\n        console.log(\r\n          \"%c 📦: fetchUsers -> user \",\r\n          \"font-size:16px;background-color:#bd3b8f;color:white;\",\r\n          user\r\n        );\r\n        dispatch(fetchUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error));\r\n      });\r\n  };\r\n};\r\n// export const fetchUsers = (offset, limit) => {\r\n//\r\n//   // const offset = 1;\r\n//   // const limit = 5;\r\n//   return (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     try {\r\n//       const response = axios.get(\r\n//         `${usersUrl}/?offset=${offset}&limit=${limit}`\r\n//       );\r\n//         \"🚀 ~ file: userAction.js ~ line 100 ~ return ~ response\",\r\n//         response\r\n//       );\r\n\r\n//       dispatch(fetchUserSuccess(response.data));\r\n//     } catch (error) {\r\n//       dispatch(fetchUserFailure(error));\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export const insertUsers = (user) => {\r\n//   return (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     axios\r\n//       .post(\"http://localhost:9000/hook\", user)\r\n//       .then((response) => {\r\n//         const users = response.data;\r\n//           \"🚀 ~ file: userAction.js ~ line 46 ~ .then ~ users\",\r\n//           users\r\n//         );\r\n//         dispatch(fetchUserSuccess(users));\r\n//       })\r\n//       .catch((error) => {\r\n//         dispatch(fetchUserFailure(error.msg));\r\n//       });\r\n//   };\r\n// };\r\nexport const insertUsers = async (user) => {\r\n  return await axios.post(`${usersUrl}`, user);\r\n  // .then((response) => {\r\n  //     \"file: userAction.js ~ line 58 ~ returnawaitaxios.post ~ response\",\r\n  //     response\r\n  //   );\r\n  // })\r\n  // .catch((error) => {\r\n  // });\r\n};\r\n// export const updateUsers = async (id, user) => {\r\n\r\n//   return await axios\r\n//     .put(`${usersUrl}/${id}`, user)\r\n// };\r\n// export const updateUsers = (id, user) => {\r\n//   return async (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     await axios\r\n//       .put(\"http://localhost:9000/hook\" + id, user)\r\n//       .then((response) => {\r\n//         const users = response.data;\r\n//         return dispatch(fetchUserSuccess(users));\r\n//       })\r\n//       .catch((error) => {\r\n//         return dispatch(fetchUserFailure(error));\r\n//       });\r\n//   };\r\n// };\r\nexport const updateUsers = (id, user) => {\r\n  console.log(\r\n    \"%c 🍍: updateUsers -> id, user \",\r\n    \"font-size:16px;background-color:#489fd3;color:white;\",\r\n    id,\r\n    user\r\n  );\r\n  return async (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    try {\r\n      const response = await axios.put(\r\n        \"http://localhost:9000/hook/\" + id,\r\n        user\r\n      );\r\n      console.log(\r\n        \"%c 🚜: updateUsers -> response  \",\r\n        \"font-size:16px;background-color:#e61faa;color:white;\",\r\n        response\r\n      );\r\n\r\n      const updatedData = response.data;\r\n      console.log(\r\n        \"%c ㊙️: fetchAllUsers ->  user \",\r\n        \"font-size:16px;background-color:#d81a08;color:white;\",\r\n        user\r\n      );\r\n      dispatch(fetchUserSuccess(updatedData.slice, updatedData.page));\r\n    } catch (error) {\r\n      console.log(\r\n        \"%c 🏢: updateUsers -> error \",\r\n        \"font-size:16px;background-color:#245769;color:white;\",\r\n        error\r\n      );\r\n      dispatch(fetchUserFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUsers = async (id) => {\r\n  return await axios.delete(`${usersUrl}/${id}`);\r\n};\r\n// export const deleteUsers = (id) => {\r\n//   return (dispatch) => {\r\n//     dispatch(fetchUserRequest());\r\n//     axios\r\n//       .delete(`${usersUrl}/${id}`)\r\n//       .get(\"http://localhost:9000/hook\")\r\n//       .then((response) => {\r\n//         // response.data is the users\r\n//         const users = response.data;\r\n//         dispatch(fetchUserSuccess(users));\r\n//       })\r\n//       .catch((error) => {\r\n//         // error.message is the error message\r\n//         dispatch(fetchUserFailure(error.message));\r\n//       });\r\n//   };\r\n// };\r\nexport const fetchUserRequest = () => {\r\n  return {\r\n    type: FETCH_USER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = (users, pages) => {\r\n  return {\r\n    type: FETCH_USER_SUCCESS,\r\n    payload: users,\r\n    totalPage: pages,\r\n  };\r\n};\r\nexport const fetchUserFailure = (error) => {\r\n  return {\r\n    type: FETCH_USER_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}