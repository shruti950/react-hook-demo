{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainerUpdate.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser, updateUsers } from \"../redux\"; // import React from 'react'\n\nimport { useLocation, useParams, Redirect } from \"react-router-dom\"; // const location = useLocation();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  age: \"\",\n  id: \"\"\n}; // function UserContainerUpdate({ userData, fetchUser }, props) {\n//   const [usera, setUser] = useState(initialState);\n//   const { name, age } = usera;\n//   const { id } = useParams();\n//   console.log(\n//     \"params DAta\",\n//     useParams(),\n//     userData,\n//     userData.name,\n//     userData.age\n//   );\n//   useEffect(() => {\n//     fetchUser(id);\n//   }, []);\n//   // fetchUser = async () => {\n//   //   // const response = await getUsers(id);\n//   //   setUser(userData);\n//   // };\n//   // const history = useHistory();\n//   console.log(\"params DAta\", useParams(), userData.name, userData.age);\n//   const onValueChange = (e) => {\n//     // console.log(e.target.value);\n//     setUser({ ...usera, [e.target.name]: e.target.value });\n//   };\n//   const onSubmitData = (e) => {\n//     // e.preventDefault();\n//     props.updateUsers(id, usera);\n//     console.log(\"inside update state\", id, name, age);\n//   };\n//   console.log(\"out side update state\", id, name, age);\n//   console.log(\"user======>\", usera.name, usera.age);\n//   return (\n// <div className=\"container \">\n//   {userData.map((user) => {\n//     console.log(\"map user ==========>\", user);\n//     return (\n//       <p key={user._id}>\n//         <form onSubmit={onSubmitData}>\n//           <div className=\"form-group text-left\">\n//             <label>Name:</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               className=\"form-control\"\n//               defaultValue={user.name}\n//               value={usera.name}\n//               onChange={onValueChange}\n//             />\n//           </div>\n//           <div className=\"form-group text-left\">\n//             <label>Age:</label>\n//             <input\n//               type=\"text\"\n//               name=\"age\"\n//               className=\"form-control\"\n//               defaultValue={user.age}\n//               value={usera.age}\n//               onChange={onValueChange}\n//             />\n//           </div>\n//           <button\n//             className=\"btn btn-primary\"\n//             // onClick={() => setModalIsOpen(false)}\n//             type=\"submit\"\n//           >\n//             Update\n//           </button>\n//         </form>\n//       </p>\n//     );\n//   })}\n// </div>\n//   );\n// }\n// export default UserContainerUpdate\n\nclass UserContainerUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.updateUsers(this.state);\n    };\n\n    this.state = {\n      name: \"\",\n      age: \"\"\n    };\n  } // getUser = (name, age) => {\n  //   this.setState({\n  //     name: name,\n  //     age: age,\n  //   });\n  // };\n\n\n  render() {\n    const {\n      name,\n      age\n    } = this.props;\n    const {\n      id\n    } = useParams();\n    console.log(\"user id\", id);\n    console.log(\"name\" + this.props.name + \"age\" + this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: userData.map(user => {\n        console.log(\"map user ==========>\", user);\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmitData,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                className: \"form-control\",\n                defaultValue: user.name,\n                value: usera.name,\n                onChange: onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"age\",\n                className: \"form-control\",\n                defaultValue: user.age,\n                value: usera.age,\n                onChange: onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\" // onClick={() => setModalIsOpen(false)}\n              ,\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    userData: state.users\n  };\n};\n\nexport default connect(mapStateToProps, // mapDispatchToProps{}\n{\n  updateUsers,\n  fetchUser\n})(UserContainerUpdate);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainerUpdate.js"],"names":["React","Component","useState","useEffect","connect","fetchUser","updateUsers","useLocation","useParams","Redirect","initialState","name","age","id","UserContainerUpdate","constructor","props","changeHandler","e","setState","target","value","submitHandler","preventDefault","console","log","state","render","userData","map","user","onSubmitData","usera","onValueChange","_id","mapStateToProps","users"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser, updateUsers } from \"../redux\";\r\n// import React from 'react'\r\nimport { useLocation, useParams, Redirect } from \"react-router-dom\";\r\n// const location = useLocation();\r\nconst initialState = {\r\n  name: \"\",\r\n  age: \"\",\r\n  id: \"\",\r\n};\r\n// function UserContainerUpdate({ userData, fetchUser }, props) {\r\n//   const [usera, setUser] = useState(initialState);\r\n//   const { name, age } = usera;\r\n//   const { id } = useParams();\r\n//   console.log(\r\n//     \"params DAta\",\r\n//     useParams(),\r\n//     userData,\r\n//     userData.name,\r\n//     userData.age\r\n//   );\r\n//   useEffect(() => {\r\n//     fetchUser(id);\r\n//   }, []);\r\n\r\n//   // fetchUser = async () => {\r\n//   //   // const response = await getUsers(id);\r\n//   //   setUser(userData);\r\n//   // };\r\n\r\n//   // const history = useHistory();\r\n//   console.log(\"params DAta\", useParams(), userData.name, userData.age);\r\n//   const onValueChange = (e) => {\r\n//     // console.log(e.target.value);\r\n//     setUser({ ...usera, [e.target.name]: e.target.value });\r\n//   };\r\n//   const onSubmitData = (e) => {\r\n//     // e.preventDefault();\r\n//     props.updateUsers(id, usera);\r\n//     console.log(\"inside update state\", id, name, age);\r\n//   };\r\n//   console.log(\"out side update state\", id, name, age);\r\n\r\n//   console.log(\"user======>\", usera.name, usera.age);\r\n//   return (\r\n// <div className=\"container \">\r\n//   {userData.map((user) => {\r\n//     console.log(\"map user ==========>\", user);\r\n//     return (\r\n//       <p key={user._id}>\r\n//         <form onSubmit={onSubmitData}>\r\n//           <div className=\"form-group text-left\">\r\n//             <label>Name:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               className=\"form-control\"\r\n//               defaultValue={user.name}\r\n//               value={usera.name}\r\n//               onChange={onValueChange}\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group text-left\">\r\n//             <label>Age:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"age\"\r\n//               className=\"form-control\"\r\n//               defaultValue={user.age}\r\n//               value={usera.age}\r\n//               onChange={onValueChange}\r\n//             />\r\n//           </div>\r\n//           <button\r\n//             className=\"btn btn-primary\"\r\n//             // onClick={() => setModalIsOpen(false)}\r\n//             type=\"submit\"\r\n//           >\r\n//             Update\r\n//           </button>\r\n//         </form>\r\n//       </p>\r\n//     );\r\n//   })}\r\n// </div>\r\n//   );\r\n// }\r\n// export default UserContainerUpdate\r\nclass UserContainerUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      age: \"\",\r\n    };\r\n  }\r\n\r\n  // getUser = (name, age) => {\r\n  //   this.setState({\r\n  //     name: name,\r\n  //     age: age,\r\n  //   });\r\n  // };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.updateUsers(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, age } = this.props;\r\n    const { id } = useParams();\r\n    console.log(\"user id\", id);\r\n    console.log(\"name\" + this.props.name + \"age\" + this.props);\r\n    return (\r\n      <div className=\"container \">\r\n        {userData.map((user) => {\r\n          console.log(\"map user ==========>\", user);\r\n          return (\r\n            <p key={user._id}>\r\n              <form onSubmit={onSubmitData}>\r\n                <div className=\"form-group text-left\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    defaultValue={user.name}\r\n                    value={usera.name}\r\n                    onChange={onValueChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                  <label>Age:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"age\"\r\n                    className=\"form-control\"\r\n                    defaultValue={user.age}\r\n                    value={usera.age}\r\n                    onChange={onValueChange}\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  // onClick={() => setModalIsOpen(false)}\r\n                  type=\"submit\"\r\n                >\r\n                  Update\r\n                </button>\r\n              </form>\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    userData: state.users,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps{}\r\n  { updateUsers, fetchUser }\r\n)(UserContainerUpdate);\r\n"]},"metadata":{},"sourceType":"module"}