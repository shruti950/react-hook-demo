{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainerUpdate.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\nimport { fetchUser, updateUsers } from \"../redux\"; // import React from 'react'\n// import { useParams, useHistory, withRouter } from \"react-router-dom\";\n\nimport HeaderUser from \"./HeaderUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserContainerUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = e => {\n      const name = e.target.value;\n      this.setState(prevState => ({\n        user: { ...prevState.user,\n          name: name\n        }\n      }));\n      console.log(\"user==>\", this.state.user);\n    };\n\n    this.onChangeAge = e => {\n      const age = e.target.value;\n      this.setState(prevState => ({\n        user: { ...prevState.user,\n          age: age\n        }\n      }));\n      console.log(\"user==>\", this.state.user);\n    };\n\n    this.onChangeEmail = e => {\n      const email = e.target.value;\n      this.setState(prevState => ({\n        user: { ...prevState.user,\n          email: email\n        }\n      }));\n      console.log(\"user==>\", this.state.user);\n    };\n\n    this.editUserDetails = async e => {\n      // e.preventDefault();\n      const {\n        user,\n        id,\n        users\n      } = this.state;\n      const {\n        updateUsers,\n        userData,\n        history\n      } = this.props; // console.log(\"in else part\", user);\n\n      console.log(\"users vaman\", users);\n\n      if (!user.name || !user.age || !user.email) {\n        if (!user.name) {\n          user.name = userData[0].name;\n          console.log(\"user name\", user.name);\n        }\n\n        if (!user.age) {\n          user.age = userData[0].age;\n          console.log(\"user age\", user);\n        }\n\n        if (!user.email) {\n          user.email = userData[0].email;\n          console.log(\"user in if \", user);\n          await updateUsers(id, user);\n          history.push(\"/home\");\n          return;\n        }\n      } else {\n        console.log(\"in else part\", user);\n        await updateUsers(id, user);\n        history.push(\"/home\");\n        return;\n      }\n    };\n\n    this.state = {\n      user: {\n        name: \"\",\n        age: \"\",\n        email: \"\"\n      },\n      users: [],\n      id: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"loading data in did\", this.props.loadingData); // if (this.props.loadingData === false) {\n\n    const id = this.props.match.params.id;\n    this.props.fetchUser(id);\n    console.log(\"vaman this.props.userData\", this.props.userData);\n    this.setState({\n      users: this.props.userData,\n      id: id\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"next props\", nextProps); // Any time props.email changes, update state.\n\n    if (nextProps !== this.props) {\n      this.setState({\n        users: nextProps.userData\n      });\n      console.log(\"users in will receive props \", this.state.users, nextProps.userData);\n    }\n  } // }\n  // componentWillMount() {\n  //   if (this.props.loadingData === false) {\n  //     console.log(\" true for loading data\");\n  //   } else {\n  //     console.log(\"false\");\n  //   }\n  //   console.log(\n  //     \"loading data in will\",\n  //     this.props.loadingData,\n  //     this.props.loadingData === false\n  //   );\n  //   if (this.props.loadingData === false) {\n  //     const id = this.props.match.params.id;\n  //     // this.setState({ id: id });\n  //     this.props.fetchUser(id);\n  //     console.log(\n  //       \"userData in component will mount\",\n  //       this.props.match.params.id,\n  //       this.props.userData,\n  //       // this.props.id,\n  //       this.props,\n  //       this.props.fetchUser(id)\n  //     );\n  //     console.log(\n  //       \"userData in component will mount id\",\n  //       this.props.match.params.id\n  //     );\n  //     this.setState({ users: this.props.userData, id: id });\n  //     console.log(\n  //       \"users in component will mount\",\n  //       this.state.id,\n  //       this.state.users\n  //     );\n  //     // this.getData();\n  //   }\n  // }\n\n\n  render() {\n    let {\n      userData,\n      updateUsers\n    } = this.props;\n    let id = this.props.match.params.id;\n    const {\n      user,\n      users\n    } = this.state;\n    console.log(\"users.map1212\", users);\n    console.log(\"usersusers\", users);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), (users === null || users === void 0 ? void 0 : users.length) > 0 && (users === null || users === void 0 ? void 0 : users.map(getuser => {\n          console.log(\"getuser1212\", getuser);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  className: \"form-control\",\n                  defaultValue: getuser.name // value={user.name}\n                  ,\n                  onChange: this.onChangeName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Age:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"age\",\n                  className: \"form-control\",\n                  defaultValue: getuser.age // value={user.age}\n                  ,\n                  onChange: this.onChangeAge\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  className: \"form-control\",\n                  defaultValue: getuser.email,\n                  onChange: this.onChangeEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-left\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `/home`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    onClick: () => this.editUserDetails(),\n                    type: \"submit\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)\n          }, getuser._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this);\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state vaman\", state);\n  return {\n    userData: state.users,\n    loadingData: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUser: id => dispatch(fetchUser(id)),\n    updateUsers: (id, user) => dispatch(updateUsers(id, user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainerUpdate);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainerUpdate.js"],"names":["React","Component","connect","BrowserRouter","Router","Link","Redirect","fetchUser","updateUsers","HeaderUser","UserContainerUpdate","constructor","props","onChangeName","e","name","target","value","setState","prevState","user","console","log","state","onChangeAge","age","onChangeEmail","email","editUserDetails","id","users","userData","history","push","componentDidMount","loadingData","match","params","componentWillReceiveProps","nextProps","render","length","map","getuser","pathname","_id","mapStateToProps","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\nimport { fetchUser, updateUsers } from \"../redux\";\r\n// import React from 'react'\r\n// import { useParams, useHistory, withRouter } from \"react-router-dom\";\r\nimport HeaderUser from \"./HeaderUser\";\r\n\r\nclass UserContainerUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: \"\",\r\n        age: \"\",\r\n        email: \"\",\r\n      },\r\n      users: [],\r\n      id: \"\",\r\n    };\r\n  }\r\n  onChangeName = (e) => {\r\n    const name = e.target.value;\r\n    this.setState((prevState) => ({\r\n      user: { ...prevState.user, name: name },\r\n    }));\r\n    console.log(\"user==>\", this.state.user);\r\n  };\r\n  onChangeAge = (e) => {\r\n    const age = e.target.value;\r\n    this.setState((prevState) => ({\r\n      user: { ...prevState.user, age: age },\r\n    }));\r\n    console.log(\"user==>\", this.state.user);\r\n  };\r\n  onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    this.setState((prevState) => ({\r\n      user: { ...prevState.user, email: email },\r\n    }));\r\n    console.log(\"user==>\", this.state.user);\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"loading data in did\", this.props.loadingData);\r\n\r\n    // if (this.props.loadingData === false) {\r\n    const id = this.props.match.params.id;\r\n    this.props.fetchUser(id);\r\n    console.log(\"vaman this.props.userData\", this.props.userData);\r\n    this.setState({ users: this.props.userData, id: id });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"next props\", nextProps);\r\n    // Any time props.email changes, update state.\r\n    if (nextProps !== this.props) {\r\n      this.setState({\r\n        users: nextProps.userData,\r\n      });\r\n      console.log(\r\n        \"users in will receive props \",\r\n        this.state.users,\r\n        nextProps.userData\r\n      );\r\n    }\r\n  }\r\n\r\n  // }\r\n  // componentWillMount() {\r\n  //   if (this.props.loadingData === false) {\r\n  //     console.log(\" true for loading data\");\r\n  //   } else {\r\n  //     console.log(\"false\");\r\n  //   }\r\n  //   console.log(\r\n  //     \"loading data in will\",\r\n  //     this.props.loadingData,\r\n  //     this.props.loadingData === false\r\n  //   );\r\n  //   if (this.props.loadingData === false) {\r\n  //     const id = this.props.match.params.id;\r\n  //     // this.setState({ id: id });\r\n  //     this.props.fetchUser(id);\r\n  //     console.log(\r\n  //       \"userData in component will mount\",\r\n  //       this.props.match.params.id,\r\n  //       this.props.userData,\r\n  //       // this.props.id,\r\n  //       this.props,\r\n  //       this.props.fetchUser(id)\r\n  //     );\r\n  //     console.log(\r\n  //       \"userData in component will mount id\",\r\n  //       this.props.match.params.id\r\n  //     );\r\n  //     this.setState({ users: this.props.userData, id: id });\r\n  //     console.log(\r\n  //       \"users in component will mount\",\r\n  //       this.state.id,\r\n  //       this.state.users\r\n  //     );\r\n  //     // this.getData();\r\n  //   }\r\n  // }\r\n  editUserDetails = async (e) => {\r\n    // e.preventDefault();\r\n    const { user, id, users } = this.state;\r\n    const { updateUsers, userData, history } = this.props;\r\n    // console.log(\"in else part\", user);\r\n    console.log(\"users vaman\", users);\r\n    if (!user.name || !user.age || !user.email) {\r\n      if (!user.name) {\r\n        user.name = userData[0].name;\r\n        console.log(\"user name\", user.name);\r\n      }\r\n      if (!user.age) {\r\n        user.age = userData[0].age;\r\n        console.log(\"user age\", user);\r\n      }\r\n      if (!user.email) {\r\n        user.email = userData[0].email;\r\n        console.log(\"user in if \", user);\r\n        await updateUsers(id, user);\r\n        history.push(\"/home\");\r\n        return;\r\n      }\r\n    } else {\r\n      console.log(\"in else part\", user);\r\n      await updateUsers(id, user);\r\n      history.push(\"/home\");\r\n      return;\r\n    }\r\n  };\r\n  render() {\r\n    let { userData, updateUsers } = this.props;\r\n    let id = this.props.match.params.id;\r\n    const { user, users } = this.state;\r\n    console.log(\"users.map1212\", users);\r\n    console.log(\"usersusers\", users);\r\n    return (\r\n      <div className=\"container \">\r\n        <Router>\r\n          <HeaderUser />\r\n          {users?.length > 0 &&\r\n            users?.map((getuser) => {\r\n              console.log(\"getuser1212\", getuser);\r\n              return (\r\n                <div key={getuser._id}>\r\n                  <form>\r\n                    <div className=\"form-group text-left\">\r\n                      <label>Name:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        defaultValue={getuser.name}\r\n                        // value={user.name}\r\n                        onChange={this.onChangeName}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                      <label>Age:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"age\"\r\n                        className=\"form-control\"\r\n                        defaultValue={getuser.age}\r\n                        // value={user.age}\r\n                        onChange={this.onChangeAge}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                      <label>Email:</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        defaultValue={getuser.email}\r\n                        onChange={this.onChangeEmail}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                      <Link to={{ pathname: `/home` }}>\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.editUserDetails()}\r\n                          type=\"submit\"\r\n                        >\r\n                          Update\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              );\r\n            })}\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state vaman\", state);\r\n  return {\r\n    userData: state.users,\r\n    loadingData: state.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUser: (id) => dispatch(fetchUser(id)),\r\n    updateUsers: (id, user) => dispatch(updateUsers(id, user)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserContainerUpdate);\r\n"]},"metadata":{},"sourceType":"module"}