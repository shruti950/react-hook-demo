{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apex\\\\project-demo\\\\src\\\\components\\\\UserContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUsers, fetchUsers } from \"../redux\"; // import UserContainerForm from \"./UserContainerForm\";\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// import childComponent from \"./UserContainerUpdate\";\n// import UserContainerUpdate from \"./UserContainerUpdate\";\n// import SearchField from \"react-search-field\";\n// // import SearchBar from \"./SearchBar\";\n// // import SearchPage from \"./searchPage\";\n// import axios from \"axios\";\n\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      this.setState({\n        offset: selectedPage + 1\n      }, () => {\n        this.getData();\n      }); // setOffset(selectedPage + 1);\n    };\n\n    this.addUser = async () => {\n      this.props.history.push(\"/adduser\");\n      this.refreshPage(); // <UserContainerForm />;\n    };\n\n    this.deleteUserData = async (id, name) => {\n      if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n        await deleteUsers(id);\n      } else {\n        this.props.history.push(\"/home\");\n      }\n\n      this.props.fetchUsers();\n      this.refreshPage();\n    };\n\n    this.editUserData = async id => {\n      this.props.history.push(`/updateuser/${id}`);\n      this.refreshPage();\n    };\n\n    this.refreshPage = () => {\n      window.location.reload();\n    };\n\n    this.getData = async () => {\n      const {\n        loadingData\n      } = this.props;\n      console.log(\"loading in getDAta\", loadingData); // if (loadingData === false) {\n\n      const data = this.props.userData || [];\n      console.log(\"set pagination here.....\", data);\n      const indexOfLastTodo = this.state.offset * this.state.perPage;\n      const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\n      const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n      console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n      this.setState({\n        users: slice\n      }); // setUsers(slice);\n\n      console.log(\"users in getData\", this.state.users);\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage)\n      }); // setPageCount(Math.ceil(data.length / perPage));\n      // }\n    };\n\n    this.filterContent = (users, searchTerm) => {\n      console.log(\"searchterm\", searchTerm);\n\n      if (searchTerm === \"\") {\n        console.log(\"searchterm empty\");\n        this.getData();\n      } else {\n        const result = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n        console.log(\"result\", result);\n        this.setState({\n          users: result\n        }); // this.getData();\n      }\n    };\n\n    this.onValueChange = e => {\n      // console.log(e.currentTarget.value);\n      const searchTerm = e.currentTarget.value;\n      this.props.fetchUsers(); // axios.get(\"http://localhost:9000/\").then((response) => {\n\n      console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", this.state.offset);\n\n      if (this.props.userData) {\n        console.log(\"users for search\", this.props.userData);\n        this.filterContent(this.props.userData, searchTerm);\n      } // });\n\n    };\n\n    this.state = {\n      users: [],\n      offset: 0,\n      data: [],\n      perPage: 5,\n      pageCount: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      loadingData\n    } = this.props;\n    this.props.fetchUsers();\n    console.log(\"userData\", this.props.userData);\n    this.setState({\n      users: this.props.userData,\n      offset: 1\n    });\n    console.log(\"users in component did mount\", this.state.users, this.state.offset);\n    this.setState({\n      offset: 1\n    });\n    console.log(\"offset\", this.state.offset); // if (loadingData === false) {\n\n    this.getData(); // }\n  }\n\n  componentWillMount() {\n    // this.refreshPage();\n    const {\n      loadingData\n    } = this.props;\n\n    if (loadingData === false) {\n      this.props.fetchUsers();\n      console.log(\"userData\", this.props.userData);\n      this.setState({\n        users: this.props.userData,\n        offset: 1\n      });\n      console.log(\"users in component will mount\", this.state.users); // this.getData();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container text-right\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/adduser`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addUser,\n              className: \"btn btn-primary btn-md m-1  \",\n              children: \"ADD USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mt-mb-10 text-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 mt-mb-10  justify-content-left ui icon input\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-input-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                // ref={inputEl}\n                type: \"search \",\n                placeholder: \"Search Users\",\n                className: \"mt-mb-7 form-control  \" // v\n                ,\n                name: \"searchTerm\",\n                onChange: this.onValueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" container  \",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table mt-5 table-striped justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-left\",\n              children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: `/updateuser/${user._id}`\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n                      onClick: () => this.editUserData(user._id),\n                      className: \"btn btn-success btn-sm m-1  \" // component={Link}\n                      // to={`/updateuser/${user._id}`}\n                      ,\n                      children: \"UPDATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.deleteUserData(user._id, user.name);\n                    },\n                    className: \"btn btn-danger btn-sm m-1 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-trash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 25\n                    }, this), \"DELETE\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n            previousLabel: \"prev\",\n            nextLabel: \"next\",\n            breakLabel: \"...\",\n            breakClassName: \"break-me\",\n            pageCount: this.state.pageCount,\n            marginPagesDisplayed: 2,\n            pageRangeDisplayed: 5,\n            onPageChange: this.handlePageClick,\n            containerClassName: \"pagination\",\n            subContainerClassName: \"pages pagination\",\n            activeClassName: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => {\n//   console.log(\"state===>\", state.users, state.loading);\n//   const { users, loading } = state;\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\n//   return {\n//     userData: users,\n//     loadingData: loading,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\n//     fetchUsers: () => dispatch(fetchUsers()),\n//   };\n// };\n\n\nexport default connect(state => (console.log(\"state\", state), {\n  userData: state.users,\n  loadingData: state.loading\n}), {\n  fetchUsers\n})(UserContainer); // import React, { Component, useEffect, useState, useRef } from \"react\";\n// import { connect } from \"react-redux\";\n// import { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\n// // import UserContainerForm from \"./UserContainerForm\";\n// // import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// // import childComponent from \"./UserContainerUpdate\";\n// // import UserContainerUpdate from \"./UserContainerUpdate\";\n// // import SearchField from \"react-search-field\";\n// // // import SearchBar from \"./SearchBar\";\n// // // import SearchPage from \"./searchPage\";\n// // import axios from \"axios\";\n// import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\n// import ReactPaginate from \"react-paginate\";\n// const UserContainer = ({ fetchUsers, userData, loadingData }) => {\n//   const [users, setUsers] = useState([]);\n//   const [offset, setOffset] = useState(0);\n//   const [data, setData] = useState([]);\n//   const [perPage] = useState(5);\n//   const [pageCount, setPageCount] = useState(0);\n//   // const [user, setUser] = useState([]);\n//   const inputEl = useRef(\"\");\n//   // const { name, age, email } = user;\n//   const history = useHistory();\n//   useEffect(() => {\n//     if (loadingData === false) {\n//       console.log(\"fetch all users............\");\n//       fetchUsers();\n//       const slice = userData.slice(0, 5);\n//       // console.log(\"users ans slice\", userData, slice);\n//       setUserData(slice);\n//       console.log(\"Data in useeffect\", data);\n//     }\n//   }, []);\n//   const setUserData = (udata) => {\n//     // if (use.length === 0) {\n//     setUsers(udata);\n//     console.log(\"users in setuserDAta\", data, udata);\n//     setOffset(1);\n//     // }\n//   };\n//   useEffect(() => {\n//     if (loadingData === false) {\n//       getData();\n//     }\n//   }, [offset]);\n//   const deleteUserData = async (id, name) => {\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\n//       await deleteUsers(id);\n//     } else {\n//       history.push(\"/home\");\n//     }\n//     fetchUsers();\n//     getData();\n//   };\n//   const getData = async () => {\n//     const data = userData || [];\n//     console.log(\"set pagination here.....\", data);\n//     // const newOffset = offset > 0 ? offset - 1 : 0;\n//     // console.log(\"newOffset :: \", newOffset);\n//     const indexOfLastTodo = offset * perPage;\n//     const indexOfFirstTodo = indexOfLastTodo - perPage;\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\n//     console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\n//     setUsers(slice);\n//     setPageCount(Math.ceil(data.length / perPage));\n//   };\n//   const handlePageClick = (e) => {\n//     const selectedPage = e.selected;\n//     setOffset(selectedPage + 1);\n//   };\n//   const addUser = async () => {\n//     history.push(\"/adduser\");\n//     // <UserContainerForm />;\n//   };\n//   const filterContent = (users, searchTerm) => {\n//     const result = users.filter((user) =>\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     console.log(\"result\", result);\n//     setUsers(result);\n//   };\n//   const onValueChange = (e) => {\n//     // console.log(e.currentTarget.value);\n//     const searchTerm = e.currentTarget.value;\n//     fetchUsers();\n//     // axios.get(\"http://localhost:9000/\").then((response) => {\n//     console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\n//     if (userData) {\n//       console.log(\"users for search\", userData);\n//       filterContent(userData, searchTerm);\n//     }\n//     // });\n//   };\n//   return (\n//     <div>\n//       <Router>\n//         <h2>Users List</h2>\n//         <div className=\"container text-right\">\n//           <Link to={{ pathname: `/adduser` }}>\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\n//               ADD USER\n//             </button>\n//           </Link>\n//         </div>\n//         <div className=\"container mt-mb-10 text-left\">\n//           <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\n//             {/* <SearchPage /> */}\n//             <input\n//               // ref={inputEl}\n//               type=\"search \"\n//               placeholder=\"Search Users\"\n//               className=\"mt-mb-7 form-control  \"\n//               // v\n//               name=\"searchTerm\"\n//               onChange={onValueChange}\n//             />\n//           </div>\n//         </div>\n//         <div className=\" container \">\n//           <table className=\"table mt-5 table-striped justify-content-center\">\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Age</th>\n//                 <th>Email</th>\n//                 <th>Action</th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"text-left\">\n//               {users.map((user) => (\n//                 <tr key={user._id}>\n//                   <td>{user.name}</td>\n//                   <td>{user.age}</td>\n//                   <td>{user.email}</td>\n//                   <td>\n//                     <Link\n//                       to={{\n//                         pathname: `/updateuser/${user._id}`,\n//                       }}\n//                     >\n//                       <button\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\n//                         className=\"btn btn-success btn-sm m-1  \"\n//                         // component={Link}\n//                         // to={`/updateuser/${user._id}`}\n//                       >\n//                         UPDATE\n//                       </button>\n//                     </Link>\n//                     <button\n//                       onClick={() => {\n//                         deleteUserData(user._id, user.name);\n//                       }}\n//                       className=\"btn btn-danger btn-sm m-1 \"\n//                     >\n//                       DELETE\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//           <ReactPaginate\n//             previousLabel={\"prev\"}\n//             nextLabel={\"next\"}\n//             breakLabel={\"...\"}\n//             breakClassName={\"break-me\"}\n//             pageCount={pageCount}\n//             marginPagesDisplayed={2}\n//             pageRangeDisplayed={5}\n//             onPageChange={handlePageClick}\n//             containerClassName={\"pagination\"}\n//             subContainerClassName={\"pages pagination\"}\n//             activeClassName={\"active\"}\n//           />\n//         </div>\n//       </Router>\n//     </div>\n//   );\n// };\n// const mapStateToProps = (state) => {\n//   console.log(\"state===>\", state.users, state.loading);\n//   const { users, loading } = state;\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\n//   return {\n//     userData: users,\n//     loadingData: loading,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchUsers: () => dispatch(fetchUsers()),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","map":{"version":3,"sources":["C:/Users/apex/project-demo/src/components/UserContainer.js"],"names":["React","Component","connect","deleteUsers","fetchUsers","BrowserRouter","Router","Link","Redirect","ReactPaginate","UserContainer","constructor","props","handlePageClick","e","selectedPage","selected","setState","offset","getData","addUser","history","push","refreshPage","deleteUserData","id","name","window","confirm","editUserData","location","reload","loadingData","console","log","data","userData","indexOfLastTodo","state","perPage","indexOfFirstTodo","slice","users","pageCount","Math","ceil","length","filterContent","searchTerm","result","filter","user","toLowerCase","includes","onValueChange","currentTarget","value","componentDidMount","componentWillMount","render","pathname","map","age","email","_id","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,UAAxC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,EAAwCC,QAAxC,QAAwD,kBAAxD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AACA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyCnBC,eAzCmB,GAyCAC,CAAD,IAAO;AACvB,YAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEH,YAAY,GAAG;AAAzB,OAAd,EAA4C,MAAM;AAChD,aAAKI,OAAL;AACD,OAFD,EAFuB,CAKvB;AACD,KA/CkB;;AAAA,SAgDnBC,OAhDmB,GAgDT,YAAY;AACpB,WAAKR,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACA,WAAKC,WAAL,GAFoB,CAGpB;AACD,KApDkB;;AAAA,SAqDnBC,cArDmB,GAqDF,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AACnC,UAAIC,MAAM,CAACC,OAAP,CAAgB,mCAAkCF,IAAK,GAAvD,CAAJ,EAAgE;AAC9D,cAAMvB,WAAW,CAACsB,EAAD,CAAjB;AACD,OAFD,MAEO;AACL,aAAKb,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;;AACD,WAAKV,KAAL,CAAWR,UAAX;AACA,WAAKmB,WAAL;AACD,KA7DkB;;AAAA,SA8DnBM,YA9DmB,GA8DJ,MAAOJ,EAAP,IAAc;AAC3B,WAAKb,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAyB,eAAcG,EAAG,EAA1C;AACA,WAAKF,WAAL;AACD,KAjEkB;;AAAA,SAkEnBA,WAlEmB,GAkEL,MAAM;AAClBI,MAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,KApEkB;;AAAA,SAqEnBZ,OArEmB,GAqET,YAAY;AACpB,YAAM;AAAEa,QAAAA;AAAF,UAAkB,KAAKpB,KAA7B;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,WAAlC,EAFoB,CAGpB;;AACA,YAAMG,IAAI,GAAG,KAAKvB,KAAL,CAAWwB,QAAX,IAAuB,EAApC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,IAAxC;AACA,YAAME,eAAe,GAAG,KAAKC,KAAL,CAAWpB,MAAX,GAAoB,KAAKoB,KAAL,CAAWC,OAAvD;AACA,YAAMC,gBAAgB,GAAGH,eAAe,GAAG,KAAKC,KAAL,CAAWC,OAAtD;AACA,YAAME,KAAK,GAAGN,IAAI,CAACM,KAAL,CAAWD,gBAAX,EAA6BH,eAA7B,CAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkEO,KAAlE;AACA,WAAKxB,QAAL,CAAc;AAAEyB,QAAAA,KAAK,EAAED;AAAT,OAAd,EAVoB,CAWpB;;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKI,KAAL,CAAWI,KAA3C;AACA,WAAKzB,QAAL,CAAc;AAAE0B,QAAAA,SAAS,EAAEC,IAAI,CAACC,IAAL,CAAUV,IAAI,CAACW,MAAL,GAAc,KAAKR,KAAL,CAAWC,OAAnC;AAAb,OAAd,EAboB,CAcpB;AACA;AACD,KArFkB;;AAAA,SAsFnBQ,aAtFmB,GAsFH,CAACL,KAAD,EAAQM,UAAR,KAAuB;AACrCf,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,UAA1B;;AACA,UAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrBf,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAKf,OAAL;AACD,OAHD,MAGO;AACL,cAAM8B,MAAM,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAC1BA,IAAI,CAACzB,IAAL,CAAU0B,WAAV,GAAwBC,QAAxB,CAAiCL,UAAU,CAACI,WAAX,EAAjC,CADa,CAAf;AAGAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBe,MAAtB;AACA,aAAKhC,QAAL,CAAc;AAAEyB,UAAAA,KAAK,EAAEO;AAAT,SAAd,EALK,CAML;AACD;AACF,KAnGkB;;AAAA,SAoGnBK,aApGmB,GAoGFxC,CAAD,IAAO;AACrB;AACA,YAAMkC,UAAU,GAAGlC,CAAC,CAACyC,aAAF,CAAgBC,KAAnC;AACA,WAAK5C,KAAL,CAAWR,UAAX,GAHqB,CAIrB;;AACA6B,MAAAA,OAAO,CAACC,GAAR,CACE,qDADF,EAEE,KAAKI,KAAL,CAAWpB,MAFb;;AAIA,UAAI,KAAKN,KAAL,CAAWwB,QAAf,EAAyB;AACvBH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKtB,KAAL,CAAWwB,QAA3C;AACA,aAAKW,aAAL,CAAmB,KAAKnC,KAAL,CAAWwB,QAA9B,EAAwCY,UAAxC;AACD,OAZoB,CAarB;;AACD,KAlHkB;;AAGjB,SAAKV,KAAL,GAAa;AACXI,MAAAA,KAAK,EAAE,EADI;AAEXxB,MAAAA,MAAM,EAAE,CAFG;AAGXiB,MAAAA,IAAI,EAAE,EAHK;AAIXI,MAAAA,OAAO,EAAE,CAJE;AAKXI,MAAAA,SAAS,EAAE;AALA,KAAb;AAOD;;AACDc,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEzB,MAAAA;AAAF,QAAkB,KAAKpB,KAA7B;AAEA,SAAKA,KAAL,CAAWR,UAAX;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKtB,KAAL,CAAWwB,QAAnC;AACA,SAAKnB,QAAL,CAAc;AAAEyB,MAAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWwB,QAApB;AAA8BlB,MAAAA,MAAM,EAAE;AAAtC,KAAd;AACAe,IAAAA,OAAO,CAACC,GAAR,CACE,8BADF,EAEE,KAAKI,KAAL,CAAWI,KAFb,EAGE,KAAKJ,KAAL,CAAWpB,MAHb;AAKA,SAAKD,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAd;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKI,KAAL,CAAWpB,MAAjC,EAZkB,CAalB;;AACA,SAAKC,OAAL,GAdkB,CAelB;AACD;;AACDuC,EAAAA,kBAAkB,GAAG;AACnB;AACA,UAAM;AAAE1B,MAAAA;AAAF,QAAkB,KAAKpB,KAA7B;;AACA,QAAIoB,WAAW,KAAK,KAApB,EAA2B;AACzB,WAAKpB,KAAL,CAAWR,UAAX;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKtB,KAAL,CAAWwB,QAAnC;AAEA,WAAKnB,QAAL,CAAc;AAAEyB,QAAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWwB,QAApB;AAA8BlB,QAAAA,MAAM,EAAE;AAAtC,OAAd;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,KAAKI,KAAL,CAAWI,KAAxD,EALyB,CAMzB;AACD;AACF;;AA4EDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAG;AAAb,aAAV;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,KAAKxC,OADhB;AAEE,cAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oDAAf;AAAA,mCAEE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,sCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE;AACA,gBAAA,IAAI,EAAC,SAFP;AAGE,gBAAA,WAAW,EAAC,cAHd;AAIE,gBAAA,SAAS,EAAC,wBAJZ,CAKE;AALF;AAME,gBAAA,IAAI,EAAC,YANP;AAOE,gBAAA,QAAQ,EAAE,KAAKkC;AAPjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eA6BE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,iDAAjB;AAAA,oCACE;AAAA,qCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,SAAS,EAAC,WAAjB;AAAA,wBACG,KAAKhB,KAAL,CAAWI,KAAX,CAAiBmB,GAAjB,CAAsBV,IAAD,iBACpB;AAAA,wCACE;AAAA,4BAAKA,IAAI,CAACzB;AAAV;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAKyB,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,4BAAKX,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA,0CACE,QAAC,IAAD;AACE,oBAAA,EAAE,EAAE;AACFH,sBAAAA,QAAQ,EAAG,eAAcT,IAAI,CAACa,GAAI;AADhC,qBADN;AAAA,2CAKE;AACE;AACA,sBAAA,OAAO,EAAE,MAAM,KAAKnC,YAAL,CAAkBsB,IAAI,CAACa,GAAvB,CAFjB;AAGE,sBAAA,SAAS,EAAC,8BAHZ,CAIE;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,0BADF,eAgBE;AACE,oBAAA,OAAO,EAAE,MAAM;AACb,2BAAKxC,cAAL,CAAoB2B,IAAI,CAACa,GAAzB,EAA8Bb,IAAI,CAACzB,IAAnC;AACD,qBAHH;AAIE,oBAAA,SAAS,EAAC,4BAJZ;AAAA,4CAME;AAAG,sBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,4BANF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA,iBAASyB,IAAI,CAACa,GAAd;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA+CE,QAAC,aAAD;AACE,YAAA,aAAa,EAAE,MADjB;AAEE,YAAA,SAAS,EAAE,MAFb;AAGE,YAAA,UAAU,EAAE,KAHd;AAIE,YAAA,cAAc,EAAE,UAJlB;AAKE,YAAA,SAAS,EAAE,KAAK1B,KAAL,CAAWK,SALxB;AAME,YAAA,oBAAoB,EAAE,CANxB;AAOE,YAAA,kBAAkB,EAAE,CAPtB;AAQE,YAAA,YAAY,EAAE,KAAK9B,eARrB;AASE,YAAA,kBAAkB,EAAE,YATtB;AAUE,YAAA,qBAAqB,EAAE,kBAVzB;AAWE,YAAA,eAAe,EAAE;AAXnB;AAAA;AAAA;AAAA;AAAA,kBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+FD;;AApNmC,C,CAsNtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeX,OAAO,CACnBoC,KAAD,KACEL,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB,GACA;AAAEF,EAAAA,QAAQ,EAAEE,KAAK,CAACI,KAAlB;AAAyBV,EAAAA,WAAW,EAAEM,KAAK,CAAC2B;AAA5C,CAFF,CADoB,EAKpB;AAAE7D,EAAAA;AAAF,CALoB,CAAP,CAMbM,aANa,CAAfsourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUsers, fetchUsers } from \"../redux\";\r\n// import UserContainerForm from \"./UserContainerForm\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// import childComponent from \"./UserContainerUpdate\";\r\n// import UserContainerUpdate from \"./UserContainerUpdate\";\r\n// import SearchField from \"react-search-field\";\r\n// // import SearchBar from \"./SearchBar\";\r\n// // import SearchPage from \"./searchPage\";\r\n// import axios from \"axios\";\r\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nclass UserContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      offset: 0,\r\n      data: [],\r\n      perPage: 5,\r\n      pageCount: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { loadingData } = this.props;\r\n\r\n    this.props.fetchUsers();\r\n    console.log(\"userData\", this.props.userData);\r\n    this.setState({ users: this.props.userData, offset: 1 });\r\n    console.log(\r\n      \"users in component did mount\",\r\n      this.state.users,\r\n      this.state.offset\r\n    );\r\n    this.setState({ offset: 1 });\r\n    console.log(\"offset\", this.state.offset);\r\n    // if (loadingData === false) {\r\n    this.getData();\r\n    // }\r\n  }\r\n  componentWillMount() {\r\n    // this.refreshPage();\r\n    const { loadingData } = this.props;\r\n    if (loadingData === false) {\r\n      this.props.fetchUsers();\r\n      console.log(\"userData\", this.props.userData);\r\n\r\n      this.setState({ users: this.props.userData, offset: 1 });\r\n      console.log(\"users in component will mount\", this.state.users);\r\n      // this.getData();\r\n    }\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    this.setState({ offset: selectedPage + 1 }, () => {\r\n      this.getData();\r\n    });\r\n    // setOffset(selectedPage + 1);\r\n  };\r\n  addUser = async () => {\r\n    this.props.history.push(\"/adduser\");\r\n    this.refreshPage();\r\n    // <UserContainerForm />;\r\n  };\r\n  deleteUserData = async (id, name) => {\r\n    if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n      await deleteUsers(id);\r\n    } else {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n    this.props.fetchUsers();\r\n    this.refreshPage();\r\n  };\r\n  editUserData = async (id) => {\r\n    this.props.history.push(`/updateuser/${id}`);\r\n    this.refreshPage();\r\n  };\r\n  refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n  getData = async () => {\r\n    const { loadingData } = this.props;\r\n    console.log(\"loading in getDAta\", loadingData);\r\n    // if (loadingData === false) {\r\n    const data = this.props.userData || [];\r\n    console.log(\"set pagination here.....\", data);\r\n    const indexOfLastTodo = this.state.offset * this.state.perPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - this.state.perPage;\r\n    const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n    console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n    this.setState({ users: slice });\r\n    // setUsers(slice);\r\n    console.log(\"users in getData\", this.state.users);\r\n    this.setState({ pageCount: Math.ceil(data.length / this.state.perPage) });\r\n    // setPageCount(Math.ceil(data.length / perPage));\r\n    // }\r\n  };\r\n  filterContent = (users, searchTerm) => {\r\n    console.log(\"searchterm\", searchTerm);\r\n    if (searchTerm === \"\") {\r\n      console.log(\"searchterm empty\");\r\n      this.getData();\r\n    } else {\r\n      const result = users.filter((user) =>\r\n        user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      console.log(\"result\", result);\r\n      this.setState({ users: result });\r\n      // this.getData();\r\n    }\r\n  };\r\n  onValueChange = (e) => {\r\n    // console.log(e.currentTarget.value);\r\n    const searchTerm = e.currentTarget.value;\r\n    this.props.fetchUsers();\r\n    // axios.get(\"http://localhost:9000/\").then((response) => {\r\n    console.log(\r\n      \"file: userContainer.js ~ line 82 ~ getData ~ offset\",\r\n      this.state.offset\r\n    );\r\n    if (this.props.userData) {\r\n      console.log(\"users for search\", this.props.userData);\r\n      this.filterContent(this.props.userData, searchTerm);\r\n    }\r\n    // });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container App\">\r\n        <Router>\r\n          <h2>Users List</h2>\r\n          <div className=\"container text-right\">\r\n            <Link to={{ pathname: `/adduser` }}>\r\n              <button\r\n                onClick={this.addUser}\r\n                className=\"btn btn-primary btn-md m-1  \"\r\n              >\r\n                ADD USER\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"container mt-mb-10 text-left\">\r\n            <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n              {/* <SearchPage /> */}\r\n              <span className=\"icon-input-btn\">\r\n                <i className=\"fa fa-search\"></i>\r\n                <input\r\n                  // ref={inputEl}\r\n                  type=\"search \"\r\n                  placeholder=\"Search Users\"\r\n                  className=\"mt-mb-7 form-control  \"\r\n                  // v\r\n                  name=\"searchTerm\"\r\n                  onChange={this.onValueChange}\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\" container  \">\r\n            <table className=\"table mt-5 table-striped justify-content-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Age</th>\r\n                  <th>Email</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-left\">\r\n                {this.state.users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.age}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/updateuser/${user._id}`,\r\n                        }}\r\n                      >\r\n                        <button\r\n                          // onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n                          onClick={() => this.editUserData(user._id)}\r\n                          className=\"btn btn-success btn-sm m-1  \"\r\n                          // component={Link}\r\n                          // to={`/updateuser/${user._id}`}\r\n                        >\r\n                          UPDATE\r\n                        </button>\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => {\r\n                          this.deleteUserData(user._id, user.name);\r\n                        }}\r\n                        className=\"btn btn-danger btn-sm m-1 \"\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                        DELETE\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state===>\", state.users, state.loading);\r\n//   const { users, loading } = state;\r\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n//   return {\r\n//     userData: users,\r\n//     loadingData: loading,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // bindActionCreators({fetchUsers: fetchUsers()}, dispatch);\r\n//     fetchUsers: () => dispatch(fetchUsers()),\r\n//   };\r\n// };\r\nexport default connect(\r\n  (state) => (\r\n    console.log(\"state\", state),\r\n    { userData: state.users, loadingData: state.loading }\r\n  ),\r\n  { fetchUsers }\r\n)(UserContainer);\r\n// import React, { Component, useEffect, useState, useRef } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { deleteUsers, fetchUsers, updateUsers } from \"../redux\";\r\n// // import UserContainerForm from \"./UserContainerForm\";\r\n// // import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// // import childComponent from \"./UserContainerUpdate\";\r\n// // import UserContainerUpdate from \"./UserContainerUpdate\";\r\n// // import SearchField from \"react-search-field\";\r\n// // // import SearchBar from \"./SearchBar\";\r\n// // // import SearchPage from \"./searchPage\";\r\n// // import axios from \"axios\";\r\n// import { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\r\n// import ReactPaginate from \"react-paginate\";\r\n// const UserContainer = ({ fetchUsers, userData, loadingData }) => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [offset, setOffset] = useState(0);\r\n//   const [data, setData] = useState([]);\r\n//   const [perPage] = useState(5);\r\n//   const [pageCount, setPageCount] = useState(0);\r\n//   // const [user, setUser] = useState([]);\r\n//   const inputEl = useRef(\"\");\r\n//   // const { name, age, email } = user;\r\n//   const history = useHistory();\r\n//   useEffect(() => {\r\n//     if (loadingData === false) {\r\n//       console.log(\"fetch all users............\");\r\n//       fetchUsers();\r\n//       const slice = userData.slice(0, 5);\r\n//       // console.log(\"users ans slice\", userData, slice);\r\n//       setUserData(slice);\r\n//       console.log(\"Data in useeffect\", data);\r\n//     }\r\n//   }, []);\r\n\r\n//   const setUserData = (udata) => {\r\n//     // if (use.length === 0) {\r\n//     setUsers(udata);\r\n//     console.log(\"users in setuserDAta\", data, udata);\r\n//     setOffset(1);\r\n//     // }\r\n//   };\r\n//   useEffect(() => {\r\n//     if (loadingData === false) {\r\n//       getData();\r\n//     }\r\n//   }, [offset]);\r\n\r\n//   const deleteUserData = async (id, name) => {\r\n//     if (window.confirm(`Are you sure you want to Delete ${name}?`)) {\r\n//       await deleteUsers(id);\r\n//     } else {\r\n//       history.push(\"/home\");\r\n//     }\r\n//     fetchUsers();\r\n//     getData();\r\n//   };\r\n//   const getData = async () => {\r\n//     const data = userData || [];\r\n//     console.log(\"set pagination here.....\", data);\r\n//     // const newOffset = offset > 0 ? offset - 1 : 0;\r\n//     // console.log(\"newOffset :: \", newOffset);\r\n//     const indexOfLastTodo = offset * perPage;\r\n//     const indexOfFirstTodo = indexOfLastTodo - perPage;\r\n//     const slice = data.slice(indexOfFirstTodo, indexOfLastTodo);\r\n//     console.log(\"file: userContainer.js ~ line 56 ~ getData ~ slice\", slice);\r\n//     setUsers(slice);\r\n//     setPageCount(Math.ceil(data.length / perPage));\r\n//   };\r\n\r\n//   const handlePageClick = (e) => {\r\n//     const selectedPage = e.selected;\r\n//     setOffset(selectedPage + 1);\r\n//   };\r\n//   const addUser = async () => {\r\n//     history.push(\"/adduser\");\r\n//     // <UserContainerForm />;\r\n//   };\r\n//   const filterContent = (users, searchTerm) => {\r\n//     const result = users.filter((user) =>\r\n//       user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     console.log(\"result\", result);\r\n//     setUsers(result);\r\n//   };\r\n//   const onValueChange = (e) => {\r\n//     // console.log(e.currentTarget.value);\r\n//     const searchTerm = e.currentTarget.value;\r\n//     fetchUsers();\r\n//     // axios.get(\"http://localhost:9000/\").then((response) => {\r\n//     console.log(\"file: userContainer.js ~ line 82 ~ getData ~ offset\", offset);\r\n//     if (userData) {\r\n//       console.log(\"users for search\", userData);\r\n//       filterContent(userData, searchTerm);\r\n//     }\r\n//     // });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Router>\r\n//         <h2>Users List</h2>\r\n//         <div className=\"container text-right\">\r\n//           <Link to={{ pathname: `/adduser` }}>\r\n//             <button onClick={addUser} className=\"btn btn-primary btn-md m-1  \">\r\n//               ADD USER\r\n//             </button>\r\n//           </Link>\r\n//         </div>\r\n//         <div className=\"container mt-mb-10 text-left\">\r\n//           <div className=\"w-100 mt-mb-10  justify-content-left ui icon input\">\r\n//             {/* <SearchPage /> */}\r\n//             <input\r\n//               // ref={inputEl}\r\n//               type=\"search \"\r\n//               placeholder=\"Search Users\"\r\n//               className=\"mt-mb-7 form-control  \"\r\n//               // v\r\n//               name=\"searchTerm\"\r\n//               onChange={onValueChange}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\" container \">\r\n//           <table className=\"table mt-5 table-striped justify-content-center\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Name</th>\r\n//                 <th>Age</th>\r\n//                 <th>Email</th>\r\n//                 <th>Action</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"text-left\">\r\n//               {users.map((user) => (\r\n//                 <tr key={user._id}>\r\n//                   <td>{user.name}</td>\r\n//                   <td>{user.age}</td>\r\n//                   <td>{user.email}</td>\r\n//                   <td>\r\n//                     <Link\r\n//                       to={{\r\n//                         pathname: `/updateuser/${user._id}`,\r\n//                       }}\r\n//                     >\r\n//                       <button\r\n//                         onClick={<Redirect to=\"/updateuser/${user._id}\" />}\r\n//                         className=\"btn btn-success btn-sm m-1  \"\r\n//                         // component={Link}\r\n//                         // to={`/updateuser/${user._id}`}\r\n//                       >\r\n//                         UPDATE\r\n//                       </button>\r\n//                     </Link>\r\n//                     <button\r\n//                       onClick={() => {\r\n//                         deleteUserData(user._id, user.name);\r\n//                       }}\r\n//                       className=\"btn btn-danger btn-sm m-1 \"\r\n//                     >\r\n//                       DELETE\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <ReactPaginate\r\n//             previousLabel={\"prev\"}\r\n//             nextLabel={\"next\"}\r\n//             breakLabel={\"...\"}\r\n//             breakClassName={\"break-me\"}\r\n//             pageCount={pageCount}\r\n//             marginPagesDisplayed={2}\r\n//             pageRangeDisplayed={5}\r\n//             onPageChange={handlePageClick}\r\n//             containerClassName={\"pagination\"}\r\n//             subContainerClassName={\"pages pagination\"}\r\n//             activeClassName={\"active\"}\r\n//           />\r\n//         </div>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// };\r\n// const mapStateToProps = (state) => {\r\n//   console.log(\"state===>\", state.users, state.loading);\r\n//   const { users, loading } = state;\r\n//   // localStorage.setItem(\"useData\", JSON.stringify(users));\r\n//   return {\r\n//     userData: users,\r\n//     loadingData: loading,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     fetchUsers: () => dispatch(fetchUsers()),\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n"]},"metadata":{},"sourceType":"module"}